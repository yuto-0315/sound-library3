{"ast":null,"code":"var _jsxFileName = \"/Users/nakataniyuutomo/Desktop/Programing/\\u30BB\\u3099\\u30DF\\u958B\\u767A/sound-library2/src/pages/DAWPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\nconst DAWPage = () => {\n  _s();\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n\n  // LocalStorageからの自動復元機能\n  const loadAutoSavedProject = () => {\n    try {\n      const autoSavedData = localStorage.getItem('dawProjectAutoSave');\n      if (autoSavedData) {\n        const projectData = JSON.parse(autoSavedData);\n        console.log('自動保存データを復元中...', projectData);\n\n        // トラックカウンターの復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n\n        // 無効なクリップをフィルタリング\n        const validTracks = (projectData.tracks || []).map(track => ({\n          ...track,\n          clips: (track.clips || []).filter(clip => {\n            if (!clip.soundData || !clip.soundData.name) {\n              console.warn('自動保存データから無効なクリップを除外:', clip);\n              return false;\n            }\n            return true;\n          })\n        }));\n        return {\n          tracks: validTracks.length > 0 ? validTracks : [{\n            id: Date.now(),\n            name: 'トラック 1',\n            clips: []\n          }],\n          bpm: projectData.bpm || 120\n        };\n      }\n    } catch (error) {\n      console.error('自動保存データの復元に失敗:', error);\n    }\n    return {\n      tracks: [{\n        id: Date.now(),\n        name: 'トラック 1',\n        clips: []\n      }],\n      bpm: 120\n    };\n  };\n  const initialData = loadAutoSavedProject();\n  const [tracks, setTracks] = useState(initialData.tracks);\n  const [bpm, setBpm] = useState(initialData.bpm);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const dragOverTimeoutRef = useRef(null);\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n\n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    console.log('LocalStorageから読み込んだ音素材数:', savedSounds.length);\n\n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          console.log('音声データ復元中:', sound.name, 'データサイズ:', sound.audioData.length);\n\n          // Base64データの検証\n          if (!sound.audioData.includes(',')) {\n            console.error('無効なBase64フォーマット:', sound.name);\n            return sound;\n          }\n          const base64Data = sound.audioData.split(',')[1];\n          if (!base64Data || base64Data.length === 0) {\n            console.error('Base64データが空です:', sound.name);\n            return sound;\n          }\n          const byteCharacters = atob(base64Data);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n\n          // Blobサイズの検証\n          if (byteArray.length === 0) {\n            console.error('Blobデータが空です:', sound.name);\n            return sound;\n          }\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n          console.log('Blob復元成功:', sound.name, 'サイズ:', blob.size, 'タイプ:', blob.type);\n\n          // Blobの有効性を確認\n          if (blob.size === 0) {\n            console.error('作成されたBlobのサイズが0です:', sound.name);\n            return sound;\n          }\n          return {\n            ...sound,\n            audioBlob: blob\n          };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n\n    // 有効な音素材のみをフィルタリング\n    const validSounds = soundsWithBlob.filter(sound => {\n      if (!sound.audioBlob) {\n        console.warn('audioBlobが存在しない音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (!(sound.audioBlob instanceof Blob)) {\n        console.warn('無効なBlob形式の音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (sound.audioBlob.size === 0) {\n        console.warn('サイズが0のBlob音素材をスキップ:', sound.name);\n        return false;\n      }\n      return true;\n    });\n    console.log('有効な音素材数:', validSounds.length, '/ 総数:', soundsWithBlob.length);\n    setSounds(validSounds);\n\n    // 無効な音素材があった場合はLocalStorageを更新\n    if (validSounds.length !== soundsWithBlob.length) {\n      console.log('無効な音素材を除去してLocalStorageを更新');\n      const validSoundsForStorage = validSounds.map(sound => ({\n        ...sound,\n        audioBlob: undefined // Blobは保存しない\n      }));\n      localStorage.setItem('soundRecordings', JSON.stringify(validSoundsForStorage));\n    }\n    return () => {\n      if (ctx && ctx.state !== 'closed') {\n        ctx.close().catch(error => {\n          console.warn('初期AudioContext のクローズに失敗:', error);\n        });\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n      // 再生中の音声をすべて停止・クリーンアップ\n      // useEffect内でplayingAudiosの最新値を取得\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({\n          audio,\n          timeoutId,\n          audioUrl\n        }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map(); // 空のMapを返す\n      });\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n      if (window.currentDraggedSound) {\n        window.currentDraggedSound = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm) => {\n    return new Promise(async resolve => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          console.log('AudioContext方式で音声長さを取得中...');\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          console.log('AudioContext方式で取得した長さ:', durationInSeconds, '秒');\n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            const pixelsPerSecond = currentBpm / 60 * 100;\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            console.log('AudioContext計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm / 60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.log('AudioContext方式でエラー:', error);\n        }\n      }\n\n      // AudioContextが失敗した場合はデフォルト値を使用\n      console.log('AudioContextが利用できないため、デフォルト値を使用');\n      resolve(400);\n    });\n  }, [audioContext, bpm]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = bpm / 60 * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n\n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n\n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = bpm / 60 * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - timeInSeconds * 1000);\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async newBpm => {\n    setBpm(newBpm);\n\n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(tracks.map(async track => {\n      const updatedClips = await Promise.all(track.clips.map(async clip => {\n        if (clip.soundData && clip.soundData.audioBlob) {\n          try {\n            const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n            return {\n              ...clip,\n              duration: newDuration\n            };\n          } catch (error) {\n            console.warn('クリップのduration更新に失敗:', error);\n            return clip;\n          }\n        }\n        return clip;\n      }));\n      return {\n        ...track,\n        clips: updatedClips\n      };\n    }));\n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null,\n          // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current\n      };\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('プロジェクトを保存しました');\n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n\n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = soundData => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], {\n                type: 'audio/wav'\n              });\n              return {\n                ...soundData,\n                audioBlob: blob\n              };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n\n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips.map(clip => ({\n              ...clip,\n              soundData: restoreAudioBlob(clip.soundData)\n            })).filter(clip => {\n              // 無効なクリップを除外\n              if (!clip.soundData || !clip.soundData.name) {\n                console.warn('無効なクリップを除外:', clip);\n                return false;\n              }\n              return true;\n            })\n          }));\n          setTracks(restoredTracks);\n          console.log('トラックデータを復元しました:', restoredTracks.length, 'トラック');\n        }\n\n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n\n        // 音素材を復元（既存の音素材に追加）\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n\n          // 既存の音素材と読み込んだ音素材を結合\n          setSounds(prevSounds => {\n            const maxId = prevSounds.length > 0 ? Math.max(...prevSounds.map(s => s.id)) : 0;\n            const existingNames = new Set(prevSounds.map(s => s.name));\n            const newSounds = restoredSounds.map((sound, index) => {\n              let newName = sound.name;\n              let counter = 1;\n\n              // 名前の重複をチェックして、重複する場合は番号を付ける\n              while (existingNames.has(newName)) {\n                newName = `${sound.name} (${counter})`;\n                counter++;\n              }\n              existingNames.add(newName);\n              return {\n                ...sound,\n                id: maxId + index + 1,\n                // 新しいIDを割り当て\n                name: newName // 重複しない名前を設定\n              };\n            });\n            console.log('音素材を追加しました:', newSounds.length, '個（既存:', prevSounds.length, '個）');\n            return [...prevSounds, ...newSounds];\n          });\n        }\n        console.log('プロジェクトを読み込みました');\n        setError(null);\n\n        // 読み込み後に自動保存データも更新\n        setTimeout(() => {\n          const autoSaveData = {\n            version: '1.0',\n            bpm: projectData.bpm || 120,\n            tracks: projectData.tracks || [],\n            timestamp: Date.now(),\n            trackNameCounter: projectData.trackNameCounter || 1,\n            trackIdCounter: projectData.trackIdCounter || 1\n          };\n          localStorage.setItem('dawProjectAutoSave', JSON.stringify(autoSaveData));\n          console.log('読み込み後の自動保存データを更新しました');\n        }, 100);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = bpm / 60 * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({\n        sampleRate: 44100\n      });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              const pixelsPerSecond = bpm / 60 * 100;\n              const startTimeInSamples = Math.floor(clip.startTime / pixelsPerSecond * exportContext.sampleRate);\n\n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                for (let i = 0; i < sourceData.length && startTimeInSamples + i < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n\n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && startTimeInSamples + i < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('音源を出力しました');\n      if (exportContext && exportContext.state !== 'closed') {\n        await exportContext.close().catch(error => {\n          console.warn('Export AudioContext のクローズに失敗:', error);\n        });\n      }\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = buffer => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n\n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n\n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    return new Blob([arrayBuffer], {\n      type: 'audio/wav'\n    });\n  };\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n\n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n  const removeTrack = trackId => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    console.log('ドロップ処理開始:', {\n      trackId,\n      timePosition,\n      draggedClip\n    });\n    try {\n      // 8分音符に合わせて位置を調整（50px単位）\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n\n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n\n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => clip.id === draggedClip.id ? updatedClip : clip)\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n\n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n\n      // soundDataの必要なプロパティをチェック\n      if (!soundData.name) {\n        console.error('音素材の名前が見つかりません:', soundData);\n        setError('音素材の名前が不正です。再度お試しください。');\n        return;\n      }\n\n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n\n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      console.log('新しい音素材のドロップ:', {\n        soundData,\n        hasAudioBlob: !!soundData.audioBlob\n      });\n\n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n      const newClip = {\n        id: Date.now() + Math.random(),\n        // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n      console.log('作成されたクリップ:', newClip);\n      console.log('現在のトラック数:', tracks.length);\n      console.log('対象トラックID:', trackId);\n      console.log('対象トラック:', tracks.find(t => t.id === trackId));\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        console.log('更新前のトラック:', prevTracks.find(t => t.id === trackId));\n        const updatedTracks = prevTracks.map(track => track.id === trackId ? {\n          ...track,\n          clips: [...track.clips, newClip]\n        } : track);\n        console.log('更新後のトラック:', updatedTracks.find(t => t.id === trackId));\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n\n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n\n    // スロットリング - 16ms（60FPS）間隔で実行を制限\n    if (dragOverTimeoutRef.current) {\n      return;\n    }\n\n    // 必要な情報を事前に抽出\n    const clientX = e.clientX;\n    const currentTarget = e.currentTarget;\n    dragOverTimeoutRef.current = setTimeout(() => {\n      dragOverTimeoutRef.current = null;\n      updateDragPreview(clientX, currentTarget);\n    }, 16);\n  };\n  const updateDragPreview = (clientX, trackElement) => {\n    // null チェックを追加\n    if (!trackElement || !timelineRef.current) {\n      return;\n    }\n    try {\n      // ドラッグプレビューの更新\n      const rect = trackElement.getBoundingClientRect();\n      const timePosition = clientX - rect.left;\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      const trackRect = trackElement.getBoundingClientRect();\n      const tracksAreaRect = timelineRef.current.getBoundingClientRect();\n      if (tracksAreaRect && trackElement.dataset && trackElement.dataset.trackId) {\n        const relativeTop = trackRect.top - tracksAreaRect.top;\n        const trackId = parseInt(trackElement.dataset.trackId);\n\n        // trackIdが有効な数値かチェック\n        if (isNaN(trackId)) {\n          return;\n        }\n\n        // プレビュー幅を決定\n        let previewWidth = 400; // デフォルト値（1小節）\n\n        if (draggedClip) {\n          // 既存クリップの場合\n          previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 ? draggedClip.duration : 400;\n        } else {\n          // 新しい音素材の場合、事前に計算された長さを使用\n          previewWidth = draggedSoundDuration;\n        }\n        setDragPreview({\n          left: snappedPosition,\n          top: relativeTop + 10,\n          width: previewWidth,\n          trackId: trackId\n        });\n      }\n    } catch (error) {\n      console.warn('ドラッグプレビュー更新エラー:', error);\n      // エラーが発生した場合はプレビューをクリア\n      setDragPreview(null);\n    }\n  };\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => track.id === trackId ? {\n      ...track,\n      clips: track.clips.filter(clip => clip.id !== clipId)\n    } : track));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({\n      ...clip,\n      originalTrackId\n    });\n  };\n\n  // ドラッグ状態の完全なクリーンアップ\n  const cleanupDragState = useCallback(() => {\n    // ドラッグオーバーのタイムアウトをクリア\n    if (dragOverTimeoutRef.current) {\n      clearTimeout(dragOverTimeoutRef.current);\n      dragOverTimeoutRef.current = null;\n    }\n\n    // すべてのドラッグ関連の状態をリセット\n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400);\n\n    // DOM要素のクリーンアップ\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n\n    // モバイル用のドラッグプレビューを削除\n    const mobileDragPreview = document.querySelector('.mobile-drag-preview');\n    if (mobileDragPreview) {\n      mobileDragPreview.remove();\n    }\n\n    // グローバル変数のクリーンアップ\n    if (window.currentDraggedSoundBlob) {\n      window.currentDraggedSoundBlob = null;\n    }\n    if (window.currentDraggedSound) {\n      window.currentDraggedSound = null;\n    }\n\n    // ボディクラスのクリーンアップ\n    document.body.classList.remove('dragging');\n  }, []);\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = e => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e && e.dataTransfer && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n\n    // 完全なクリーンアップ\n    cleanupDragState();\n  };\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      setIsPlaying(true);\n\n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = bpm / 60 * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n\n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + clip.duration / pixelsPerSecond;\n\n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', {\n              clipStartTimeInSeconds,\n              clipEndTimeInSeconds\n            });\n            return;\n          }\n\n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    var _clip$soundData;\n    console.log('scheduleClipPlayback:', {\n      clip,\n      hasAudioBlob: !!((_clip$soundData = clip.soundData) !== null && _clip$soundData !== void 0 && _clip$soundData.audioBlob)\n    });\n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n\n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        playingAudiosMap.set(clip.id, {\n          audio,\n          timeoutId,\n          audioUrl\n        });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      var _clip$soundData2, _clip$soundData3, _clip$soundData4, _clip$soundData5, _clip$soundData6;\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: (_clip$soundData2 = clip.soundData) === null || _clip$soundData2 === void 0 ? void 0 : _clip$soundData2.name,\n        hasAudioData: !!((_clip$soundData3 = clip.soundData) !== null && _clip$soundData3 !== void 0 && _clip$soundData3.audioData),\n        hasAudioBlob: !!((_clip$soundData4 = clip.soundData) !== null && _clip$soundData4 !== void 0 && _clip$soundData4.audioBlob),\n        audioBlobType: typeof ((_clip$soundData5 = clip.soundData) === null || _clip$soundData5 === void 0 ? void 0 : _clip$soundData5.audioBlob),\n        isInstanceOfBlob: ((_clip$soundData6 = clip.soundData) === null || _clip$soundData6 === void 0 ? void 0 : _clip$soundData6.audioBlob) instanceof Blob\n      });\n\n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        console.log('audioDataからBlobを再作成中...');\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n\n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n\n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n  const pause = () => {\n    setIsPlaying(false);\n\n    // 再生中の音声を一時停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n\n    // 再生中の音声を停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    setPlayingAudios(new Map());\n  };\n\n  // タイムラインデータの自動保存機能\n  useEffect(() => {\n    const autoSaveProject = () => {\n      try {\n        const projectData = {\n          version: '1.0',\n          bpm: bpm,\n          tracks: tracks,\n          timestamp: Date.now(),\n          trackNameCounter: trackNameCounterRef.current,\n          trackIdCounter: trackIdCounterRef.current\n        };\n        localStorage.setItem('dawProjectAutoSave', JSON.stringify(projectData));\n        console.log('プロジェクトを自動保存しました:', {\n          tracksCount: tracks.length,\n          bpm: bpm,\n          totalClips: tracks.reduce((total, track) => total + track.clips.length, 0)\n        });\n      } catch (error) {\n        console.error('プロジェクトの自動保存に失敗:', error);\n      }\n    };\n\n    // 初期化後の自動保存（tracksやbpmが変更された時）\n    if (tracks.length > 0) {\n      autoSaveProject();\n    }\n  }, [tracks, bpm]);\n\n  // 音素材の更新監視（他のページで音が追加された場合の対応）\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        // ページが表示されたときに音素材を再読み込み\n        const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n        console.log('ページ表示時の音素材再読み込み - 件数:', savedSounds.length);\n\n        // 音声データ復元処理（既存のロジックを再利用）\n        const soundsWithBlob = savedSounds.map(sound => {\n          if (sound.audioData) {\n            try {\n              const base64Data = sound.audioData.split(',')[1];\n              if (!base64Data || base64Data.length === 0) {\n                return sound;\n              }\n              const byteCharacters = atob(base64Data);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], {\n                type: 'audio/wav'\n              });\n              return {\n                ...sound,\n                audioBlob: blob\n              };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', sound.name, error);\n              return sound;\n            }\n          }\n          return sound;\n        });\n        const validSounds = soundsWithBlob.filter(sound => sound.audioBlob && sound.audioBlob instanceof Blob && sound.audioBlob.size > 0);\n        setSounds(validSounds);\n        console.log('音素材更新完了 - 有効件数:', validSounds.length);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  // 自動保存データをクリアする機能\n  const clearAutoSave = () => {\n    try {\n      localStorage.removeItem('dawProjectAutoSave');\n      console.log('自動保存データをクリアしました');\n\n      // 初期状態にリセット\n      setTracks([{\n        id: Date.now(),\n        name: 'トラック 1',\n        clips: []\n      }]);\n      setBpm(120);\n      trackNameCounterRef.current = 1;\n      trackIdCounterRef.current = 1;\n      setError(null);\n      alert('✅ プロジェクトをリセットしました');\n    } catch (error) {\n      console.error('自動保存データのクリアに失敗:', error);\n      setError('プロジェクトのリセットに失敗しました');\n    }\n  };\n\n  // 無効なクリップを除外する関数\n  const cleanupInvalidClips = () => {\n    setTracks(prevTracks => {\n      const cleanedTracks = prevTracks.map(track => ({\n        ...track,\n        clips: track.clips.filter(clip => {\n          if (!clip.soundData || !clip.soundData.name) {\n            console.warn('無効なクリップを除外:', clip);\n            return false;\n          }\n          return true;\n        })\n      }));\n      const removedCount = prevTracks.reduce((total, track) => total + track.clips.length, 0) - cleanedTracks.reduce((total, track) => total + track.clips.length, 0);\n      if (removedCount > 0) {\n        console.log(`${removedCount}個の無効なクリップを除外しました`);\n      }\n      return cleanedTracks;\n    });\n  };\n\n  // 初期化時に無効なクリップをクリーンアップ\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      cleanupInvalidClips();\n    }, 1000); // 1秒後に実行\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // コンポーネントアンマウント時の包括的クリーンアップ\n  useEffect(() => {\n    return () => {\n      // ドラッグ状態のクリーンアップ\n      cleanupDragState();\n\n      // 再生中の音声をすべて停止\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({\n          audio,\n          timeoutId,\n          audioUrl\n        }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map();\n      });\n\n      // AudioContextをクリーンアップ\n      if (audioContext && audioContext.state !== 'closed') {\n        audioContext.close().catch(error => {\n          console.warn('AudioContext のクローズに失敗:', error);\n        });\n      }\n\n      // アニメーションフレームをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n\n      // タイムアウトをクリア\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n    };\n  }, [cleanupDragState, audioContext]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daw-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB9 \\u97F3\\u697D\\u3065\\u304F\\u308A\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u97F3\\u7D20\\u6750\\u3092\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u97F3\\u697D\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u3087\\u3046\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-controls card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transport-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `transport-btn play-btn ${isPlaying ? 'playing' : ''}`,\n          onClick: isPlaying ? pause : play,\n          children: isPlaying ? '⏸️' : '▶️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transport-btn stop-btn\",\n          onClick: stop,\n          children: \"\\u23F9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpm-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bpm\",\n          children: \"\\uD83C\\uDFB5 BPM:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bpm\",\n          type: \"number\",\n          value: bpm,\n          onChange: e => handleBpmChange(parseInt(e.target.value)),\n          min: \"60\",\n          max: \"200\",\n          className: \"bpm-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: addTrack,\n          children: \"\\u2795 \\u30C8\\u30E9\\u30C3\\u30AF\\u8FFD\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: () => setShowSoundPanel(!showSoundPanel),\n          children: showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: saveProject,\n          children: \"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"button-secondary file-input-label\",\n          children: [\"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: loadProject,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-warning\",\n          onClick: () => {\n            if (window.confirm('🗑️ プロジェクトをリセットしますか？\\n\\n現在の作業内容がすべて削除されます。')) {\n              clearAutoSave();\n            }\n          },\n          title: \"\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\uFF08\\u81EA\\u52D5\\u4FDD\\u5B58\\u30C7\\u30FC\\u30BF\\u3082\\u30AF\\u30EA\\u30A2\\uFF09\",\n          children: \"\\uD83D\\uDDD1\\uFE0F \\u30EA\\u30BB\\u30C3\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: exportAudio,\n          disabled: isExporting,\n          children: isExporting ? '🔄 出力中...' : '🎧 音源出力'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sound-panel ${!showSoundPanel ? 'panel-hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDFB5 \\u97F3\\u7D20\\u6750\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sound-panel-close\",\n            onClick: () => setShowSoundPanel(false),\n            title: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u3092\\u9589\\u3058\\u308B\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-list\",\n          children: sounds.length > 0 ? sounds.map(sound => /*#__PURE__*/_jsxDEV(SoundItem, {\n            sound: sound,\n            onDragStart: async sound => {\n              // ドラッグ開始時に音声の長さを計算\n              console.log('ドラッグ開始 - 音声長さ計算中:', sound.name);\n              if (sound.audioBlob) {\n                try {\n                  const duration = await getAudioDuration(sound.audioBlob, bpm);\n                  console.log('計算された音声長さ:', duration, 'px');\n                  setDraggedSoundDuration(duration);\n                } catch (error) {\n                  console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                  setDraggedSoundDuration(400);\n                }\n              } else {\n                console.log('audioBlob が存在しません - デフォルト値使用');\n                setDraggedSoundDuration(400);\n              }\n            }\n          }, sound.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1383,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sounds\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u97F3\\u7D20\\u6750\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u97F3\\u3092\\u9332\\u97F3\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1408,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1406,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `daw-workspace ${!showSoundPanel ? 'panel-hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-header-spacer\",\n            children: \"\\u30BF\\u30A4\\u30E0\\u30E9\\u30A4\\u30F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1416,\n            columnNumber: 13\n          }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(TrackHeader, {\n            track: track,\n            onRemove: removeTrack,\n            trackHeight: trackHeight\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(Timeline, {\n            bpm: bpm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tracks-area\",\n            ref: timelineRef,\n            style: {\n              minWidth: TOTAL_MEASURES * MEASURE_WIDTH\n            },\n            children: [/*#__PURE__*/_jsxDEV(Playhead, {\n              currentTime: currentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 15\n            }, this), dragPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drag-preview\",\n              style: {\n                left: dragPreview.left,\n                top: dragPreview.top,\n                width: dragPreview.width\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 17\n            }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n              track: track,\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onRemoveClip: removeClip,\n              onClipDragStart: handleClipDragStart,\n              onDragEnd: handleDragEnd,\n              trackHeight: trackHeight,\n              bpm: bpm\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1444,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1431,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCD6 \\u4F7F\\u3044\\u65B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDDA5\\uFE0F PC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1464,\n            columnNumber: 15\n          }, this), \" \\u5DE6\\u5074\\u306E\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u304B\\u3089\\u97F3\\u7D20\\u6750\\u3092\\u30C8\\u30E9\\u30C3\\u30AF\\u306B\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u914D\\u7F6E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30DB/\\u30BF\\u30D6\\u30EC\\u30C3\\u30C8:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1465,\n            columnNumber: 15\n          }, this), \" \\u97F3\\u7D20\\u6750\\u3092\\u9577\\u62BC\\u3057\\u3057\\u3066\\u304B\\u3089\\u30C8\\u30E9\\u30C3\\u30AF\\u307E\\u3067\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u914D\\u7F6E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u914D\\u7F6E\\u6E08\\u307F\\u306E\\u97F3\\u7D20\\u6750\\u3082\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u5225\\u306E\\u5834\\u6240\\u306B\\u79FB\\u52D5\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u914D\\u7F6E\\u4E88\\u5B9A\\u4F4D\\u7F6E\\u306B\\u9752\\u3044\\u5F71\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u306F8\\u5206\\u97F3\\u7B26\\uFF08\\u88CF\\u62CD\\u542B\\u3080\\uFF09\\u306B\\u5408\\u308F\\u305B\\u3066\\u81EA\\u52D5\\u7684\\u306B\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u306E\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u500B\\u5225\\u306B\\u97F3\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u518D\\u751F\\u3001\\u23F8\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u4E00\\u6642\\u505C\\u6B62\\u3001\\u23F9\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u505C\\u6B62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"BPM\\u3092\\u5909\\u66F4\\u3057\\u3066\\u97F3\\u697D\\u306E\\u901F\\u3055\\u3092\\u8ABF\\u6574\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u8FFD\\u52A0\\u3057\\u3066\\u8907\\u6570\\u306E\\u97F3\\u3092\\u91CD\\u306D\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1473,\n            columnNumber: 15\n          }, this), \" \\u7DE8\\u96C6\\u4E2D\\u306E\\u30C7\\u30FC\\u30BF\\u3092JSON\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u4FDD\\u5B58\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1474,\n            columnNumber: 15\n          }, this), \" \\u4FDD\\u5B58\\u3057\\u305F\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u7DE8\\u96C6\\u3092\\u518D\\u958B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFA7 \\u97F3\\u6E90\\u51FA\\u529B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 15\n          }, this), \" \\u5B8C\\u6210\\u3057\\u305F\\u697D\\u66F2\\u3092WAV\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u51FA\\u529B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDDD1\\uFE0F \\u30EA\\u30BB\\u30C3\\u30C8:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1476,\n            columnNumber: 15\n          }, this), \" \\u73FE\\u5728\\u306E\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\u3057\\u3066\\u65B0\\u3057\\u304F\\u59CB\\u3081\\u308B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-save-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCBE \\u81EA\\u52D5\\u4FDD\\u5B58\\u6A5F\\u80FD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u81EA\\u52D5\\u4FDD\\u5B58:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1481,\n              columnNumber: 17\n            }, this), \" \\u30C8\\u30E9\\u30C3\\u30AF\\u3084BPM\\u306E\\u5909\\u66F4\\u306F\\u81EA\\u52D5\\u7684\\u306B\\u4FDD\\u5B58\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u4ED6\\u30DA\\u30FC\\u30B8\\u3068\\u306E\\u9023\\u643A:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1482,\n              columnNumber: 17\n            }, this), \" \\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u9332\\u97F3\\u3057\\u305F\\u97F3\\u306F\\u81EA\\u52D5\\u7684\\u306B\\u53CD\\u6620\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u5FA9\\u5143\\u6A5F\\u80FD:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1483,\n              columnNumber: 17\n            }, this), \" \\u30DA\\u30FC\\u30B8\\u3092\\u30EA\\u30ED\\u30FC\\u30C9\\u3057\\u3066\\u3082\\u4F5C\\u696D\\u5185\\u5BB9\\u304C\\u81EA\\u52D5\\u7684\\u306B\\u5FA9\\u5143\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u5B89\\u5FC3\\u3057\\u3066\\u79FB\\u52D5:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1484,\n              columnNumber: 17\n            }, this), \" \\u4ED6\\u306E\\u30DA\\u30FC\\u30B8\\u306B\\u79FB\\u52D5\\u3057\\u3066\\u3082\\u4F5C\\u696D\\u5185\\u5BB9\\u306F\\u4FDD\\u6301\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30FC\\u30C8\\u30D5\\u30A9\\u30F3\\u5229\\u7528\\u306E\\u30B3\\u30C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u97F3\\u7D20\\u6750\\u3092\\u8EFD\\u304F\\u9577\\u62BC\\u3057\\u3059\\u308B\\u3068\\u30C9\\u30E9\\u30C3\\u30B0\\u30E2\\u30FC\\u30C9\\u306B\\u306A\\u308A\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u753B\\u9762\\u304C\\u30B9\\u30AF\\u30ED\\u30FC\\u30EB\\u3057\\u306A\\u3044\\u3088\\u3046\\u5236\\u5FA1\\u3055\\u308C\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u9752\\u304F\\u30CF\\u30A4\\u30E9\\u30A4\\u30C8\\u3055\\u308C\\u305F\\u30C8\\u30E9\\u30C3\\u30AF\\u3067\\u6307\\u3092\\u96E2\\u3059\\u3068\\u97F3\\u7D20\\u6750\\u304C\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u6A2A\\u753B\\u9762\\u8868\\u793A\\u306B\\u3059\\u308B\\u3068\\u3088\\u308A\\u4F7F\\u3044\\u3084\\u3059\\u304F\\u306A\\u308A\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1493,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1285,\n    columnNumber: 5\n  }, this);\n};\n_s(DAWPage, \"Mb3xxiPPMEdR0DAb/ADX8dlK+T4=\");\n_c = DAWPage;\nconst SoundItem = ({\n  sound,\n  onDragStart\n}) => {\n  _s2();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n  const handleDragStart = e => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n\n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n\n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setIsDragging(false);\n\n    // 長押し判定用のタイマーは設定せず、移動検知でのみドラッグを開始\n  };\n  const handleTouchMove = e => {\n    if (!touchStart) return;\n    const touch = e.touches[0];\n    const currentPos = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    setTouchMove(currentPos);\n\n    // ドラッグ開始の判定（15px以上移動）- 閾値を上げてより意図的な移動のみドラッグ扱い\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    if (!isDragging && (deltaX > 15 || deltaY > 15)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n\n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n\n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n\n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n\n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n\n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n  const handleTouchEnd = e => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n\n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n\n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n\n    // SoundItem 内での直接クリーンアップ\n    document.body.classList.remove('dragging');\n\n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n\n    // モバイル用のドラッグプレビューを削除\n    const mobileDragPreview = document.querySelector('.mobile-drag-preview');\n    if (mobileDragPreview) {\n      mobileDragPreview.remove();\n    }\n\n    // グローバル変数をクリア\n    if (window.currentDraggedSoundBlob) {\n      window.currentDraggedSoundBlob = null;\n    }\n    if (window.currentDraggedSound) {\n      window.currentDraggedSound = null;\n    }\n  };\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      // Blobの有効性をチェック\n      if (!(sound.audioBlob instanceof Blob) || sound.audioBlob.size === 0) {\n        var _sound$audioBlob;\n        console.error('無効なaudioBlob:', {\n          name: sound.name,\n          isBlob: sound.audioBlob instanceof Blob,\n          size: (_sound$audioBlob = sound.audioBlob) === null || _sound$audioBlob === void 0 ? void 0 : _sound$audioBlob.size\n        });\n        return;\n      }\n      const audio = new Audio();\n      let audioUrl;\n      try {\n        audioUrl = URL.createObjectURL(sound.audioBlob);\n        audio.src = audioUrl;\n        audio.play().then(() => {\n          setIsPlaying(true);\n          const handleEnded = () => {\n            setIsPlaying(false);\n            if (audioUrl) {\n              URL.revokeObjectURL(audioUrl); // URLをクリーンアップ\n            }\n            audio.removeEventListener('ended', handleEnded);\n          };\n          audio.addEventListener('ended', handleEnded);\n\n          // 音声の読み込みエラーもハンドリング\n          audio.addEventListener('error', error => {\n            console.error('音声読み込みエラー:', error);\n            setIsPlaying(false);\n            if (audioUrl) {\n              URL.revokeObjectURL(audioUrl);\n            }\n          });\n        }).catch(error => {\n          console.error('音声再生エラー:', error);\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl); // エラー時もクリーンアップ\n          }\n          setIsPlaying(false);\n        });\n      } catch (error) {\n        console.error('createObjectURLエラー:', error);\n        setIsPlaying(false);\n      }\n    } else {\n      console.log('再生条件不満足:', {\n        hasAudioBlob: !!sound.audioBlob,\n        isPlaying,\n        isDragging\n      });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = useCallback(() => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  }, [isDragging, touchMove, sound.name]);\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove, createDragPreview]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sound-item ${isDragging ? 'dragging' : ''}`,\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: sound.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-tags\",\n        children: sound.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-tag\",\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1744,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1742,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1740,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-sound-btn\",\n        onClick: playSound,\n        disabled: isPlaying,\n        children: isPlaying ? '⏸️' : '▶️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1749,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1748,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1732,\n    columnNumber: 5\n  }, this);\n};\n_s2(SoundItem, \"RkxO1xburwD1wlHDqN3nCO+JHik=\");\n_c2 = SoundItem;\nconst TrackHeader = ({\n  track,\n  onRemove,\n  trackHeight\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track-header\",\n    style: {\n      height: trackHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1765,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-track-btn\",\n          onClick: () => onRemove(track.id),\n          title: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u524A\\u9664\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1766,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1763,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TrackHeader;\nconst Timeline = ({\n  bpm\n}) => {\n  const measures = TOTAL_MEASURES; // 16小節表示\n  const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    style: {\n      minWidth: TOTAL_MEASURES * MEASURE_WIDTH\n    },\n    children: Array.from({\n      length: measures\n    }, (_, measureIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"measure\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measure-number\",\n        children: measureIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1788,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beats\",\n        children: Array.from({\n          length: beatsPerMeasure\n        }, (_, beatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"beat\",\n          style: {\n            width: BEAT_WIDTH\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"beat-main\",\n            children: beatIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1796,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"beat-sub\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-beat-marker\",\n              children: \"\\u30FB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1800,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1799,\n            columnNumber: 17\n          }, this)]\n        }, beatIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1791,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1789,\n        columnNumber: 11\n      }, this)]\n    }, measureIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1785,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Timeline;\nconst Track = ({\n  track,\n  onDrop,\n  onDragOver,\n  onRemoveClip,\n  onClipDragStart,\n  onDragEnd,\n  trackHeight,\n  bpm\n}) => {\n  _s3();\n  const handleDrop = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = useCallback(e => {\n    const {\n      trackId,\n      timePosition,\n      sound\n    } = e.detail;\n\n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: type => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    onDrop(mockDropEvent, trackId, timePosition);\n  }, [onDrop]);\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = useCallback(e => {\n    const {\n      clip,\n      newTrackId,\n      timePosition\n    } = e.detail;\n\n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: type => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    onDrop(mockDropEvent, newTrackId, timePosition);\n  }, [onDrop]);\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n      };\n    }\n  }, [track.id, handleMobileDrop, handleMobileClipMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track\",\n    style: {\n      height: trackHeight\n    },\n    \"data-track-id\": track.id,\n    onDrop: handleDrop,\n    onDragOver: onDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-grid\",\n      children: [Array.from({\n        length: TOTAL_BEATS\n      }, (_, index) => {\n        const isFirstBeat = index === 0;\n        const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n        const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className,\n          style: {\n            left: index * BEAT_WIDTH\n          }\n        }, `main-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1885,\n          columnNumber: 13\n        }, this);\n      }), Array.from({\n        length: TOTAL_BEATS\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beat-line beat-line-sub\",\n        style: {\n          left: index * BEAT_WIDTH + SUB_BEAT_WIDTH\n        }\n      }, `sub-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1890,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1878,\n      columnNumber: 7\n    }, this), track.clips.map(clip => /*#__PURE__*/_jsxDEV(AudioClip, {\n      clip: clip,\n      trackId: track.id,\n      onRemove: () => onRemoveClip(track.id, clip.id),\n      onDragStart: onClipDragStart,\n      onDragEnd: onDragEnd\n    }, clip.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1895,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1871,\n    columnNumber: 5\n  }, this);\n};\n_s3(Track, \"+PNnKtwbfdVN4ND8buII9hSRziA=\");\n_c5 = Track;\nconst AudioClip = ({\n  clip,\n  trackId,\n  onRemove,\n  onDragStart,\n  onDragEnd\n}) => {\n  _s4();\n  var _clip$soundData7;\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n  React.useEffect(() => {\n    // clip.soundData が存在する場合のみ波形データを生成\n    if (clip && clip.soundData) {\n      // 簡単な波形データ生成（実際の実装では音声解析が必要）\n      const generateWaveform = () => {\n        const points = 20; // 波形のポイント数\n        const data = [];\n        for (let i = 0; i < points; i++) {\n          data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n        }\n        setWaveformData(data);\n      };\n      generateWaveform();\n    }\n  }, [clip, clip === null || clip === void 0 ? void 0 : clip.soundData]);\n\n  // clip.soundData の安全性をチェック（Hooksの後で）\n  if (!clip || !clip.soundData) {\n    console.warn('無効なクリップデータ:', clip);\n    return null; // 無効なクリップは表示しない\n  }\n  const handleDragStart = e => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n\n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = e => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setIsDragging(false);\n\n    // ドラッグモードは移動が確定してから有効化\n  };\n  const handleTouchMove = e => {\n    if (!touchStart) return;\n    const touch = e.touches[0];\n    const currentPos = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    setTouchMove(currentPos);\n\n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      onDragStart(clip, trackId);\n    }\n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n\n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n\n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n\n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n  const handleTouchEnd = e => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n\n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n\n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n\n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n\n    // ドラッグプレビューをクリア（親コンポーネントの状態もリセット）\n    if (onDragEnd) {\n      onDragEnd(null); // nullを渡してガード条件を満たす\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `audio-clip ${isDragging ? 'dragging' : ''}`,\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onDragEnd: onDragEnd,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    style: {\n      left: clip.startTime,\n      width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clip-name\",\n        children: ((_clip$soundData7 = clip.soundData) === null || _clip$soundData7 === void 0 ? void 0 : _clip$soundData7.name) || '不明な音素材'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2051,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-clip-btn\",\n        onClick: onRemove,\n        title: \"\\u30AF\\u30EA\\u30C3\\u30D7\\u3092\\u524A\\u9664\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2052,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2050,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-waveform\",\n      children: waveformData.length > 0 ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"waveform-svg\",\n        width: \"100%\",\n        height: \"30\",\n        children: waveformData.map((height, index) => /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: `${index / waveformData.length * 100}%`,\n          y: `${(1 - height) * 15}`,\n          width: `${80 / waveformData.length}%`,\n          height: `${height * 30}`,\n          fill: \"rgba(255, 255, 255, 0.8)\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2064,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2062,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform-placeholder\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2075,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2060,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2037,\n    columnNumber: 5\n  }, this);\n};\n_s4(AudioClip, \"NeAysvgdzDwGIytG3p5NplFZv3M=\");\n_c6 = AudioClip;\nconst Playhead = ({\n  currentTime\n}) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playhead\",\n    style: {\n      left: safeCurrentTime\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2087,\n    columnNumber: 5\n  }, this);\n};\n_c7 = Playhead;\nexport default DAWPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DAWPage\");\n$RefreshReg$(_c2, \"SoundItem\");\n$RefreshReg$(_c3, \"TrackHeader\");\n$RefreshReg$(_c4, \"Timeline\");\n$RefreshReg$(_c5, \"Track\");\n$RefreshReg$(_c6, \"AudioClip\");\n$RefreshReg$(_c7, \"Playhead\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","BEAT_WIDTH","BEATS_PER_MEASURE","MEASURE_WIDTH","SUB_BEAT_WIDTH","TOTAL_MEASURES","TOTAL_BEATS","DAWPage","_s","trackIdCounterRef","trackNameCounterRef","loadAutoSavedProject","autoSavedData","localStorage","getItem","projectData","JSON","parse","console","log","trackNameCounter","current","trackIdCounter","validTracks","tracks","map","track","clips","filter","clip","soundData","name","warn","length","id","Date","now","bpm","error","initialData","setTracks","setBpm","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioContext","setAudioContext","trackHeight","playingAudios","setPlayingAudios","Map","startPlayTime","setStartPlayTime","setError","sounds","setSounds","showSoundPanel","setShowSoundPanel","draggedClip","setDraggedClip","dragPreview","setDragPreview","draggedSoundDuration","setDraggedSoundDuration","isExporting","setIsExporting","timelineRef","animationFrameRef","dragOverTimeoutRef","ctx","window","AudioContext","webkitAudioContext","savedSounds","soundsWithBlob","sound","audioData","includes","base64Data","split","byteCharacters","atob","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","size","audioBlob","validSounds","validSoundsForStorage","undefined","setItem","stringify","state","close","catch","cancelAnimationFrame","clearTimeout","currentPlayingAudios","forEach","audio","timeoutId","audioUrl","pause","src","URL","revokeObjectURL","currentDraggedSoundBlob","currentDraggedSound","getAudioDuration","currentBpm","Promise","resolve","arrayBuffer","audioBuffer","decodeAudioData","durationInSeconds","duration","isFinite","pixelsPerSecond","widthInPixels","updatePlayhead","animate","elapsed","newCurrentTime","requestAnimationFrame","timeInSeconds","handleBpmChange","newBpm","updatedTracks","all","updatedClips","newDuration","saveProject","version","timestamp","projectJson","url","createObjectURL","link","document","createElement","href","download","toISOString","slice","replace","body","appendChild","click","removeChild","loadProject","event","file","target","files","reader","FileReader","onload","e","result","Error","restoreAudioBlob","restoredTracks","restoredSounds","prevSounds","maxId","Math","max","s","existingNames","Set","newSounds","index","newName","counter","has","add","setTimeout","autoSaveData","readAsText","value","exportAudio","maxDuration","clipStartTimeInSeconds","startTime","clipDurationInSeconds","clipEndTime","exportContext","sampleRate","bufferLength","ceil","outputBuffer","createBuffer","leftChannel","getChannelData","rightChannel","startTimeInSamples","floor","channel","min","numberOfChannels","sourceData","targetData","wavBlob","audioBufferToWav","buffer","bytesPerSample","blockAlign","byteRate","dataSize","bufferSize","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","sample","intSample","setInt16","addTrack","uniqueId","trackName","newTrack","prevTracks","removeTrack","trackId","handleDrop","timePosition","preventDefault","snappedPosition","round","originalTrackId","updatedClip","jsonData","dataTransfer","getData","hasAudioBlob","newClip","random","find","t","handleDragOver","dropEffect","clientX","currentTarget","updateDragPreview","trackElement","rect","getBoundingClientRect","left","trackRect","tracksAreaRect","dataset","relativeTop","top","parseInt","isNaN","previewWidth","width","removeClip","clipId","handleClipDragStart","cleanupDragState","querySelectorAll","classList","remove","mobileDragPreview","querySelector","handleDragEnd","play","resume","currentTimeInSeconds","newPlayingAudios","clipEndTimeInSeconds","delay","scheduleClipPlayback","delayMs","playingAudiosMap","_clip$soundData","Audio","addEventListener","set","_clip$soundData2","_clip$soundData3","_clip$soundData4","_clip$soundData5","_clip$soundData6","soundDataName","hasAudioData","audioBlobType","isInstanceOfBlob","restoreError","paused","stop","autoSaveProject","tracksCount","totalClips","reduce","total","handleVisibilityChange","hidden","removeEventListener","clearAutoSave","removeItem","alert","cleanupInvalidClips","cleanedTracks","removedCount","timer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","onChange","accept","style","display","confirm","title","disabled","SoundItem","onDragStart","TrackHeader","onRemove","Timeline","ref","minWidth","Playhead","Track","onDrop","onDragOver","onRemoveClip","onClipDragStart","onDragEnd","_c","_s2","isDragging","setIsDragging","touchStart","setTouchStart","touchMove","setTouchMove","handleDragStart","soundDataForTransfer","setData","effectAllowed","handleTouchStart","touch","touches","x","y","clientY","handleTouchMove","currentPos","deltaX","abs","deltaY","elementBelow","elementFromPoint","closest","handleTouchEnd","dropEvent","CustomEvent","detail","dispatchEvent","playSound","_sound$audioBlob","isBlob","then","handleEnded","createDragPreview","textContent","cssText","draggable","onTouchStart","onTouchMove","onTouchEnd","tags","tag","_c2","height","_c3","measures","beatsPerMeasure","from","_","measureIndex","beatIndex","_c4","_s3","handleMobileDrop","mockDropEvent","handleMobileClipMove","newTrackId","isFirstBeat","isMeasureStart","AudioClip","_c5","_s4","_clip$soundData7","waveformData","setWaveformData","generateWaveform","points","data","push","stopPropagation","moveEvent","fill","_c6","safeCurrentTime","_c7","$RefreshReg$"],"sources":["/Users/nakataniyuutomo/Desktop/Programing/ゼミ開発/sound-library2/src/pages/DAWPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\nconst DAWPage = () => {\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n  \n  // LocalStorageからの自動復元機能\n  const loadAutoSavedProject = () => {\n    try {\n      const autoSavedData = localStorage.getItem('dawProjectAutoSave');\n      if (autoSavedData) {\n        const projectData = JSON.parse(autoSavedData);\n        console.log('自動保存データを復元中...', projectData);\n        \n        // トラックカウンターの復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        // 無効なクリップをフィルタリング\n        const validTracks = (projectData.tracks || []).map(track => ({\n          ...track,\n          clips: (track.clips || []).filter(clip => {\n            if (!clip.soundData || !clip.soundData.name) {\n              console.warn('自動保存データから無効なクリップを除外:', clip);\n              return false;\n            }\n            return true;\n          })\n        }));\n        \n        return {\n          tracks: validTracks.length > 0 ? validTracks : [{ \n            id: Date.now(), \n            name: 'トラック 1', \n            clips: [] \n          }],\n          bpm: projectData.bpm || 120\n        };\n      }\n    } catch (error) {\n      console.error('自動保存データの復元に失敗:', error);\n    }\n    \n    return {\n      tracks: [{ \n        id: Date.now(), \n        name: 'トラック 1', \n        clips: [] \n      }],\n      bpm: 120\n    };\n  };\n\n  const initialData = loadAutoSavedProject();\n  const [tracks, setTracks] = useState(initialData.tracks);\n  const [bpm, setBpm] = useState(initialData.bpm);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const dragOverTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n    \n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    console.log('LocalStorageから読み込んだ音素材数:', savedSounds.length);\n    \n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          console.log('音声データ復元中:', sound.name, 'データサイズ:', sound.audioData.length);\n          \n          // Base64データの検証\n          if (!sound.audioData.includes(',')) {\n            console.error('無効なBase64フォーマット:', sound.name);\n            return sound;\n          }\n          \n          const base64Data = sound.audioData.split(',')[1];\n          if (!base64Data || base64Data.length === 0) {\n            console.error('Base64データが空です:', sound.name);\n            return sound;\n          }\n          \n          const byteCharacters = atob(base64Data);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          \n          // Blobサイズの検証\n          if (byteArray.length === 0) {\n            console.error('Blobデータが空です:', sound.name);\n            return sound;\n          }\n          \n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          console.log('Blob復元成功:', sound.name, 'サイズ:', blob.size, 'タイプ:', blob.type);\n          \n          // Blobの有効性を確認\n          if (blob.size === 0) {\n            console.error('作成されたBlobのサイズが0です:', sound.name);\n            return sound;\n          }\n          \n          return { ...sound, audioBlob: blob };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    \n    // 有効な音素材のみをフィルタリング\n    const validSounds = soundsWithBlob.filter(sound => {\n      if (!sound.audioBlob) {\n        console.warn('audioBlobが存在しない音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (!(sound.audioBlob instanceof Blob)) {\n        console.warn('無効なBlob形式の音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (sound.audioBlob.size === 0) {\n        console.warn('サイズが0のBlob音素材をスキップ:', sound.name);\n        return false;\n      }\n      return true;\n    });\n    \n    console.log('有効な音素材数:', validSounds.length, '/ 総数:', soundsWithBlob.length);\n    setSounds(validSounds);\n    \n    // 無効な音素材があった場合はLocalStorageを更新\n    if (validSounds.length !== soundsWithBlob.length) {\n      console.log('無効な音素材を除去してLocalStorageを更新');\n      const validSoundsForStorage = validSounds.map(sound => ({\n        ...sound,\n        audioBlob: undefined // Blobは保存しない\n      }));\n      localStorage.setItem('soundRecordings', JSON.stringify(validSoundsForStorage));\n    }\n    \n    return () => {\n      if (ctx && ctx.state !== 'closed') {\n        ctx.close().catch(error => {\n          console.warn('初期AudioContext のクローズに失敗:', error);\n        });\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n      // 再生中の音声をすべて停止・クリーンアップ\n      // useEffect内でplayingAudiosの最新値を取得\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map(); // 空のMapを返す\n      });\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n      if (window.currentDraggedSound) {\n        window.currentDraggedSound = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm) => {\n    return new Promise(async (resolve) => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          console.log('AudioContext方式で音声長さを取得中...');\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          \n          console.log('AudioContext方式で取得した長さ:', durationInSeconds, '秒');\n          \n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            const pixelsPerSecond = (currentBpm / 60) * 100;\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            console.log('AudioContext計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm/60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.log('AudioContext方式でエラー:', error);\n        }\n      }\n\n      // AudioContextが失敗した場合はデフォルト値を使用\n      console.log('AudioContextが利用できないため、デフォルト値を使用');\n      resolve(400);\n    });\n  }, [audioContext, bpm]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = (bpm / 60) * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n        \n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n        \n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = (bpm / 60) * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - (timeInSeconds * 1000));\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async (newBpm) => {\n    setBpm(newBpm);\n    \n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration更新に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null, // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current\n      };\n\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('プロジェクトを保存しました');\n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n        \n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = (soundData) => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              return { ...soundData, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n        \n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips\n              .map(clip => ({\n                ...clip,\n                soundData: restoreAudioBlob(clip.soundData)\n              }))\n              .filter(clip => {\n                // 無効なクリップを除外\n                if (!clip.soundData || !clip.soundData.name) {\n                  console.warn('無効なクリップを除外:', clip);\n                  return false;\n                }\n                return true;\n              })\n          }));\n          setTracks(restoredTracks);\n          console.log('トラックデータを復元しました:', restoredTracks.length, 'トラック');\n        }\n        \n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        // 音素材を復元（既存の音素材に追加）\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n          \n          // 既存の音素材と読み込んだ音素材を結合\n          setSounds(prevSounds => {\n            const maxId = prevSounds.length > 0 ? Math.max(...prevSounds.map(s => s.id)) : 0;\n            const existingNames = new Set(prevSounds.map(s => s.name));\n            \n            const newSounds = restoredSounds.map((sound, index) => {\n              let newName = sound.name;\n              let counter = 1;\n              \n              // 名前の重複をチェックして、重複する場合は番号を付ける\n              while (existingNames.has(newName)) {\n                newName = `${sound.name} (${counter})`;\n                counter++;\n              }\n              existingNames.add(newName);\n              \n              return {\n                ...sound,\n                id: maxId + index + 1, // 新しいIDを割り当て\n                name: newName // 重複しない名前を設定\n              };\n            });\n            \n            console.log('音素材を追加しました:', newSounds.length, '個（既存:', prevSounds.length, '個）');\n            return [...prevSounds, ...newSounds];\n          });\n        }\n        \n        console.log('プロジェクトを読み込みました');\n        setError(null);\n        \n        // 読み込み後に自動保存データも更新\n        setTimeout(() => {\n          const autoSaveData = {\n            version: '1.0',\n            bpm: projectData.bpm || 120,\n            tracks: projectData.tracks || [],\n            timestamp: Date.now(),\n            trackNameCounter: projectData.trackNameCounter || 1,\n            trackIdCounter: projectData.trackIdCounter || 1\n          };\n          localStorage.setItem('dawProjectAutoSave', JSON.stringify(autoSaveData));\n          console.log('読み込み後の自動保存データを更新しました');\n        }, 100);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    \n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = (bpm / 60) * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({ sampleRate: 44100 });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      \n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              \n              const pixelsPerSecond = (bpm / 60) * 100;\n              const startTimeInSamples = Math.floor((clip.startTime / pixelsPerSecond) * exportContext.sampleRate);\n              \n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                \n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n              \n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('音源を出力しました');\n      if (exportContext && exportContext.state !== 'closed') {\n        await exportContext.close().catch(error => {\n          console.warn('Export AudioContext のクローズに失敗:', error);\n        });\n      }\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = (buffer) => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    \n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n    \n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n    \n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    \n    return new Blob([arrayBuffer], { type: 'audio/wav' });\n  };\n\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n    \n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    \n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n\n  const removeTrack = (trackId) => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    \n    console.log('ドロップ処理開始:', { trackId, timePosition, draggedClip });\n    \n    try {\n      // 8分音符に合わせて位置を調整（50px単位）\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      \n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n        \n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => \n                clip.id === draggedClip.id ? updatedClip : clip\n              )\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n      \n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      \n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n\n      // soundDataの必要なプロパティをチェック\n      if (!soundData.name) {\n        console.error('音素材の名前が見つかりません:', soundData);\n        setError('音素材の名前が不正です。再度お試しください。');\n        return;\n      }\n      \n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      \n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      \n      console.log('新しい音素材のドロップ:', { soundData, hasAudioBlob: !!soundData.audioBlob });\n      \n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n\n      const newClip = {\n        id: Date.now() + Math.random(), // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n\n      console.log('作成されたクリップ:', newClip);\n      console.log('現在のトラック数:', tracks.length);\n      console.log('対象トラックID:', trackId);\n      console.log('対象トラック:', tracks.find(t => t.id === trackId));\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        console.log('更新前のトラック:', prevTracks.find(t => t.id === trackId));\n        const updatedTracks = prevTracks.map(track => \n          track.id === trackId \n            ? { ...track, clips: [...track.clips, newClip] }\n            : track\n        );\n        console.log('更新後のトラック:', updatedTracks.find(t => t.id === trackId));\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    \n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n    \n    // スロットリング - 16ms（60FPS）間隔で実行を制限\n    if (dragOverTimeoutRef.current) {\n      return;\n    }\n    \n    // 必要な情報を事前に抽出\n    const clientX = e.clientX;\n    const currentTarget = e.currentTarget;\n    \n    dragOverTimeoutRef.current = setTimeout(() => {\n      dragOverTimeoutRef.current = null;\n      updateDragPreview(clientX, currentTarget);\n    }, 16);\n  };\n  \n  const updateDragPreview = (clientX, trackElement) => {\n    // null チェックを追加\n    if (!trackElement || !timelineRef.current) {\n      return;\n    }\n    \n    try {\n      // ドラッグプレビューの更新\n      const rect = trackElement.getBoundingClientRect();\n      const timePosition = clientX - rect.left;\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      \n      const trackRect = trackElement.getBoundingClientRect();\n      const tracksAreaRect = timelineRef.current.getBoundingClientRect();\n      \n      if (tracksAreaRect && trackElement.dataset && trackElement.dataset.trackId) {\n        const relativeTop = trackRect.top - tracksAreaRect.top;\n        const trackId = parseInt(trackElement.dataset.trackId);\n        \n        // trackIdが有効な数値かチェック\n        if (isNaN(trackId)) {\n          return;\n        }\n        \n        // プレビュー幅を決定\n        let previewWidth = 400; // デフォルト値（1小節）\n        \n        if (draggedClip) {\n          // 既存クリップの場合\n          previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 \n            ? draggedClip.duration \n            : 400;\n        } else {\n          // 新しい音素材の場合、事前に計算された長さを使用\n          previewWidth = draggedSoundDuration;\n        }\n        \n        setDragPreview({\n          left: snappedPosition,\n          top: relativeTop + 10,\n          width: previewWidth,\n          trackId: trackId\n        });\n      }\n    } catch (error) {\n      console.warn('ドラッグプレビュー更新エラー:', error);\n      // エラーが発生した場合はプレビューをクリア\n      setDragPreview(null);\n    }\n  };\n\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => \n      track.id === trackId \n        ? { ...track, clips: track.clips.filter(clip => clip.id !== clipId) }\n        : track\n    ));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({ ...clip, originalTrackId });\n  };\n\n  // ドラッグ状態の完全なクリーンアップ\n  const cleanupDragState = useCallback(() => {\n    // ドラッグオーバーのタイムアウトをクリア\n    if (dragOverTimeoutRef.current) {\n      clearTimeout(dragOverTimeoutRef.current);\n      dragOverTimeoutRef.current = null;\n    }\n    \n    // すべてのドラッグ関連の状態をリセット\n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400);\n    \n    // DOM要素のクリーンアップ\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // モバイル用のドラッグプレビューを削除\n    const mobileDragPreview = document.querySelector('.mobile-drag-preview');\n    if (mobileDragPreview) {\n      mobileDragPreview.remove();\n    }\n    \n    // グローバル変数のクリーンアップ\n    if (window.currentDraggedSoundBlob) {\n      window.currentDraggedSoundBlob = null;\n    }\n    if (window.currentDraggedSound) {\n      window.currentDraggedSound = null;\n    }\n    \n    // ボディクラスのクリーンアップ\n    document.body.classList.remove('dragging');\n  }, []);\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = (e) => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e && e.dataTransfer && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    \n    // 完全なクリーンアップ\n    cleanupDragState();\n  };\n\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      setIsPlaying(true);\n      \n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = (bpm / 60) * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n      \n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      \n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          \n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + (clip.duration / pixelsPerSecond);\n          \n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', { clipStartTimeInSeconds, clipEndTimeInSeconds });\n            return;\n          }\n          \n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      \n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    console.log('scheduleClipPlayback:', { clip, hasAudioBlob: !!clip.soundData?.audioBlob });\n    \n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        \n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n        \n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        \n        playingAudiosMap.set(clip.id, { audio, timeoutId, audioUrl });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: clip.soundData?.name,\n        hasAudioData: !!clip.soundData?.audioData,\n        hasAudioBlob: !!clip.soundData?.audioBlob,\n        audioBlobType: typeof clip.soundData?.audioBlob,\n        isInstanceOfBlob: clip.soundData?.audioBlob instanceof Blob\n      });\n      \n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        console.log('audioDataからBlobを再作成中...');\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          \n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n          \n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n    \n    // 再生中の音声を一時停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    \n    // 再生中の音声を停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    \n    setPlayingAudios(new Map());\n  };\n\n  // タイムラインデータの自動保存機能\n  useEffect(() => {\n    const autoSaveProject = () => {\n      try {\n        const projectData = {\n          version: '1.0',\n          bpm: bpm,\n          tracks: tracks,\n          timestamp: Date.now(),\n          trackNameCounter: trackNameCounterRef.current,\n          trackIdCounter: trackIdCounterRef.current\n        };\n\n        localStorage.setItem('dawProjectAutoSave', JSON.stringify(projectData));\n        console.log('プロジェクトを自動保存しました:', {\n          tracksCount: tracks.length,\n          bpm: bpm,\n          totalClips: tracks.reduce((total, track) => total + track.clips.length, 0)\n        });\n      } catch (error) {\n        console.error('プロジェクトの自動保存に失敗:', error);\n      }\n    };\n\n    // 初期化後の自動保存（tracksやbpmが変更された時）\n    if (tracks.length > 0) {\n      autoSaveProject();\n    }\n  }, [tracks, bpm]);\n\n  // 音素材の更新監視（他のページで音が追加された場合の対応）\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        // ページが表示されたときに音素材を再読み込み\n        const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n        console.log('ページ表示時の音素材再読み込み - 件数:', savedSounds.length);\n        \n        // 音声データ復元処理（既存のロジックを再利用）\n        const soundsWithBlob = savedSounds.map(sound => {\n          if (sound.audioData) {\n            try {\n              const base64Data = sound.audioData.split(',')[1];\n              if (!base64Data || base64Data.length === 0) {\n                return sound;\n              }\n              \n              const byteCharacters = atob(base64Data);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              \n              return { ...sound, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', sound.name, error);\n              return sound;\n            }\n          }\n          return sound;\n        });\n        \n        const validSounds = soundsWithBlob.filter(sound => \n          sound.audioBlob && sound.audioBlob instanceof Blob && sound.audioBlob.size > 0\n        );\n        \n        setSounds(validSounds);\n        console.log('音素材更新完了 - 有効件数:', validSounds.length);\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  // 自動保存データをクリアする機能\n  const clearAutoSave = () => {\n    try {\n      localStorage.removeItem('dawProjectAutoSave');\n      console.log('自動保存データをクリアしました');\n      \n      // 初期状態にリセット\n      setTracks([{ \n        id: Date.now(), \n        name: 'トラック 1', \n        clips: [] \n      }]);\n      setBpm(120);\n      trackNameCounterRef.current = 1;\n      trackIdCounterRef.current = 1;\n      \n      setError(null);\n      alert('✅ プロジェクトをリセットしました');\n    } catch (error) {\n      console.error('自動保存データのクリアに失敗:', error);\n      setError('プロジェクトのリセットに失敗しました');\n    }\n  };\n\n  // 無効なクリップを除外する関数\n  const cleanupInvalidClips = () => {\n    setTracks(prevTracks => {\n      const cleanedTracks = prevTracks.map(track => ({\n        ...track,\n        clips: track.clips.filter(clip => {\n          if (!clip.soundData || !clip.soundData.name) {\n            console.warn('無効なクリップを除外:', clip);\n            return false;\n          }\n          return true;\n        })\n      }));\n      \n      const removedCount = prevTracks.reduce((total, track) => total + track.clips.length, 0) - \n                          cleanedTracks.reduce((total, track) => total + track.clips.length, 0);\n      \n      if (removedCount > 0) {\n        console.log(`${removedCount}個の無効なクリップを除外しました`);\n      }\n      \n      return cleanedTracks;\n    });\n  };\n\n  // 初期化時に無効なクリップをクリーンアップ\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      cleanupInvalidClips();\n    }, 1000); // 1秒後に実行\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // コンポーネントアンマウント時の包括的クリーンアップ\n  useEffect(() => {\n    return () => {\n      // ドラッグ状態のクリーンアップ\n      cleanupDragState();\n      \n      // 再生中の音声をすべて停止\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map();\n      });\n      \n      // AudioContextをクリーンアップ\n      if (audioContext && audioContext.state !== 'closed') {\n        audioContext.close().catch(error => {\n          console.warn('AudioContext のクローズに失敗:', error);\n        });\n      }\n      \n      // アニメーションフレームをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      \n      // タイムアウトをクリア\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n    };\n  }, [cleanupDragState, audioContext]);\n\n  return (\n    <div className=\"daw-page\">\n      <h2>🎹 音楽づくりページ</h2>\n      <p>音素材をドラッグ&ドロップして音楽を作りましょう！</p>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"daw-controls card\">\n        <div className=\"transport-controls\">\n          <button \n            className={`transport-btn play-btn ${isPlaying ? 'playing' : ''}`}\n            onClick={isPlaying ? pause : play}\n          >\n            {isPlaying ? '⏸️' : '▶️'}\n          </button>\n          <button className=\"transport-btn stop-btn\" onClick={stop}>\n            ⏹️\n          </button>\n        </div>\n\n        <div className=\"bpm-control\">\n          <label htmlFor=\"bpm\">🎵 BPM:</label>\n          <input\n            id=\"bpm\"\n            type=\"number\"\n            value={bpm}\n            onChange={(e) => handleBpmChange(parseInt(e.target.value))}\n            min=\"60\"\n            max=\"200\"\n            className=\"bpm-input\"\n          />\n        </div>\n\n        <div className=\"track-controls\">\n          <button className=\"button-primary\" onClick={addTrack}>\n            ➕ トラック追加\n          </button>\n          <button \n            className=\"button-secondary\" \n            onClick={() => setShowSoundPanel(!showSoundPanel)}\n          >\n            {showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'}\n          </button>\n        </div>\n\n        <div className=\"project-controls\">\n          <button className=\"button-secondary\" onClick={saveProject}>\n            💾 プロジェクト保存\n          </button>\n          <label className=\"button-secondary file-input-label\">\n            📁 プロジェクト読み込み\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={loadProject}\n              style={{ display: 'none' }}\n            />\n          </label>\n          <button \n            className=\"button-warning\" \n            onClick={() => {\n              if (window.confirm('🗑️ プロジェクトをリセットしますか？\\n\\n現在の作業内容がすべて削除されます。')) {\n                clearAutoSave();\n              }\n            }}\n            title=\"プロジェクトをリセット（自動保存データもクリア）\"\n          >\n            🗑️ リセット\n          </button>\n          <button \n            className=\"button-primary\" \n            onClick={exportAudio}\n            disabled={isExporting}\n          >\n            {isExporting ? '🔄 出力中...' : '🎧 音源出力'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"daw-main-area\">\n        <div className={`sound-panel ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"sound-panel-header\">\n            <h3>🎵 音素材</h3>\n            <button \n              className=\"sound-panel-close\"\n              onClick={() => setShowSoundPanel(false)}\n              title=\"音素材パネルを閉じる\"\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"sound-list\">\n            {sounds.length > 0 ? (\n              sounds.map(sound => (\n                <SoundItem \n                  key={sound.id} \n                  sound={sound} \n                  onDragStart={async (sound) => {\n                    // ドラッグ開始時に音声の長さを計算\n                    console.log('ドラッグ開始 - 音声長さ計算中:', sound.name);\n                    if (sound.audioBlob) {\n                      try {\n                        const duration = await getAudioDuration(sound.audioBlob, bpm);\n                        console.log('計算された音声長さ:', duration, 'px');\n                        setDraggedSoundDuration(duration);\n                      } catch (error) {\n                        console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                        setDraggedSoundDuration(400);\n                      }\n                    } else {\n                      console.log('audioBlob が存在しません - デフォルト値使用');\n                      setDraggedSoundDuration(400);\n                    }\n                  }}\n                />\n              ))\n            ) : (\n              <div className=\"no-sounds\">\n                <p>音素材がありません</p>\n                <p>「音あつめ」ページで音を録音してください</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={`daw-workspace ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"track-headers\">\n            <div className=\"timeline-header-spacer\">\n              タイムライン\n            </div>\n            {tracks.map(track => (\n              <TrackHeader \n                key={track.id} \n                track={track} \n                onRemove={removeTrack}\n                trackHeight={trackHeight}\n              />\n            ))}\n          </div>\n\n          <div className=\"timeline-container\">\n            <Timeline bpm={bpm} />\n            <div className=\"tracks-area\" ref={timelineRef} style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n              <Playhead currentTime={currentTime} />\n              {dragPreview && (\n                <div \n                  className=\"drag-preview\"\n                  style={{\n                    left: dragPreview.left,\n                    top: dragPreview.top,\n                    width: dragPreview.width\n                  }}\n                />\n              )}\n              {tracks.map(track => (\n                <Track\n                  key={track.id}\n                  track={track}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onRemoveClip={removeClip}\n                  onClipDragStart={handleClipDragStart}\n                  onDragEnd={handleDragEnd}\n                  trackHeight={trackHeight}\n                  bpm={bpm}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"instructions card\">\n        <h3>📖 使い方</h3>\n        <ul>\n          <li><strong>🖥️ PC:</strong> 左側の音素材パネルから音素材をトラックにドラッグ&ドロップして配置</li>\n          <li><strong>📱 スマホ/タブレット:</strong> 音素材を長押ししてからトラックまでドラッグして配置</li>\n          <li>配置済みの音素材もドラッグして別の場所に移動できます</li>\n          <li>ドラッグ中は配置予定位置に青い影が表示されます</li>\n          <li>音素材は8分音符（裏拍含む）に合わせて自動的に配置されます</li>\n          <li>音素材パネルの▶️ボタンで個別に音を確認できます</li>\n          <li>▶️ボタンで再生、⏸️ボタンで一時停止、⏹️ボタンで停止</li>\n          <li>BPMを変更して音楽の速さを調整</li>\n          <li>トラックを追加して複数の音を重ねることができます</li>\n          <li><strong>💾 プロジェクト保存:</strong> 編集中のデータをJSONファイルとして保存</li>\n          <li><strong>📁 プロジェクト読み込み:</strong> 保存したプロジェクトファイルを読み込んで編集を再開</li>\n          <li><strong>🎧 音源出力:</strong> 完成した楽曲をWAVファイルとして出力</li>\n          <li><strong>🗑️ リセット:</strong> 現在のプロジェクトをリセットして新しく始める</li>\n        </ul>\n        <div className=\"auto-save-info\">\n          <h4>💾 自動保存機能</h4>\n          <ul>\n            <li><strong>自動保存:</strong> トラックやBPMの変更は自動的に保存されます</li>\n            <li><strong>他ページとの連携:</strong> 「音あつめ」ページで録音した音は自動的に反映されます</li>\n            <li><strong>復元機能:</strong> ページをリロードしても作業内容が自動的に復元されます</li>\n            <li><strong>安心して移動:</strong> 他のページに移動しても作業内容は保持されます</li>\n          </ul>\n        </div>\n        <div className=\"mobile-tips\">\n          <h4>📱 スマートフォン利用のコツ</h4>\n          <ul>\n            <li>音素材を軽く長押しするとドラッグモードになります</li>\n            <li>ドラッグ中は画面がスクロールしないよう制御されます</li>\n            <li>青くハイライトされたトラックで指を離すと音素材が配置されます</li>\n            <li>横画面表示にするとより使いやすくなります</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SoundItem = ({ sound, onDragStart }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n\n  const handleDragStart = (e) => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    \n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n    \n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n    \n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = (e) => {\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // 長押し判定用のタイマーは設定せず、移動検知でのみドラッグを開始\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（15px以上移動）- 閾値を上げてより意図的な移動のみドラッグ扱い\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 15 || deltaY > 15)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      \n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n      \n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    \n    // SoundItem 内での直接クリーンアップ\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // モバイル用のドラッグプレビューを削除\n    const mobileDragPreview = document.querySelector('.mobile-drag-preview');\n    if (mobileDragPreview) {\n      mobileDragPreview.remove();\n    }\n    \n    // グローバル変数をクリア\n    if (window.currentDraggedSoundBlob) {\n      window.currentDraggedSoundBlob = null;\n    }\n    if (window.currentDraggedSound) {\n      window.currentDraggedSound = null;\n    }\n  };\n\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      // Blobの有効性をチェック\n      if (!(sound.audioBlob instanceof Blob) || sound.audioBlob.size === 0) {\n        console.error('無効なaudioBlob:', {\n          name: sound.name,\n          isBlob: sound.audioBlob instanceof Blob,\n          size: sound.audioBlob?.size\n        });\n        return;\n      }\n      \n      const audio = new Audio();\n      let audioUrl;\n      \n      try {\n        audioUrl = URL.createObjectURL(sound.audioBlob);\n        audio.src = audioUrl;\n        \n        audio.play()\n          .then(() => {\n            setIsPlaying(true);\n            \n            const handleEnded = () => {\n              setIsPlaying(false);\n              if (audioUrl) {\n                URL.revokeObjectURL(audioUrl); // URLをクリーンアップ\n              }\n              audio.removeEventListener('ended', handleEnded);\n            };\n            \n            audio.addEventListener('ended', handleEnded);\n            \n            // 音声の読み込みエラーもハンドリング\n            audio.addEventListener('error', (error) => {\n              console.error('音声読み込みエラー:', error);\n              setIsPlaying(false);\n              if (audioUrl) {\n                URL.revokeObjectURL(audioUrl);\n              }\n            });\n          })\n          .catch(error => {\n            console.error('音声再生エラー:', error);\n            if (audioUrl) {\n              URL.revokeObjectURL(audioUrl); // エラー時もクリーンアップ\n            }\n            setIsPlaying(false);\n          });\n      } catch (error) {\n        console.error('createObjectURLエラー:', error);\n        setIsPlaying(false);\n      }\n    } else {\n      console.log('再生条件不満足:', {\n        hasAudioBlob: !!sound.audioBlob,\n        isPlaying,\n        isDragging\n      });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = useCallback(() => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  }, [isDragging, touchMove, sound.name]);\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove, createDragPreview]);\n\n  return (\n    <div\n      className={`sound-item ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <div className=\"sound-info\">\n        <h4>{sound.name}</h4>\n        <div className=\"sound-tags\">\n          {sound.tags.map((tag, index) => (\n            <span key={index} className=\"sound-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"sound-actions\">\n        <button \n          className=\"play-sound-btn\"\n          onClick={playSound}\n          disabled={isPlaying}\n        >\n          {isPlaying ? '⏸️' : '▶️'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst TrackHeader = ({ track, onRemove, trackHeight }) => {\n  return (\n    <div className=\"track-header\" style={{ height: trackHeight }}>\n      <div className=\"track-info\">\n        <h4>{track.name}</h4>\n        <div className=\"track-actions\">\n          <button \n            className=\"remove-track-btn\"\n            onClick={() => onRemove(track.id)}\n            title=\"トラックを削除\"\n          >\n            🗑️\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Timeline = ({ bpm }) => {\n  const measures = TOTAL_MEASURES; // 16小節表示\n  const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n  return (\n    <div className=\"timeline\" style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n      {Array.from({ length: measures }, (_, measureIndex) => (\n        <div key={measureIndex} className=\"measure\">\n          <div className=\"measure-number\">{measureIndex + 1}</div>\n          <div className=\"beats\">\n            {Array.from({ length: beatsPerMeasure }, (_, beatIndex) => (\n              <div \n                key={beatIndex} \n                className=\"beat\"\n                style={{ width: BEAT_WIDTH }}\n              >\n                <div className=\"beat-main\">\n                  {beatIndex + 1}\n                </div>\n                <div className=\"beat-sub\">\n                  <div className=\"sub-beat-marker\">・</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Track = ({ track, onDrop, onDragOver, onRemoveClip, onClipDragStart, onDragEnd, trackHeight, bpm }) => {\n  const handleDrop = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = useCallback((e) => {\n    const { trackId, timePosition, sound } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, trackId, timePosition);\n  }, [onDrop]);\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = useCallback((e) => {\n    const { clip, newTrackId, timePosition } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, newTrackId, timePosition);\n  }, [onDrop]);\n\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n      };\n    }\n  }, [track.id, handleMobileDrop, handleMobileClipMove]);\n\n  return (\n    <div \n      className=\"track\"\n      style={{ height: trackHeight }}\n      data-track-id={track.id}\n      onDrop={handleDrop}\n      onDragOver={onDragOver}\n    >\n      <div className=\"track-grid\">\n        {/* 表拍（主要な拍）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => {\n          const isFirstBeat = index === 0;\n          const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n          const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n          return (\n            <div key={`main-${index}`} className={className} style={{ left: index * BEAT_WIDTH }} />\n          );\n        })}\n        {/* 裏拍（8分音符）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => (\n          <div key={`sub-${index}`} className=\"beat-line beat-line-sub\" style={{ left: index * BEAT_WIDTH + SUB_BEAT_WIDTH }} />\n        ))}\n      </div>\n      \n      {track.clips.map(clip => (\n        <AudioClip\n          key={clip.id}\n          clip={clip}\n          trackId={track.id}\n          onRemove={() => onRemoveClip(track.id, clip.id)}\n          onDragStart={onClipDragStart}\n          onDragEnd={onDragEnd}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AudioClip = ({ clip, trackId, onRemove, onDragStart, onDragEnd }) => {\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n\n  React.useEffect(() => {\n    // clip.soundData が存在する場合のみ波形データを生成\n    if (clip && clip.soundData) {\n      // 簡単な波形データ生成（実際の実装では音声解析が必要）\n      const generateWaveform = () => {\n        const points = 20; // 波形のポイント数\n        const data = [];\n        for (let i = 0; i < points; i++) {\n          data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n        }\n        setWaveformData(data);\n      };\n\n      generateWaveform();\n    }\n  }, [clip, clip?.soundData]);\n\n  // clip.soundData の安全性をチェック（Hooksの後で）\n  if (!clip || !clip.soundData) {\n    console.warn('無効なクリップデータ:', clip);\n    return null; // 無効なクリップは表示しない\n  }\n\n  const handleDragStart = (e) => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n    \n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = (e) => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // ドラッグモードは移動が確定してから有効化\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      onDragStart(clip, trackId);\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // ドラッグプレビューをクリア（親コンポーネントの状態もリセット）\n    if (onDragEnd) {\n      onDragEnd(null); // nullを渡してガード条件を満たす\n    }\n  };\n\n  return (\n    <div \n      className={`audio-clip ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={onDragEnd}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n      style={{\n        left: clip.startTime,\n        width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n      }}\n    >\n      <div className=\"clip-header\">\n        <span className=\"clip-name\">{clip.soundData?.name || '不明な音素材'}</span>\n        <button \n          className=\"remove-clip-btn\"\n          onClick={onRemove}\n          title=\"クリップを削除\"\n        >\n          ×\n        </button>\n      </div>\n      <div className=\"clip-waveform\">\n        {waveformData.length > 0 ? (\n          <svg className=\"waveform-svg\" width=\"100%\" height=\"30\">\n            {waveformData.map((height, index) => (\n              <rect\n                key={index}\n                x={`${(index / waveformData.length) * 100}%`}\n                y={`${(1 - height) * 15}`}\n                width={`${80 / waveformData.length}%`}\n                height={`${height * 30}`}\n                fill=\"rgba(255, 255, 255, 0.8)\"\n              />\n            ))}\n          </svg>\n        ) : (\n          <div className=\"waveform-placeholder\">🔊</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Playhead = ({ currentTime }) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  \n  return (\n    <div \n      className=\"playhead\"\n      style={{ left: safeCurrentTime }}\n    />\n  );\n};\n\nexport default DAWPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}