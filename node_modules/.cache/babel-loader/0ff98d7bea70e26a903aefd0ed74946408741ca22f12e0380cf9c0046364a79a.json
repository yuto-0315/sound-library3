{"ast":null,"code":"var _jsxFileName = \"/Users/nakataniyuutomo/Desktop/Programing/\\u30BB\\u3099\\u30DF\\u958B\\u767A/sound-library2/src/pages/DAWPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\nconst DAWPage = () => {\n  _s();\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n  const [tracks, setTracks] = useState(() => [{\n    id: Date.now(),\n    name: 'トラック 1',\n    clips: []\n  }]);\n  const [bpm, setBpm] = useState(120);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n\n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    console.log('LocalStorageから読み込んだ音素材数:', savedSounds.length);\n\n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          console.log('音声データ復元中:', sound.name, 'データサイズ:', sound.audioData.length);\n          const byteCharacters = atob(sound.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n          console.log('Blob復元成功:', sound.name, 'サイズ:', blob.size, 'タイプ:', blob.type);\n          return {\n            ...sound,\n            audioBlob: blob\n          };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    setSounds(soundsWithBlob);\n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm) => {\n    return new Promise(async resolve => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          console.log('AudioContext方式で音声長さを取得中...');\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          console.log('AudioContext方式で取得した長さ:', durationInSeconds, '秒');\n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            const pixelsPerSecond = currentBpm / 60 * 100;\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            console.log('AudioContext計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm / 60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.log('AudioContext方式でエラー:', error);\n        }\n      }\n\n      // AudioContextが失敗した場合はデフォルト値を使用\n      console.log('AudioContextが利用できないため、デフォルト値を使用');\n      resolve(400);\n    });\n  }, [audioContext, bpm]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = bpm / 60 * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n\n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n\n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = bpm / 60 * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - timeInSeconds * 1000);\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async newBpm => {\n    setBpm(newBpm);\n\n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(tracks.map(async track => {\n      const updatedClips = await Promise.all(track.clips.map(async clip => {\n        if (clip.soundData && clip.soundData.audioBlob) {\n          try {\n            const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n            return {\n              ...clip,\n              duration: newDuration\n            };\n          } catch (error) {\n            console.warn('クリップのduration更新に失敗:', error);\n            return clip;\n          }\n        }\n        return clip;\n      }));\n      return {\n        ...track,\n        clips: updatedClips\n      };\n    }));\n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null,\n          // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current\n      };\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('プロジェクトを保存しました');\n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n\n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = soundData => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], {\n                type: 'audio/wav'\n              });\n              return {\n                ...soundData,\n                audioBlob: blob\n              };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n\n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips.map(clip => ({\n              ...clip,\n              soundData: restoreAudioBlob(clip.soundData)\n            }))\n          }));\n          setTracks(restoredTracks);\n          console.log('トラックデータを復元しました:', restoredTracks.length, 'トラック');\n        }\n\n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n\n        // 音素材を復元（既存の音素材に追加）\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n\n          // 既存の音素材と読み込んだ音素材を結合\n          // 重複を避けるために、IDが重複しない新しいIDを割り当て\n          setSounds(prevSounds => {\n            const maxId = prevSounds.length > 0 ? Math.max(...prevSounds.map(s => s.id)) : 0;\n            const newSounds = restoredSounds.map((sound, index) => ({\n              ...sound,\n              id: maxId + index + 1 // 新しいIDを割り当て\n            }));\n            console.log('音素材を追加しました:', newSounds.length, '個（既存:', prevSounds.length, '個）');\n            return [...prevSounds, ...newSounds];\n          });\n        }\n        console.log('プロジェクトを読み込みました');\n        setError(null);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = bpm / 60 * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({\n        sampleRate: 44100\n      });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              const pixelsPerSecond = bpm / 60 * 100;\n              const startTimeInSamples = Math.floor(clip.startTime / pixelsPerSecond * exportContext.sampleRate);\n\n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                for (let i = 0; i < sourceData.length && startTimeInSamples + i < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n\n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && startTimeInSamples + i < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('音源を出力しました');\n      await exportContext.close();\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = buffer => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n\n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n\n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    return new Blob([arrayBuffer], {\n      type: 'audio/wav'\n    });\n  };\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n\n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n  const removeTrack = trackId => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    console.log('ドロップ処理開始:', {\n      trackId,\n      timePosition,\n      draggedClip\n    });\n    try {\n      // 8分音符に合わせて位置を調整（50px単位）\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n\n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n\n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => clip.id === draggedClip.id ? updatedClip : clip)\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n\n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n\n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n\n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      console.log('新しい音素材のドロップ:', {\n        soundData,\n        hasAudioBlob: !!soundData.audioBlob\n      });\n\n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n      const newClip = {\n        id: Date.now() + Math.random(),\n        // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n      console.log('作成されたクリップ:', newClip);\n      console.log('現在のトラック数:', tracks.length);\n      console.log('対象トラックID:', trackId);\n      console.log('対象トラック:', tracks.find(t => t.id === trackId));\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        console.log('更新前のトラック:', prevTracks.find(t => t.id === trackId));\n        const updatedTracks = prevTracks.map(track => track.id === trackId ? {\n          ...track,\n          clips: [...track.clips, newClip]\n        } : track);\n        console.log('更新後のトラック:', updatedTracks.find(t => t.id === trackId));\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n  const handleDragOver = e => {\n    var _timelineRef$current;\n    e.preventDefault();\n\n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n\n    // ドラッグプレビューの更新\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n    const trackElement = e.currentTarget;\n    const trackRect = trackElement.getBoundingClientRect();\n    const tracksAreaRect = (_timelineRef$current = timelineRef.current) === null || _timelineRef$current === void 0 ? void 0 : _timelineRef$current.getBoundingClientRect();\n    if (tracksAreaRect) {\n      const relativeTop = trackRect.top - tracksAreaRect.top;\n      const trackId = parseInt(trackElement.dataset.trackId);\n\n      // プレビュー幅を決定\n      let previewWidth = 400; // デフォルト値（1小節）\n\n      if (draggedClip) {\n        // 既存クリップの場合\n        previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 ? draggedClip.duration : 400;\n        console.log('既存クリップのプレビュー幅:', previewWidth);\n      } else {\n        // 新しい音素材の場合、事前に計算された長さを使用\n        previewWidth = draggedSoundDuration;\n        console.log('新しい音素材のプレビュー幅:', previewWidth, '(draggedSoundDuration)');\n      }\n      setDragPreview({\n        left: snappedPosition,\n        top: relativeTop + 10,\n        width: previewWidth,\n        trackId: trackId\n      });\n    }\n  };\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => track.id === trackId ? {\n      ...track,\n      clips: track.clips.filter(clip => clip.id !== clipId)\n    } : track));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({\n      ...clip,\n      originalTrackId\n    });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = e => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e && e.dataTransfer && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400); // リセット\n  };\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      setIsPlaying(true);\n\n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = bpm / 60 * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n\n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + clip.duration / pixelsPerSecond;\n\n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', {\n              clipStartTimeInSeconds,\n              clipEndTimeInSeconds\n            });\n            return;\n          }\n\n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    var _clip$soundData;\n    console.log('scheduleClipPlayback:', {\n      clip,\n      hasAudioBlob: !!((_clip$soundData = clip.soundData) !== null && _clip$soundData !== void 0 && _clip$soundData.audioBlob)\n    });\n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n\n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        playingAudiosMap.set(clip.id, {\n          audio,\n          timeoutId,\n          audioUrl\n        });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      var _clip$soundData2, _clip$soundData3, _clip$soundData4, _clip$soundData5, _clip$soundData6;\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: (_clip$soundData2 = clip.soundData) === null || _clip$soundData2 === void 0 ? void 0 : _clip$soundData2.name,\n        hasAudioData: !!((_clip$soundData3 = clip.soundData) !== null && _clip$soundData3 !== void 0 && _clip$soundData3.audioData),\n        hasAudioBlob: !!((_clip$soundData4 = clip.soundData) !== null && _clip$soundData4 !== void 0 && _clip$soundData4.audioBlob),\n        audioBlobType: typeof ((_clip$soundData5 = clip.soundData) === null || _clip$soundData5 === void 0 ? void 0 : _clip$soundData5.audioBlob),\n        isInstanceOfBlob: ((_clip$soundData6 = clip.soundData) === null || _clip$soundData6 === void 0 ? void 0 : _clip$soundData6.audioBlob) instanceof Blob\n      });\n\n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        console.log('audioDataからBlobを再作成中...');\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n\n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n\n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n  const pause = () => {\n    setIsPlaying(false);\n\n    // 再生中の音声を一時停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n\n    // 再生中の音声を停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    setPlayingAudios(new Map());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daw-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB9 \\u97F3\\u697D\\u3065\\u304F\\u308A\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u97F3\\u7D20\\u6750\\u3092\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u97F3\\u697D\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u3087\\u3046\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-controls card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transport-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `transport-btn play-btn ${isPlaying ? 'playing' : ''}`,\n          onClick: isPlaying ? pause : play,\n          children: isPlaying ? '⏸️' : '▶️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transport-btn stop-btn\",\n          onClick: stop,\n          children: \"\\u23F9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpm-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bpm\",\n          children: \"\\uD83C\\uDFB5 BPM:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bpm\",\n          type: \"number\",\n          value: bpm,\n          onChange: e => handleBpmChange(parseInt(e.target.value)),\n          min: \"60\",\n          max: \"200\",\n          className: \"bpm-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: addTrack,\n          children: \"\\u2795 \\u30C8\\u30E9\\u30C3\\u30AF\\u8FFD\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: () => setShowSoundPanel(!showSoundPanel),\n          children: showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: saveProject,\n          children: \"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"button-secondary file-input-label\",\n          children: [\"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: loadProject,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: exportAudio,\n          disabled: isExporting,\n          children: isExporting ? '🔄 出力中...' : '🎧 音源出力'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sound-panel ${!showSoundPanel ? 'panel-hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDFB5 \\u97F3\\u7D20\\u6750\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sound-panel-close\",\n            onClick: () => setShowSoundPanel(false),\n            title: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u3092\\u9589\\u3058\\u308B\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-list\",\n          children: sounds.length > 0 ? sounds.map(sound => /*#__PURE__*/_jsxDEV(SoundItem, {\n            sound: sound,\n            onDragStart: async sound => {\n              // ドラッグ開始時に音声の長さを計算\n              console.log('ドラッグ開始 - 音声長さ計算中:', sound.name);\n              if (sound.audioBlob) {\n                try {\n                  const duration = await getAudioDuration(sound.audioBlob, bpm);\n                  console.log('計算された音声長さ:', duration, 'px');\n                  setDraggedSoundDuration(duration);\n                } catch (error) {\n                  console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                  setDraggedSoundDuration(400);\n                }\n              } else {\n                console.log('audioBlob が存在しません - デフォルト値使用');\n                setDraggedSoundDuration(400);\n              }\n            }\n          }, sound.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sounds\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u97F3\\u7D20\\u6750\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u97F3\\u3092\\u9332\\u97F3\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `daw-workspace ${!showSoundPanel ? 'panel-hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-header-spacer\",\n            children: \"\\u30BF\\u30A4\\u30E0\\u30E9\\u30A4\\u30F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(TrackHeader, {\n            track: track,\n            onRemove: removeTrack,\n            trackHeight: trackHeight\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(Timeline, {\n            bpm: bpm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tracks-area\",\n            ref: timelineRef,\n            style: {\n              minWidth: TOTAL_MEASURES * MEASURE_WIDTH\n            },\n            children: [/*#__PURE__*/_jsxDEV(Playhead, {\n              currentTime: currentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 15\n            }, this), dragPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drag-preview\",\n              style: {\n                left: dragPreview.left,\n                top: dragPreview.top,\n                width: dragPreview.width\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n              track: track,\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onRemoveClip: removeClip,\n              onClipDragStart: handleClipDragStart,\n              onDragEnd: handleDragEnd,\n              trackHeight: trackHeight,\n              bpm: bpm\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCD6 \\u4F7F\\u3044\\u65B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDDA5\\uFE0F PC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 15\n          }, this), \" \\u5DE6\\u5074\\u306E\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u304B\\u3089\\u97F3\\u7D20\\u6750\\u3092\\u30C8\\u30E9\\u30C3\\u30AF\\u306B\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u914D\\u7F6E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30DB/\\u30BF\\u30D6\\u30EC\\u30C3\\u30C8:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 15\n          }, this), \" \\u97F3\\u7D20\\u6750\\u3092\\u9577\\u62BC\\u3057\\u3057\\u3066\\u304B\\u3089\\u30C8\\u30E9\\u30C3\\u30AF\\u307E\\u3067\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u914D\\u7F6E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u914D\\u7F6E\\u6E08\\u307F\\u306E\\u97F3\\u7D20\\u6750\\u3082\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u5225\\u306E\\u5834\\u6240\\u306B\\u79FB\\u52D5\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u914D\\u7F6E\\u4E88\\u5B9A\\u4F4D\\u7F6E\\u306B\\u9752\\u3044\\u5F71\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u306F8\\u5206\\u97F3\\u7B26\\uFF08\\u88CF\\u62CD\\u542B\\u3080\\uFF09\\u306B\\u5408\\u308F\\u305B\\u3066\\u81EA\\u52D5\\u7684\\u306B\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u306E\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u500B\\u5225\\u306B\\u97F3\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u518D\\u751F\\u3001\\u23F8\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u4E00\\u6642\\u505C\\u6B62\\u3001\\u23F9\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u505C\\u6B62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"BPM\\u3092\\u5909\\u66F4\\u3057\\u3066\\u97F3\\u697D\\u306E\\u901F\\u3055\\u3092\\u8ABF\\u6574\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u8FFD\\u52A0\\u3057\\u3066\\u8907\\u6570\\u306E\\u97F3\\u3092\\u91CD\\u306D\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 15\n          }, this), \" \\u7DE8\\u96C6\\u4E2D\\u306E\\u30C7\\u30FC\\u30BF\\u3092JSON\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u4FDD\\u5B58\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 15\n          }, this), \" \\u4FDD\\u5B58\\u3057\\u305F\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u7DE8\\u96C6\\u3092\\u518D\\u958B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFA7 \\u97F3\\u6E90\\u51FA\\u529B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 15\n          }, this), \" \\u5B8C\\u6210\\u3057\\u305F\\u697D\\u66F2\\u3092WAV\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u51FA\\u529B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30FC\\u30C8\\u30D5\\u30A9\\u30F3\\u5229\\u7528\\u306E\\u30B3\\u30C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u97F3\\u7D20\\u6750\\u3092\\u8EFD\\u304F\\u9577\\u62BC\\u3057\\u3059\\u308B\\u3068\\u30C9\\u30E9\\u30C3\\u30B0\\u30E2\\u30FC\\u30C9\\u306B\\u306A\\u308A\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u753B\\u9762\\u304C\\u30B9\\u30AF\\u30ED\\u30FC\\u30EB\\u3057\\u306A\\u3044\\u3088\\u3046\\u5236\\u5FA1\\u3055\\u308C\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u9752\\u304F\\u30CF\\u30A4\\u30E9\\u30A4\\u30C8\\u3055\\u308C\\u305F\\u30C8\\u30E9\\u30C3\\u30AF\\u3067\\u6307\\u3092\\u96E2\\u3059\\u3068\\u97F3\\u7D20\\u6750\\u304C\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u6A2A\\u753B\\u9762\\u8868\\u793A\\u306B\\u3059\\u308B\\u3068\\u3088\\u308A\\u4F7F\\u3044\\u3084\\u3059\\u304F\\u306A\\u308A\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 863,\n    columnNumber: 5\n  }, this);\n};\n_s(DAWPage, \"p3/MRDsc9DTOjvad4k5XzbTJqsY=\");\n_c = DAWPage;\nconst SoundItem = ({\n  sound,\n  onDragStart\n}) => {\n  _s2();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n  const handleDragStart = e => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n\n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n\n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setIsDragging(false);\n\n    // 長押し判定用のタイマー\n    setTimeout(() => {\n      if (touchStart && !isDragging) {\n        setIsDragging(true);\n        // スクロールを一時的に無効化\n        document.body.classList.add('dragging');\n\n        // 親コンポーネントのonDragStart関数を呼び出し\n        if (onDragStart) {\n          onDragStart(sound);\n        }\n        // グローバル変数に設定\n        window.currentDraggedSoundBlob = sound.audioBlob;\n        window.currentDraggedSound = sound;\n      }\n    }, 200); // 200ms長押しで開始\n  };\n  const handleTouchMove = e => {\n    if (!touchStart) return;\n    const touch = e.touches[0];\n    const currentPos = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    setTouchMove(currentPos);\n\n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n\n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n\n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n\n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n\n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n  const handleTouchEnd = e => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n\n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n\n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n\n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n\n    // ドラッグプレビューを削除\n    const dragPreview = document.querySelector('.mobile-drag-preview');\n    if (dragPreview) {\n      dragPreview.remove();\n    }\n\n    // グローバル変数をクリア\n    window.currentDraggedSoundBlob = null;\n    window.currentDraggedSound = null;\n  };\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      const audio = new Audio();\n      audio.src = URL.createObjectURL(sound.audioBlob);\n      audio.play().then(() => {\n        setIsPlaying(true);\n        audio.addEventListener('ended', () => {\n          setIsPlaying(false);\n        });\n      }).catch(error => {\n        console.error('音声再生エラー:', error);\n      });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = useCallback(() => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  }, [isDragging, touchMove, sound.name]);\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove, createDragPreview]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sound-item ${isDragging ? 'dragging' : ''}`,\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: sound.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-tags\",\n        children: sound.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-tag\",\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-sound-btn\",\n        onClick: playSound,\n        disabled: isPlaying,\n        children: isPlaying ? '⏸️' : '▶️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1250,\n    columnNumber: 5\n  }, this);\n};\n_s2(SoundItem, \"RkxO1xburwD1wlHDqN3nCO+JHik=\");\n_c2 = SoundItem;\nconst TrackHeader = ({\n  track,\n  onRemove,\n  trackHeight\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track-header\",\n    style: {\n      height: trackHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-track-btn\",\n          onClick: () => onRemove(track.id),\n          title: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u524A\\u9664\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1281,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TrackHeader;\nconst Timeline = ({\n  bpm\n}) => {\n  const measures = TOTAL_MEASURES; // 16小節表示\n  const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    style: {\n      minWidth: TOTAL_MEASURES * MEASURE_WIDTH\n    },\n    children: Array.from({\n      length: measures\n    }, (_, measureIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"measure\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measure-number\",\n        children: measureIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beats\",\n        children: Array.from({\n          length: beatsPerMeasure\n        }, (_, beatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"beat\",\n          style: {\n            width: BEAT_WIDTH\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"beat-main\",\n            children: beatIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"beat-sub\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-beat-marker\",\n              children: \"\\u30FB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1318,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 17\n          }, this)]\n        }, beatIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1307,\n        columnNumber: 11\n      }, this)]\n    }, measureIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1305,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1303,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Timeline;\nconst Track = ({\n  track,\n  onDrop,\n  onDragOver,\n  onRemoveClip,\n  onClipDragStart,\n  onDragEnd,\n  trackHeight,\n  bpm\n}) => {\n  _s3();\n  const handleDrop = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = useCallback(e => {\n    const {\n      trackId,\n      timePosition,\n      sound\n    } = e.detail;\n\n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: type => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    onDrop(mockDropEvent, trackId, timePosition);\n  }, [onDrop]);\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = useCallback(e => {\n    const {\n      clip,\n      newTrackId,\n      timePosition\n    } = e.detail;\n\n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: type => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    onDrop(mockDropEvent, newTrackId, timePosition);\n  }, [onDrop]);\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n      };\n    }\n  }, [track.id, handleMobileDrop, handleMobileClipMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track\",\n    style: {\n      height: trackHeight\n    },\n    \"data-track-id\": track.id,\n    onDrop: handleDrop,\n    onDragOver: onDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-grid\",\n      children: [Array.from({\n        length: TOTAL_BEATS\n      }, (_, index) => {\n        const isFirstBeat = index === 0;\n        const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n        const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className,\n          style: {\n            left: index * BEAT_WIDTH\n          }\n        }, `main-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 13\n        }, this);\n      }), Array.from({\n        length: TOTAL_BEATS\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beat-line beat-line-sub\",\n        style: {\n          left: index * BEAT_WIDTH + SUB_BEAT_WIDTH\n        }\n      }, `sub-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 7\n    }, this), track.clips.map(clip => /*#__PURE__*/_jsxDEV(AudioClip, {\n      clip: clip,\n      trackId: track.id,\n      onRemove: () => onRemoveClip(track.id, clip.id),\n      onDragStart: onClipDragStart,\n      onDragEnd: onDragEnd\n    }, clip.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1413,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1389,\n    columnNumber: 5\n  }, this);\n};\n_s3(Track, \"+PNnKtwbfdVN4ND8buII9hSRziA=\");\n_c5 = Track;\nconst AudioClip = ({\n  clip,\n  trackId,\n  onRemove,\n  onDragStart,\n  onDragEnd\n}) => {\n  _s4();\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n    generateWaveform();\n  }, [clip.soundData]);\n  const handleDragStart = e => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n\n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = e => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setIsDragging(false);\n\n    // ドラッグモードを有効化\n    document.body.classList.add('dragging');\n  };\n  const handleTouchMove = e => {\n    if (!touchStart) return;\n    const touch = e.touches[0];\n    const currentPos = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    setTouchMove(currentPos);\n\n    // ドラッグ開始の判定（5px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    if (!isDragging && (deltaX > 5 || deltaY > 5)) {\n      setIsDragging(true);\n      onDragStart(clip, trackId);\n    }\n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n\n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n\n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n\n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n  const handleTouchEnd = e => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n\n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n\n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n\n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    if (onDragEnd) {\n      onDragEnd(null); // nullを渡してガード条件を満たす\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `audio-clip ${isDragging ? 'dragging' : ''}`,\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onDragEnd: onDragEnd,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    style: {\n      left: clip.startTime,\n      width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clip-name\",\n        children: clip.soundData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-clip-btn\",\n        onClick: onRemove,\n        title: \"\\u30AF\\u30EA\\u30C3\\u30D7\\u3092\\u524A\\u9664\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1559,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-waveform\",\n      children: waveformData.length > 0 ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"waveform-svg\",\n        width: \"100%\",\n        height: \"30\",\n        children: waveformData.map((height, index) => /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: `${index / waveformData.length * 100}%`,\n          y: `${(1 - height) * 15}`,\n          width: `${80 / waveformData.length}%`,\n          height: `${height * 30}`,\n          fill: \"rgba(255, 255, 255, 0.8)\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1571,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform-placeholder\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1582,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1567,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1544,\n    columnNumber: 5\n  }, this);\n};\n_s4(AudioClip, \"NeAysvgdzDwGIytG3p5NplFZv3M=\");\n_c6 = AudioClip;\nconst Playhead = ({\n  currentTime\n}) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playhead\",\n    style: {\n      left: safeCurrentTime\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1594,\n    columnNumber: 5\n  }, this);\n};\n_c7 = Playhead;\nexport default DAWPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DAWPage\");\n$RefreshReg$(_c2, \"SoundItem\");\n$RefreshReg$(_c3, \"TrackHeader\");\n$RefreshReg$(_c4, \"Timeline\");\n$RefreshReg$(_c5, \"Track\");\n$RefreshReg$(_c6, \"AudioClip\");\n$RefreshReg$(_c7, \"Playhead\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","BEAT_WIDTH","BEATS_PER_MEASURE","MEASURE_WIDTH","SUB_BEAT_WIDTH","TOTAL_MEASURES","TOTAL_BEATS","DAWPage","_s","trackIdCounterRef","trackNameCounterRef","tracks","setTracks","id","Date","now","name","clips","bpm","setBpm","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioContext","setAudioContext","trackHeight","playingAudios","setPlayingAudios","Map","startPlayTime","setStartPlayTime","error","setError","sounds","setSounds","showSoundPanel","setShowSoundPanel","draggedClip","setDraggedClip","dragPreview","setDragPreview","draggedSoundDuration","setDraggedSoundDuration","isExporting","setIsExporting","timelineRef","animationFrameRef","ctx","window","AudioContext","webkitAudioContext","savedSounds","JSON","parse","localStorage","getItem","console","log","length","soundsWithBlob","map","sound","audioData","byteCharacters","atob","split","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","size","audioBlob","close","current","cancelAnimationFrame","currentDraggedSoundBlob","getAudioDuration","currentBpm","Promise","resolve","arrayBuffer","audioBuffer","decodeAudioData","durationInSeconds","duration","isFinite","pixelsPerSecond","widthInPixels","updatePlayhead","animate","elapsed","newCurrentTime","warn","requestAnimationFrame","timeInSeconds","handleBpmChange","newBpm","updatedTracks","all","track","updatedClips","clip","soundData","newDuration","saveProject","projectData","version","timestamp","trackNameCounter","trackIdCounter","projectJson","stringify","url","URL","createObjectURL","link","document","createElement","href","download","toISOString","slice","replace","body","appendChild","click","removeChild","revokeObjectURL","loadProject","event","file","target","files","reader","FileReader","onload","e","result","Error","restoreAudioBlob","restoredTracks","restoredSounds","prevSounds","maxId","Math","max","s","newSounds","index","readAsText","value","exportAudio","maxDuration","forEach","clipStartTimeInSeconds","startTime","clipDurationInSeconds","clipEndTime","exportContext","sampleRate","bufferLength","ceil","outputBuffer","createBuffer","leftChannel","getChannelData","rightChannel","startTimeInSamples","floor","channel","min","numberOfChannels","sourceData","targetData","wavBlob","audioBufferToWav","buffer","bytesPerSample","blockAlign","byteRate","dataSize","bufferSize","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","sample","intSample","setInt16","addTrack","uniqueId","trackName","newTrack","prevTracks","removeTrack","trackId","filter","handleDrop","timePosition","preventDefault","snappedPosition","round","originalTrackId","updatedClip","jsonData","dataTransfer","getData","currentDraggedSound","hasAudioBlob","newClip","random","find","t","handleDragOver","_timelineRef$current","dropEffect","rect","currentTarget","getBoundingClientRect","clientX","left","trackElement","trackRect","tracksAreaRect","relativeTop","top","parseInt","dataset","previewWidth","width","removeClip","clipId","handleClipDragStart","handleDragEnd","play","state","resume","currentTimeInSeconds","newPlayingAudios","clipEndTimeInSeconds","delay","scheduleClipPlayback","delayMs","playingAudiosMap","_clip$soundData","audio","Audio","audioUrl","src","timeoutId","setTimeout","catch","addEventListener","set","_clip$soundData2","_clip$soundData3","_clip$soundData4","_clip$soundData5","_clip$soundData6","soundDataName","hasAudioData","audioBlobType","isInstanceOfBlob","restoreError","pause","clearTimeout","paused","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","onChange","accept","style","display","disabled","title","SoundItem","onDragStart","TrackHeader","onRemove","Timeline","ref","minWidth","Playhead","Track","onDrop","onDragOver","onRemoveClip","onClipDragStart","onDragEnd","_c","_s2","isDragging","setIsDragging","touchStart","setTouchStart","touchMove","setTouchMove","handleDragStart","soundDataForTransfer","setData","effectAllowed","handleTouchStart","touch","touches","x","y","clientY","classList","add","handleTouchMove","currentPos","deltaX","abs","deltaY","querySelector","elementBelow","elementFromPoint","closest","querySelectorAll","remove","handleTouchEnd","dropEvent","CustomEvent","detail","dispatchEvent","playSound","then","createDragPreview","textContent","cssText","draggable","onTouchStart","onTouchMove","onTouchEnd","tags","tag","_c2","height","_c3","measures","beatsPerMeasure","from","_","measureIndex","beatIndex","_c4","_s3","handleMobileDrop","mockDropEvent","handleMobileClipMove","newTrackId","removeEventListener","isFirstBeat","isMeasureStart","AudioClip","_c5","_s4","waveformData","setWaveformData","generateWaveform","points","data","push","stopPropagation","moveEvent","fill","_c6","safeCurrentTime","_c7","$RefreshReg$"],"sources":["/Users/nakataniyuutomo/Desktop/Programing/ゼミ開発/sound-library2/src/pages/DAWPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\nconst DAWPage = () => {\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n  \n  const [tracks, setTracks] = useState(() => [{ \n    id: Date.now(), \n    name: 'トラック 1', \n    clips: [] \n  }]);\n  const [bpm, setBpm] = useState(120);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n    \n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    console.log('LocalStorageから読み込んだ音素材数:', savedSounds.length);\n    \n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          console.log('音声データ復元中:', sound.name, 'データサイズ:', sound.audioData.length);\n          const byteCharacters = atob(sound.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          console.log('Blob復元成功:', sound.name, 'サイズ:', blob.size, 'タイプ:', blob.type);\n          return { ...sound, audioBlob: blob };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    \n    setSounds(soundsWithBlob);\n    \n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm) => {\n    return new Promise(async (resolve) => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          console.log('AudioContext方式で音声長さを取得中...');\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          \n          console.log('AudioContext方式で取得した長さ:', durationInSeconds, '秒');\n          \n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            const pixelsPerSecond = (currentBpm / 60) * 100;\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            console.log('AudioContext計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm/60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.log('AudioContext方式でエラー:', error);\n        }\n      }\n\n      // AudioContextが失敗した場合はデフォルト値を使用\n      console.log('AudioContextが利用できないため、デフォルト値を使用');\n      resolve(400);\n    });\n  }, [audioContext, bpm]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = (bpm / 60) * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n        \n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n        \n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = (bpm / 60) * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - (timeInSeconds * 1000));\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async (newBpm) => {\n    setBpm(newBpm);\n    \n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration更新に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null, // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current\n      };\n\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('プロジェクトを保存しました');\n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n        \n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = (soundData) => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              return { ...soundData, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n        \n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips.map(clip => ({\n              ...clip,\n              soundData: restoreAudioBlob(clip.soundData)\n            }))\n          }));\n          setTracks(restoredTracks);\n          console.log('トラックデータを復元しました:', restoredTracks.length, 'トラック');\n        }\n        \n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        // 音素材を復元（既存の音素材に追加）\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n          \n          // 既存の音素材と読み込んだ音素材を結合\n          // 重複を避けるために、IDが重複しない新しいIDを割り当て\n          setSounds(prevSounds => {\n            const maxId = prevSounds.length > 0 ? Math.max(...prevSounds.map(s => s.id)) : 0;\n            const newSounds = restoredSounds.map((sound, index) => ({\n              ...sound,\n              id: maxId + index + 1 // 新しいIDを割り当て\n            }));\n            \n            console.log('音素材を追加しました:', newSounds.length, '個（既存:', prevSounds.length, '個）');\n            return [...prevSounds, ...newSounds];\n          });\n        }\n        \n        console.log('プロジェクトを読み込みました');\n        setError(null);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    \n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = (bpm / 60) * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({ sampleRate: 44100 });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      \n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              \n              const pixelsPerSecond = (bpm / 60) * 100;\n              const startTimeInSamples = Math.floor((clip.startTime / pixelsPerSecond) * exportContext.sampleRate);\n              \n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                \n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n              \n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('音源を出力しました');\n      await exportContext.close();\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = (buffer) => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    \n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n    \n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n    \n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    \n    return new Blob([arrayBuffer], { type: 'audio/wav' });\n  };\n\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n    \n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    \n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n\n  const removeTrack = (trackId) => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    \n    console.log('ドロップ処理開始:', { trackId, timePosition, draggedClip });\n    \n    try {\n      // 8分音符に合わせて位置を調整（50px単位）\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      \n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n        \n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => \n                clip.id === draggedClip.id ? updatedClip : clip\n              )\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n      \n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      \n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n      \n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      \n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      \n      console.log('新しい音素材のドロップ:', { soundData, hasAudioBlob: !!soundData.audioBlob });\n      \n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n\n      const newClip = {\n        id: Date.now() + Math.random(), // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n\n      console.log('作成されたクリップ:', newClip);\n      console.log('現在のトラック数:', tracks.length);\n      console.log('対象トラックID:', trackId);\n      console.log('対象トラック:', tracks.find(t => t.id === trackId));\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        console.log('更新前のトラック:', prevTracks.find(t => t.id === trackId));\n        const updatedTracks = prevTracks.map(track => \n          track.id === trackId \n            ? { ...track, clips: [...track.clips, newClip] }\n            : track\n        );\n        console.log('更新後のトラック:', updatedTracks.find(t => t.id === trackId));\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    \n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n    \n    // ドラッグプレビューの更新\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n    \n    const trackElement = e.currentTarget;\n    const trackRect = trackElement.getBoundingClientRect();\n    const tracksAreaRect = timelineRef.current?.getBoundingClientRect();\n    \n    if (tracksAreaRect) {\n      const relativeTop = trackRect.top - tracksAreaRect.top;\n      const trackId = parseInt(trackElement.dataset.trackId);\n      \n      // プレビュー幅を決定\n      let previewWidth = 400; // デフォルト値（1小節）\n      \n      if (draggedClip) {\n        // 既存クリップの場合\n        previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 \n          ? draggedClip.duration \n          : 400;\n        console.log('既存クリップのプレビュー幅:', previewWidth);\n      } else {\n        // 新しい音素材の場合、事前に計算された長さを使用\n        previewWidth = draggedSoundDuration;\n        console.log('新しい音素材のプレビュー幅:', previewWidth, '(draggedSoundDuration)');\n      }\n      \n      setDragPreview({\n        left: snappedPosition,\n        top: relativeTop + 10,\n        width: previewWidth,\n        trackId: trackId\n      });\n    }\n  };\n\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => \n      track.id === trackId \n        ? { ...track, clips: track.clips.filter(clip => clip.id !== clipId) }\n        : track\n    ));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({ ...clip, originalTrackId });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = (e) => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e && e.dataTransfer && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400); // リセット\n  };\n\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      setIsPlaying(true);\n      \n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = (bpm / 60) * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n      \n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      \n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          \n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + (clip.duration / pixelsPerSecond);\n          \n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', { clipStartTimeInSeconds, clipEndTimeInSeconds });\n            return;\n          }\n          \n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      \n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    console.log('scheduleClipPlayback:', { clip, hasAudioBlob: !!clip.soundData?.audioBlob });\n    \n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        \n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n        \n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        \n        playingAudiosMap.set(clip.id, { audio, timeoutId, audioUrl });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: clip.soundData?.name,\n        hasAudioData: !!clip.soundData?.audioData,\n        hasAudioBlob: !!clip.soundData?.audioBlob,\n        audioBlobType: typeof clip.soundData?.audioBlob,\n        isInstanceOfBlob: clip.soundData?.audioBlob instanceof Blob\n      });\n      \n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        console.log('audioDataからBlobを再作成中...');\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          \n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n          \n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n    \n    // 再生中の音声を一時停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    \n    // 再生中の音声を停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    \n    setPlayingAudios(new Map());\n  };\n\n  return (\n    <div className=\"daw-page\">\n      <h2>🎹 音楽づくりページ</h2>\n      <p>音素材をドラッグ&ドロップして音楽を作りましょう！</p>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"daw-controls card\">\n        <div className=\"transport-controls\">\n          <button \n            className={`transport-btn play-btn ${isPlaying ? 'playing' : ''}`}\n            onClick={isPlaying ? pause : play}\n          >\n            {isPlaying ? '⏸️' : '▶️'}\n          </button>\n          <button className=\"transport-btn stop-btn\" onClick={stop}>\n            ⏹️\n          </button>\n        </div>\n\n        <div className=\"bpm-control\">\n          <label htmlFor=\"bpm\">🎵 BPM:</label>\n          <input\n            id=\"bpm\"\n            type=\"number\"\n            value={bpm}\n            onChange={(e) => handleBpmChange(parseInt(e.target.value))}\n            min=\"60\"\n            max=\"200\"\n            className=\"bpm-input\"\n          />\n        </div>\n\n        <div className=\"track-controls\">\n          <button className=\"button-primary\" onClick={addTrack}>\n            ➕ トラック追加\n          </button>\n          <button \n            className=\"button-secondary\" \n            onClick={() => setShowSoundPanel(!showSoundPanel)}\n          >\n            {showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'}\n          </button>\n        </div>\n\n        <div className=\"project-controls\">\n          <button className=\"button-secondary\" onClick={saveProject}>\n            💾 プロジェクト保存\n          </button>\n          <label className=\"button-secondary file-input-label\">\n            📁 プロジェクト読み込み\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={loadProject}\n              style={{ display: 'none' }}\n            />\n          </label>\n          <button \n            className=\"button-primary\" \n            onClick={exportAudio}\n            disabled={isExporting}\n          >\n            {isExporting ? '🔄 出力中...' : '🎧 音源出力'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"daw-main-area\">\n        <div className={`sound-panel ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"sound-panel-header\">\n            <h3>🎵 音素材</h3>\n            <button \n              className=\"sound-panel-close\"\n              onClick={() => setShowSoundPanel(false)}\n              title=\"音素材パネルを閉じる\"\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"sound-list\">\n            {sounds.length > 0 ? (\n              sounds.map(sound => (\n                <SoundItem \n                  key={sound.id} \n                  sound={sound} \n                  onDragStart={async (sound) => {\n                    // ドラッグ開始時に音声の長さを計算\n                    console.log('ドラッグ開始 - 音声長さ計算中:', sound.name);\n                    if (sound.audioBlob) {\n                      try {\n                        const duration = await getAudioDuration(sound.audioBlob, bpm);\n                        console.log('計算された音声長さ:', duration, 'px');\n                        setDraggedSoundDuration(duration);\n                      } catch (error) {\n                        console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                        setDraggedSoundDuration(400);\n                      }\n                    } else {\n                      console.log('audioBlob が存在しません - デフォルト値使用');\n                      setDraggedSoundDuration(400);\n                    }\n                  }}\n                />\n              ))\n            ) : (\n              <div className=\"no-sounds\">\n                <p>音素材がありません</p>\n                <p>「音あつめ」ページで音を録音してください</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={`daw-workspace ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"track-headers\">\n            <div className=\"timeline-header-spacer\">\n              タイムライン\n            </div>\n            {tracks.map(track => (\n              <TrackHeader \n                key={track.id} \n                track={track} \n                onRemove={removeTrack}\n                trackHeight={trackHeight}\n              />\n            ))}\n          </div>\n\n          <div className=\"timeline-container\">\n            <Timeline bpm={bpm} />\n            <div className=\"tracks-area\" ref={timelineRef} style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n              <Playhead currentTime={currentTime} />\n              {dragPreview && (\n                <div \n                  className=\"drag-preview\"\n                  style={{\n                    left: dragPreview.left,\n                    top: dragPreview.top,\n                    width: dragPreview.width\n                  }}\n                />\n              )}\n              {tracks.map(track => (\n                <Track\n                  key={track.id}\n                  track={track}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onRemoveClip={removeClip}\n                  onClipDragStart={handleClipDragStart}\n                  onDragEnd={handleDragEnd}\n                  trackHeight={trackHeight}\n                  bpm={bpm}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"instructions card\">\n        <h3>📖 使い方</h3>\n        <ul>\n          <li><strong>🖥️ PC:</strong> 左側の音素材パネルから音素材をトラックにドラッグ&ドロップして配置</li>\n          <li><strong>📱 スマホ/タブレット:</strong> 音素材を長押ししてからトラックまでドラッグして配置</li>\n          <li>配置済みの音素材もドラッグして別の場所に移動できます</li>\n          <li>ドラッグ中は配置予定位置に青い影が表示されます</li>\n          <li>音素材は8分音符（裏拍含む）に合わせて自動的に配置されます</li>\n          <li>音素材パネルの▶️ボタンで個別に音を確認できます</li>\n          <li>▶️ボタンで再生、⏸️ボタンで一時停止、⏹️ボタンで停止</li>\n          <li>BPMを変更して音楽の速さを調整</li>\n          <li>トラックを追加して複数の音を重ねることができます</li>\n          <li><strong>💾 プロジェクト保存:</strong> 編集中のデータをJSONファイルとして保存</li>\n          <li><strong>📁 プロジェクト読み込み:</strong> 保存したプロジェクトファイルを読み込んで編集を再開</li>\n          <li><strong>🎧 音源出力:</strong> 完成した楽曲をWAVファイルとして出力</li>\n        </ul>\n        <div className=\"mobile-tips\">\n          <h4>📱 スマートフォン利用のコツ</h4>\n          <ul>\n            <li>音素材を軽く長押しするとドラッグモードになります</li>\n            <li>ドラッグ中は画面がスクロールしないよう制御されます</li>\n            <li>青くハイライトされたトラックで指を離すと音素材が配置されます</li>\n            <li>横画面表示にするとより使いやすくなります</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SoundItem = ({ sound, onDragStart }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n\n  const handleDragStart = (e) => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    \n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n    \n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n    \n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = (e) => {\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // 長押し判定用のタイマー\n    setTimeout(() => {\n      if (touchStart && !isDragging) {\n        setIsDragging(true);\n        // スクロールを一時的に無効化\n        document.body.classList.add('dragging');\n        \n        // 親コンポーネントのonDragStart関数を呼び出し\n        if (onDragStart) {\n          onDragStart(sound);\n        }\n        // グローバル変数に設定\n        window.currentDraggedSoundBlob = sound.audioBlob;\n        window.currentDraggedSound = sound;\n      }\n    }, 200); // 200ms長押しで開始\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n      \n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // ドラッグプレビューを削除\n    const dragPreview = document.querySelector('.mobile-drag-preview');\n    if (dragPreview) {\n      dragPreview.remove();\n    }\n    \n    // グローバル変数をクリア\n    window.currentDraggedSoundBlob = null;\n    window.currentDraggedSound = null;\n  };\n\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      const audio = new Audio();\n      audio.src = URL.createObjectURL(sound.audioBlob);\n      audio.play()\n        .then(() => {\n          setIsPlaying(true);\n          audio.addEventListener('ended', () => {\n            setIsPlaying(false);\n          });\n        })\n        .catch(error => {\n          console.error('音声再生エラー:', error);\n        });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = useCallback(() => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  }, [isDragging, touchMove, sound.name]);\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove, createDragPreview]);\n\n  return (\n    <div\n      className={`sound-item ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <div className=\"sound-info\">\n        <h4>{sound.name}</h4>\n        <div className=\"sound-tags\">\n          {sound.tags.map((tag, index) => (\n            <span key={index} className=\"sound-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"sound-actions\">\n        <button \n          className=\"play-sound-btn\"\n          onClick={playSound}\n          disabled={isPlaying}\n        >\n          {isPlaying ? '⏸️' : '▶️'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst TrackHeader = ({ track, onRemove, trackHeight }) => {\n  return (\n    <div className=\"track-header\" style={{ height: trackHeight }}>\n      <div className=\"track-info\">\n        <h4>{track.name}</h4>\n        <div className=\"track-actions\">\n          <button \n            className=\"remove-track-btn\"\n            onClick={() => onRemove(track.id)}\n            title=\"トラックを削除\"\n          >\n            🗑️\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Timeline = ({ bpm }) => {\n  const measures = TOTAL_MEASURES; // 16小節表示\n  const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n  return (\n    <div className=\"timeline\" style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n      {Array.from({ length: measures }, (_, measureIndex) => (\n        <div key={measureIndex} className=\"measure\">\n          <div className=\"measure-number\">{measureIndex + 1}</div>\n          <div className=\"beats\">\n            {Array.from({ length: beatsPerMeasure }, (_, beatIndex) => (\n              <div \n                key={beatIndex} \n                className=\"beat\"\n                style={{ width: BEAT_WIDTH }}\n              >\n                <div className=\"beat-main\">\n                  {beatIndex + 1}\n                </div>\n                <div className=\"beat-sub\">\n                  <div className=\"sub-beat-marker\">・</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Track = ({ track, onDrop, onDragOver, onRemoveClip, onClipDragStart, onDragEnd, trackHeight, bpm }) => {\n  const handleDrop = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = useCallback((e) => {\n    const { trackId, timePosition, sound } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, trackId, timePosition);\n  }, [onDrop]);\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = useCallback((e) => {\n    const { clip, newTrackId, timePosition } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, newTrackId, timePosition);\n  }, [onDrop]);\n\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n      };\n    }\n  }, [track.id, handleMobileDrop, handleMobileClipMove]);\n\n  return (\n    <div \n      className=\"track\"\n      style={{ height: trackHeight }}\n      data-track-id={track.id}\n      onDrop={handleDrop}\n      onDragOver={onDragOver}\n    >\n      <div className=\"track-grid\">\n        {/* 表拍（主要な拍）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => {\n          const isFirstBeat = index === 0;\n          const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n          const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n          return (\n            <div key={`main-${index}`} className={className} style={{ left: index * BEAT_WIDTH }} />\n          );\n        })}\n        {/* 裏拍（8分音符）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => (\n          <div key={`sub-${index}`} className=\"beat-line beat-line-sub\" style={{ left: index * BEAT_WIDTH + SUB_BEAT_WIDTH }} />\n        ))}\n      </div>\n      \n      {track.clips.map(clip => (\n        <AudioClip\n          key={clip.id}\n          clip={clip}\n          trackId={track.id}\n          onRemove={() => onRemoveClip(track.id, clip.id)}\n          onDragStart={onClipDragStart}\n          onDragEnd={onDragEnd}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AudioClip = ({ clip, trackId, onRemove, onDragStart, onDragEnd }) => {\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n\n    generateWaveform();\n  }, [clip.soundData]);\n\n  const handleDragStart = (e) => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n    \n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = (e) => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // ドラッグモードを有効化\n    document.body.classList.add('dragging');\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（5px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 5 || deltaY > 5)) {\n      setIsDragging(true);\n      onDragStart(clip, trackId);\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    if (onDragEnd) {\n      onDragEnd(null); // nullを渡してガード条件を満たす\n    }\n  };\n\n  return (\n    <div \n      className={`audio-clip ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={onDragEnd}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n      style={{\n        left: clip.startTime,\n        width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n      }}\n    >\n      <div className=\"clip-header\">\n        <span className=\"clip-name\">{clip.soundData.name}</span>\n        <button \n          className=\"remove-clip-btn\"\n          onClick={onRemove}\n          title=\"クリップを削除\"\n        >\n          ×\n        </button>\n      </div>\n      <div className=\"clip-waveform\">\n        {waveformData.length > 0 ? (\n          <svg className=\"waveform-svg\" width=\"100%\" height=\"30\">\n            {waveformData.map((height, index) => (\n              <rect\n                key={index}\n                x={`${(index / waveformData.length) * 100}%`}\n                y={`${(1 - height) * 15}`}\n                width={`${80 / waveformData.length}%`}\n                height={`${height * 30}`}\n                fill=\"rgba(255, 255, 255, 0.8)\"\n              />\n            ))}\n          </svg>\n        ) : (\n          <div className=\"waveform-placeholder\">🔊</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Playhead = ({ currentTime }) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  \n  return (\n    <div \n      className=\"playhead\"\n      style={{ left: safeCurrentTime }}\n    />\n  );\n};\n\nexport default DAWPage;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;AACxB,MAAMC,iBAAiB,GAAG,CAAC,CAAC,CAAC;AAC7B,MAAMC,aAAa,GAAGF,UAAU,GAAGC,iBAAiB,CAAC,CAAC;AACtD,MAAME,cAAc,GAAGH,UAAU,GAAG,CAAC,CAAC,CAAC;AACvC,MAAMI,cAAc,GAAG,EAAE,CAAC,CAAC;AAC3B,MAAMC,WAAW,GAAGD,cAAc,GAAGH,iBAAiB,CAAC,CAAC;;AAExD,MAAMK,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAMC,iBAAiB,GAAGb,MAAM,CAAC,CAAC,CAAC;EACnC;EACA,MAAMc,mBAAmB,GAAGd,MAAM,CAAC,CAAC,CAAC;EAErC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC;IAC1CkB,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IACdC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,CAAC,CAAC;EACH,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGxB,QAAQ,CAAC,GAAG,CAAC;EACnC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+B,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,IAAIkC,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuC,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyC,cAAc,EAAEC,iBAAiB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC6C,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC+C,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhD,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACvE,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAMmD,WAAW,GAAGlD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMmD,iBAAiB,GAAGnD,MAAM,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMmD,GAAG,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;IACpE1B,eAAe,CAACuB,GAAG,CAAC;;IAEpB;IACA,MAAMI,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC;IAC/EC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEN,WAAW,CAACO,MAAM,CAAC;;IAE3D;IACA,MAAMC,cAAc,GAAGR,WAAW,CAACS,GAAG,CAACC,KAAK,IAAI;MAC9C,IAAIA,KAAK,CAACC,SAAS,EAAE;QACnB,IAAI;UACFN,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,KAAK,CAAC9C,IAAI,EAAE,SAAS,EAAE8C,KAAK,CAACC,SAAS,CAACJ,MAAM,CAAC;UACvE,MAAMK,cAAc,GAAGC,IAAI,CAACH,KAAK,CAACC,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1D,MAAMC,WAAW,GAAG,IAAIC,KAAK,CAACJ,cAAc,CAACL,MAAM,CAAC;UACpD,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACL,MAAM,EAAEU,CAAC,EAAE,EAAE;YAC9CF,WAAW,CAACE,CAAC,CAAC,GAAGL,cAAc,CAACM,UAAU,CAACD,CAAC,CAAC;UAC/C;UACA,MAAME,SAAS,GAAG,IAAIC,UAAU,CAACL,WAAW,CAAC;UAC7C,MAAMM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,SAAS,CAAC,EAAE;YAAEI,IAAI,EAAE;UAAY,CAAC,CAAC;UACzDlB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,KAAK,CAAC9C,IAAI,EAAE,MAAM,EAAEyD,IAAI,CAACG,IAAI,EAAE,MAAM,EAAEH,IAAI,CAACE,IAAI,CAAC;UAC1E,OAAO;YAAE,GAAGb,KAAK;YAAEe,SAAS,EAAEJ;UAAK,CAAC;QACtC,CAAC,CAAC,OAAOzC,KAAK,EAAE;UACdyB,OAAO,CAACzB,KAAK,CAAC,cAAc,EAAE8B,KAAK,CAAC9C,IAAI,EAAEgB,KAAK,CAAC;UAChD,OAAO8B,KAAK;QACd;MACF;MACA,OAAOA,KAAK;IACd,CAAC,CAAC;IAEF3B,SAAS,CAACyB,cAAc,CAAC;IAEzB,OAAO,MAAM;MACX,IAAIZ,GAAG,EAAE;QACPA,GAAG,CAAC8B,KAAK,CAAC,CAAC;MACb;MACA,IAAI/B,iBAAiB,CAACgC,OAAO,EAAE;QAC7BC,oBAAoB,CAACjC,iBAAiB,CAACgC,OAAO,CAAC;MACjD;MACA;MACA,IAAI9B,MAAM,CAACgC,uBAAuB,EAAE;QAClChC,MAAM,CAACgC,uBAAuB,GAAG,IAAI;MACvC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,gBAAgB,GAAGpF,WAAW,CAAC,CAAC+E,SAAS,EAAEM,UAAU,GAAGjE,GAAG,KAAK;IACpE,OAAO,IAAIkE,OAAO,CAAC,MAAOC,OAAO,IAAK;MACpC,IAAI,CAACR,SAAS,IAAI,EAAEA,SAAS,YAAYH,IAAI,CAAC,EAAE;QAC9CjB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC2B,OAAO,CAAC,GAAG,CAAC;QACZ;MACF;MAEA5B,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;QAC1BkB,IAAI,EAAEC,SAAS,CAACD,IAAI;QACpBD,IAAI,EAAEE,SAAS,CAACF,IAAI;QACpBzD,GAAG,EAAEiE;MACP,CAAC,CAAC;;MAEF;MACA,IAAI3D,YAAY,EAAE;QAChB,IAAI;UACFiC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;UACzC,MAAM4B,WAAW,GAAG,MAAMT,SAAS,CAACS,WAAW,CAAC,CAAC;UACjD,MAAMC,WAAW,GAAG,MAAM/D,YAAY,CAACgE,eAAe,CAACF,WAAW,CAAC;UACnE,MAAMG,iBAAiB,GAAGF,WAAW,CAACG,QAAQ;UAE9CjC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE+B,iBAAiB,EAAE,GAAG,CAAC;UAE7D,IAAIE,QAAQ,CAACF,iBAAiB,CAAC,IAAIA,iBAAiB,GAAG,CAAC,EAAE;YACxD,MAAMG,eAAe,GAAIT,UAAU,GAAG,EAAE,GAAI,GAAG;YAC/C,MAAMU,aAAa,GAAGJ,iBAAiB,GAAGG,eAAe;YACzDnC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEyB,UAAU,EAAE,MAAM,EAAEA,UAAU,GAAC,EAAE,EAAE,SAAS,EAAES,eAAe,EAAE,MAAM,EAAEC,aAAa,EAAE,IAAI,CAAC;YAClIR,OAAO,CAACQ,aAAa,CAAC;YACtB;UACF;QACF,CAAC,CAAC,OAAO7D,KAAK,EAAE;UACdyB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE1B,KAAK,CAAC;QAC3C;MACF;;MAEA;MACAyB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9C2B,OAAO,CAAC,GAAG,CAAC;IACd,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC7D,YAAY,EAAEN,GAAG,CAAC,CAAC;;EAEvB;EACA,MAAM4E,cAAc,GAAGhG,WAAW,CAAC,MAAM;IACvC,MAAMiG,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAI3E,SAAS,IAAIU,aAAa,EAAE;QAC9B,MAAMkE,OAAO,GAAG,CAAClF,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGe,aAAa,IAAI,IAAI,CAAC,CAAC;QACrD,MAAM8D,eAAe,GAAI1E,GAAG,GAAG,EAAE,GAAI,GAAG,CAAC,CAAC;QAC1C,MAAM+E,cAAc,GAAGD,OAAO,GAAGJ,eAAe;;QAEhD;QACA,IAAID,QAAQ,CAACM,cAAc,CAAC,IAAIA,cAAc,IAAI,CAAC,EAAE;UACnD1E,cAAc,CAAC0E,cAAc,CAAC;QAChC,CAAC,MAAM;UACLxC,OAAO,CAACyC,IAAI,CAAC,iBAAiB,EAAED,cAAc,EAAE,UAAU,EAAED,OAAO,EAAE,kBAAkB,EAAEJ,eAAe,CAAC;QAC3G;;QAEA;QACA7C,iBAAiB,CAACgC,OAAO,GAAGoB,qBAAqB,CAACJ,OAAO,CAAC;MAC5D;IACF,CAAC;IAED,IAAI3E,SAAS,IAAIU,aAAa,EAAE;MAC9BiE,OAAO,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAAC3E,SAAS,EAAEU,aAAa,EAAEZ,GAAG,CAAC,CAAC;EAEnCrB,SAAS,CAAC,MAAM;IACd,IAAIuB,SAAS,EAAE;MACb,IAAI,CAACU,aAAa,EAAE;QAClB;QACA,MAAM8D,eAAe,GAAI1E,GAAG,GAAG,EAAE,GAAI,GAAG;QACxC,IAAIyE,QAAQ,CAACC,eAAe,CAAC,IAAIA,eAAe,GAAG,CAAC,EAAE;UACpD,MAAMQ,aAAa,GAAG9E,WAAW,GAAGsE,eAAe;UACnD,IAAID,QAAQ,CAACS,aAAa,CAAC,IAAIA,aAAa,IAAI,CAAC,EAAE;YACjDrE,gBAAgB,CAACjB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAIqF,aAAa,GAAG,IAAK,CAAC;UACvD,CAAC,MAAM;YACLrE,gBAAgB,CAACjB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;UAC9B;QACF,CAAC,MAAM;UACLgB,gBAAgB,CAACjB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;QAC9B;MACF;IACF,CAAC,MAAM;MACL;MACA,IAAIgC,iBAAiB,CAACgC,OAAO,EAAE;QAC7BC,oBAAoB,CAACjC,iBAAiB,CAACgC,OAAO,CAAC;QAC/ChC,iBAAiB,CAACgC,OAAO,GAAG,IAAI;MAClC;MACAhD,gBAAgB,CAAC,IAAI,CAAC;IACxB;IACA;EACF,CAAC,EAAE,CAACX,SAAS,EAAEF,GAAG,EAAEI,WAAW,CAAC,CAAC;;EAEjC;EACAzB,SAAS,CAAC,MAAM;IACd,IAAIuB,SAAS,IAAIU,aAAa,EAAE;MAC9BgE,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAAC1E,SAAS,EAAEU,aAAa,EAAEgE,cAAc,CAAC,CAAC;;EAE9C;EACA,MAAMO,eAAe,GAAGvG,WAAW,CAAC,MAAOwG,MAAM,IAAK;IACpDnF,MAAM,CAACmF,MAAM,CAAC;;IAEd;IACA,MAAMC,aAAa,GAAG,MAAMnB,OAAO,CAACoB,GAAG,CACrC7F,MAAM,CAACkD,GAAG,CAAC,MAAO4C,KAAK,IAAK;MAC1B,MAAMC,YAAY,GAAG,MAAMtB,OAAO,CAACoB,GAAG,CACpCC,KAAK,CAACxF,KAAK,CAAC4C,GAAG,CAAC,MAAO8C,IAAI,IAAK;QAC9B,IAAIA,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAAC/B,SAAS,EAAE;UAC9C,IAAI;YACF,MAAMgC,WAAW,GAAG,MAAM3B,gBAAgB,CAACyB,IAAI,CAACC,SAAS,CAAC/B,SAAS,EAAEyB,MAAM,CAAC;YAC5E,OAAO;cAAE,GAAGK,IAAI;cAAEjB,QAAQ,EAAEmB;YAAY,CAAC;UAC3C,CAAC,CAAC,OAAO7E,KAAK,EAAE;YACdyB,OAAO,CAACyC,IAAI,CAAC,qBAAqB,EAAElE,KAAK,CAAC;YAC1C,OAAO2E,IAAI;UACb;QACF;QACA,OAAOA,IAAI;MACb,CAAC,CACH,CAAC;MACD,OAAO;QAAE,GAAGF,KAAK;QAAExF,KAAK,EAAEyF;MAAa,CAAC;IAC1C,CAAC,CACH,CAAC;IAED9F,SAAS,CAAC2F,aAAa,CAAC;EAC1B,CAAC,EAAE,CAAC5F,MAAM,EAAEuE,gBAAgB,CAAC,CAAC;;EAE9B;EACA,MAAM4B,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI;MACF,MAAMC,WAAW,GAAG;QAClBC,OAAO,EAAE,KAAK;QACd9F,GAAG,EAAEA,GAAG;QACRP,MAAM,EAAEA,MAAM;QACduB,MAAM,EAAEA,MAAM,CAAC2B,GAAG,CAACC,KAAK,KAAK;UAC3B,GAAGA,KAAK;UACRe,SAAS,EAAE,IAAI;UAAE;UACjBd,SAAS,EAAED,KAAK,CAACC,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;QACHkD,SAAS,EAAEnG,IAAI,CAACC,GAAG,CAAC,CAAC;QACrBmG,gBAAgB,EAAExG,mBAAmB,CAACqE,OAAO;QAC7CoC,cAAc,EAAE1G,iBAAiB,CAACsE;MACpC,CAAC;MAED,MAAMqC,WAAW,GAAG/D,IAAI,CAACgE,SAAS,CAACN,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;MACxD,MAAMtC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC0C,WAAW,CAAC,EAAE;QAAEzC,IAAI,EAAE;MAAmB,CAAC,CAAC;MAClE,MAAM2C,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC/C,IAAI,CAAC;MAErC,MAAMgD,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;MACfG,IAAI,CAACI,QAAQ,GAAG,iBAAiB,IAAI/G,IAAI,CAAC,CAAC,CAACgH,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO;MAChGN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;MAC/BA,IAAI,CAACU,KAAK,CAAC,CAAC;MACZT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;MAC/BF,GAAG,CAACc,eAAe,CAACf,GAAG,CAAC;MAExB7D,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCC,QAAQ,CAAC,mBAAmB,CAAC;IAC/B;EACF,CAAC;;EAED;EACA,MAAMqG,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,IAAI;QACF,MAAM/B,WAAW,GAAG1D,IAAI,CAACC,KAAK,CAACwF,CAAC,CAACL,MAAM,CAACM,MAAM,CAAC;;QAE/C;QACA,IAAI,CAAChC,WAAW,CAACC,OAAO,EAAE;UACxB,MAAM,IAAIgC,KAAK,CAAC,iBAAiB,CAAC;QACpC;;QAEA;QACA,MAAMC,gBAAgB,GAAIrC,SAAS,IAAK;UACtC,IAAIA,SAAS,IAAIA,SAAS,CAAC7C,SAAS,EAAE;YACpC,IAAI;cACF,MAAMC,cAAc,GAAGC,IAAI,CAAC2C,SAAS,CAAC7C,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9D,MAAMC,WAAW,GAAG,IAAIC,KAAK,CAACJ,cAAc,CAACL,MAAM,CAAC;cACpD,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACL,MAAM,EAAEU,CAAC,EAAE,EAAE;gBAC9CF,WAAW,CAACE,CAAC,CAAC,GAAGL,cAAc,CAACM,UAAU,CAACD,CAAC,CAAC;cAC/C;cACA,MAAME,SAAS,GAAG,IAAIC,UAAU,CAACL,WAAW,CAAC;cAC7C,MAAMM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,SAAS,CAAC,EAAE;gBAAEI,IAAI,EAAE;cAAY,CAAC,CAAC;cACzD,OAAO;gBAAE,GAAGiC,SAAS;gBAAE/B,SAAS,EAAEJ;cAAK,CAAC;YAC1C,CAAC,CAAC,OAAOzC,KAAK,EAAE;cACdyB,OAAO,CAACzB,KAAK,CAAC,cAAc,EAAE4E,SAAS,CAAC5F,IAAI,IAAI,SAAS,EAAEgB,KAAK,CAAC;cACjE,OAAO4E,SAAS;YAClB;UACF;UACA,OAAOA,SAAS;QAClB,CAAC;;QAED;QACAzF,MAAM,CAAC4F,WAAW,CAAC7F,GAAG,IAAI,GAAG,CAAC;;QAE9B;QACA,IAAI6F,WAAW,CAACpG,MAAM,EAAE;UACtB,MAAMuI,cAAc,GAAGnC,WAAW,CAACpG,MAAM,CAACkD,GAAG,CAAC4C,KAAK,KAAK;YACtD,GAAGA,KAAK;YACRxF,KAAK,EAAEwF,KAAK,CAACxF,KAAK,CAAC4C,GAAG,CAAC8C,IAAI,KAAK;cAC9B,GAAGA,IAAI;cACPC,SAAS,EAAEqC,gBAAgB,CAACtC,IAAI,CAACC,SAAS;YAC5C,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC;UACHhG,SAAS,CAACsI,cAAc,CAAC;UACzBzF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEwF,cAAc,CAACvF,MAAM,EAAE,MAAM,CAAC;QAC/D;;QAEA;QACA,IAAIoD,WAAW,CAACG,gBAAgB,EAAE;UAChCxG,mBAAmB,CAACqE,OAAO,GAAGgC,WAAW,CAACG,gBAAgB;QAC5D;QACA,IAAIH,WAAW,CAACI,cAAc,EAAE;UAC9B1G,iBAAiB,CAACsE,OAAO,GAAGgC,WAAW,CAACI,cAAc;QACxD;;QAEA;QACA,IAAIJ,WAAW,CAAC7E,MAAM,EAAE;UACtB,MAAMiH,cAAc,GAAGpC,WAAW,CAAC7E,MAAM,CAAC2B,GAAG,CAACC,KAAK,IAAImF,gBAAgB,CAACnF,KAAK,CAAC,CAAC;;UAE/E;UACA;UACA3B,SAAS,CAACiH,UAAU,IAAI;YACtB,MAAMC,KAAK,GAAGD,UAAU,CAACzF,MAAM,GAAG,CAAC,GAAG2F,IAAI,CAACC,GAAG,CAAC,GAAGH,UAAU,CAACvF,GAAG,CAAC2F,CAAC,IAAIA,CAAC,CAAC3I,EAAE,CAAC,CAAC,GAAG,CAAC;YAChF,MAAM4I,SAAS,GAAGN,cAAc,CAACtF,GAAG,CAAC,CAACC,KAAK,EAAE4F,KAAK,MAAM;cACtD,GAAG5F,KAAK;cACRjD,EAAE,EAAEwI,KAAK,GAAGK,KAAK,GAAG,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YAEHjG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE+F,SAAS,CAAC9F,MAAM,EAAE,OAAO,EAAEyF,UAAU,CAACzF,MAAM,EAAE,IAAI,CAAC;YAC9E,OAAO,CAAC,GAAGyF,UAAU,EAAE,GAAGK,SAAS,CAAC;UACtC,CAAC,CAAC;QACJ;QAEAhG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7BzB,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdyB,OAAO,CAACzB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCC,QAAQ,CAAC,2CAA2C,CAAC;MACvD;IACF,CAAC;IAED0G,MAAM,CAACgB,UAAU,CAACnB,IAAI,CAAC;IACvB;IACAD,KAAK,CAACE,MAAM,CAACmB,KAAK,GAAG,EAAE;EACzB,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACrI,YAAY,EAAE;MACjBS,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;IAEAY,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF;MACA,IAAIiH,WAAW,GAAG,CAAC;MACnBnJ,MAAM,CAACoJ,OAAO,CAACtD,KAAK,IAAI;QACtBA,KAAK,CAACxF,KAAK,CAAC8I,OAAO,CAACpD,IAAI,IAAI;UAC1B,MAAMf,eAAe,GAAI1E,GAAG,GAAG,EAAE,GAAI,GAAG;UACxC,MAAM8I,sBAAsB,GAAGrD,IAAI,CAACsD,SAAS,GAAGrE,eAAe;UAC/D,MAAMsE,qBAAqB,GAAGvD,IAAI,CAACjB,QAAQ,GAAGE,eAAe;UAC7D,MAAMuE,WAAW,GAAGH,sBAAsB,GAAGE,qBAAqB;UAClEJ,WAAW,GAAGR,IAAI,CAACC,GAAG,CAACO,WAAW,EAAEK,WAAW,CAAC;QAClD,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,IAAIL,WAAW,KAAK,CAAC,EAAE;QACrB7H,QAAQ,CAAC,4BAA4B,CAAC;QACtCY,cAAc,CAAC,KAAK,CAAC;QACrB;MACF;;MAEA;MACA,MAAMuH,aAAa,GAAG,IAAIlH,YAAY,CAAC;QAAEmH,UAAU,EAAE;MAAM,CAAC,CAAC;MAC7D,MAAMC,YAAY,GAAGhB,IAAI,CAACiB,IAAI,CAACT,WAAW,GAAGM,aAAa,CAACC,UAAU,CAAC;MACtE,MAAMG,YAAY,GAAGJ,aAAa,CAACK,YAAY,CAAC,CAAC,EAAEH,YAAY,EAAEF,aAAa,CAACC,UAAU,CAAC;MAE1F,MAAMK,WAAW,GAAGF,YAAY,CAACG,cAAc,CAAC,CAAC,CAAC;MAClD,MAAMC,YAAY,GAAGJ,YAAY,CAACG,cAAc,CAAC,CAAC,CAAC;;MAEnD;MACA,KAAK,MAAMlE,KAAK,IAAI9F,MAAM,EAAE;QAC1B,KAAK,MAAMgG,IAAI,IAAIF,KAAK,CAACxF,KAAK,EAAE;UAC9B,IAAI0F,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAAC/B,SAAS,EAAE;YAC9C,IAAI;cACF,MAAMS,WAAW,GAAG,MAAMqB,IAAI,CAACC,SAAS,CAAC/B,SAAS,CAACS,WAAW,CAAC,CAAC;cAChE,MAAMC,WAAW,GAAG,MAAM6E,aAAa,CAAC5E,eAAe,CAACF,WAAW,CAAC;cAEpE,MAAMM,eAAe,GAAI1E,GAAG,GAAG,EAAE,GAAI,GAAG;cACxC,MAAM2J,kBAAkB,GAAGvB,IAAI,CAACwB,KAAK,CAAEnE,IAAI,CAACsD,SAAS,GAAGrE,eAAe,GAAIwE,aAAa,CAACC,UAAU,CAAC;;cAEpG;cACA,KAAK,IAAIU,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGzB,IAAI,CAAC0B,GAAG,CAACzF,WAAW,CAAC0F,gBAAgB,EAAE,CAAC,CAAC,EAAEF,OAAO,EAAE,EAAE;gBACpF,MAAMG,UAAU,GAAG3F,WAAW,CAACoF,cAAc,CAACI,OAAO,CAAC;gBACtD,MAAMI,UAAU,GAAGJ,OAAO,KAAK,CAAC,GAAGL,WAAW,GAAGE,YAAY;gBAE7D,KAAK,IAAIvG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6G,UAAU,CAACvH,MAAM,IAAKkH,kBAAkB,GAAGxG,CAAC,GAAI8G,UAAU,CAACxH,MAAM,EAAEU,CAAC,EAAE,EAAE;kBAC1F8G,UAAU,CAACN,kBAAkB,GAAGxG,CAAC,CAAC,IAAI6G,UAAU,CAAC7G,CAAC,CAAC;gBACrD;cACF;;cAEA;cACA,IAAIkB,WAAW,CAAC0F,gBAAgB,KAAK,CAAC,EAAE;gBACtC,MAAMC,UAAU,GAAG3F,WAAW,CAACoF,cAAc,CAAC,CAAC,CAAC;gBAChD,KAAK,IAAItG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6G,UAAU,CAACvH,MAAM,IAAKkH,kBAAkB,GAAGxG,CAAC,GAAIuG,YAAY,CAACjH,MAAM,EAAEU,CAAC,EAAE,EAAE;kBAC5FuG,YAAY,CAACC,kBAAkB,GAAGxG,CAAC,CAAC,IAAI6G,UAAU,CAAC7G,CAAC,CAAC;gBACvD;cACF;YACF,CAAC,CAAC,OAAOrC,KAAK,EAAE;cACdyB,OAAO,CAACzB,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;YACrC;UACF;QACF;MACF;;MAEA;MACA,MAAMoJ,OAAO,GAAGC,gBAAgB,CAACb,YAAY,CAAC;MAC9C,MAAMlD,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC4D,OAAO,CAAC;MAExC,MAAM3D,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;MACfG,IAAI,CAACI,QAAQ,GAAG,kBAAkB,IAAI/G,IAAI,CAAC,CAAC,CAACgH,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM;MAChGN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;MAC/BA,IAAI,CAACU,KAAK,CAAC,CAAC;MACZT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;MAC/BF,GAAG,CAACc,eAAe,CAACf,GAAG,CAAC;MAExB7D,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxB,MAAM0G,aAAa,CAACtF,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAO9C,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChCC,QAAQ,CAAC,eAAe,CAAC;IAC3B,CAAC,SAAS;MACRY,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMwI,gBAAgB,GAAIC,MAAM,IAAK;IACnC,MAAM3H,MAAM,GAAG2H,MAAM,CAAC3H,MAAM;IAC5B,MAAMsH,gBAAgB,GAAGK,MAAM,CAACL,gBAAgB;IAChD,MAAMZ,UAAU,GAAGiB,MAAM,CAACjB,UAAU;IACpC,MAAMkB,cAAc,GAAG,CAAC;IACxB,MAAMC,UAAU,GAAGP,gBAAgB,GAAGM,cAAc;IACpD,MAAME,QAAQ,GAAGpB,UAAU,GAAGmB,UAAU;IACxC,MAAME,QAAQ,GAAG/H,MAAM,GAAG6H,UAAU;IACpC,MAAMG,UAAU,GAAG,EAAE,GAAGD,QAAQ;IAEhC,MAAMpG,WAAW,GAAG,IAAIsG,WAAW,CAACD,UAAU,CAAC;IAC/C,MAAME,IAAI,GAAG,IAAIC,QAAQ,CAACxG,WAAW,CAAC;;IAEtC;IACA,MAAMyG,WAAW,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;MACtC,KAAK,IAAI5H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4H,MAAM,CAACtI,MAAM,EAAEU,CAAC,EAAE,EAAE;QACtCwH,IAAI,CAACK,QAAQ,CAACF,MAAM,GAAG3H,CAAC,EAAE4H,MAAM,CAAC3H,UAAU,CAACD,CAAC,CAAC,CAAC;MACjD;IACF,CAAC;IAED0H,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC;IACtBF,IAAI,CAACM,SAAS,CAAC,CAAC,EAAER,UAAU,GAAG,CAAC,EAAE,IAAI,CAAC;IACvCI,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC;IACtBA,WAAW,CAAC,EAAE,EAAE,MAAM,CAAC;IACvBF,IAAI,CAACM,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;IAC5BN,IAAI,CAACO,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;IAC3BP,IAAI,CAACO,SAAS,CAAC,EAAE,EAAEnB,gBAAgB,EAAE,IAAI,CAAC;IAC1CY,IAAI,CAACM,SAAS,CAAC,EAAE,EAAE9B,UAAU,EAAE,IAAI,CAAC;IACpCwB,IAAI,CAACM,SAAS,CAAC,EAAE,EAAEV,QAAQ,EAAE,IAAI,CAAC;IAClCI,IAAI,CAACO,SAAS,CAAC,EAAE,EAAEZ,UAAU,EAAE,IAAI,CAAC;IACpCK,IAAI,CAACO,SAAS,CAAC,EAAE,EAAEb,cAAc,GAAG,CAAC,EAAE,IAAI,CAAC;IAC5CQ,WAAW,CAAC,EAAE,EAAE,MAAM,CAAC;IACvBF,IAAI,CAACM,SAAS,CAAC,EAAE,EAAET,QAAQ,EAAE,IAAI,CAAC;;IAElC;IACA,IAAIM,MAAM,GAAG,EAAE;IACf,KAAK,IAAI3H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,EAAEU,CAAC,EAAE,EAAE;MAC/B,KAAK,IAAI0G,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGE,gBAAgB,EAAEF,OAAO,EAAE,EAAE;QAC3D,MAAMsB,MAAM,GAAGf,MAAM,CAACX,cAAc,CAACI,OAAO,CAAC,CAAC1G,CAAC,CAAC;QAChD,MAAMiI,SAAS,GAAGhD,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAED,IAAI,CAAC0B,GAAG,CAAC,CAAC,EAAEqB,MAAM,CAAC,CAAC,GAAG,MAAM;QAC5DR,IAAI,CAACU,QAAQ,CAACP,MAAM,EAAEM,SAAS,EAAE,IAAI,CAAC;QACtCN,MAAM,IAAI,CAAC;MACb;IACF;IAEA,OAAO,IAAItH,IAAI,CAAC,CAACY,WAAW,CAAC,EAAE;MAAEX,IAAI,EAAE;IAAY,CAAC,CAAC;EACvD,CAAC;EAED,MAAM6H,QAAQ,GAAGA,CAAA,KAAM;IACrB;IACA/L,iBAAiB,CAACsE,OAAO,IAAI,CAAC;IAC9B,MAAM0H,QAAQ,GAAG3L,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGN,iBAAiB,CAACsE,OAAO;;IAEvD;IACArE,mBAAmB,CAACqE,OAAO,IAAI,CAAC;IAChC,MAAM2H,SAAS,GAAG,QAAQhM,mBAAmB,CAACqE,OAAO,EAAE;IAEvD,MAAM4H,QAAQ,GAAG;MACf9L,EAAE,EAAE4L,QAAQ;MACZzL,IAAI,EAAE0L,SAAS;MACfzL,KAAK,EAAE;IACT,CAAC;IACDL,SAAS,CAACgM,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAED,QAAQ,CAAC,CAAC;EACpD,CAAC;EAED,MAAME,WAAW,GAAIC,OAAO,IAAK;IAC/BlM,SAAS,CAACgM,UAAU,IAAI;MACtB,IAAIA,UAAU,CAACjJ,MAAM,GAAG,CAAC,EAAE;QACzB,OAAOiJ,UAAU,CAACG,MAAM,CAACtG,KAAK,IAAIA,KAAK,CAAC5F,EAAE,KAAKiM,OAAO,CAAC;MACzD;MACA,OAAOF,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,UAAU,GAAG,MAAAA,CAAOlE,CAAC,EAAEgE,OAAO,EAAEG,YAAY,KAAK;IACrDnE,CAAC,CAACoE,cAAc,CAAC,CAAC;IAClBzK,cAAc,CAAC,IAAI,CAAC;IAEpBgB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;MAAEoJ,OAAO;MAAEG,YAAY;MAAE3K;IAAY,CAAC,CAAC;IAEhE,IAAI;MACF;MACA,MAAM6K,eAAe,GAAG7D,IAAI,CAAC8D,KAAK,CAACH,YAAY,GAAG7M,cAAc,CAAC,GAAGA,cAAc;;MAElF;MACA,IAAIkC,WAAW,EAAE;QACfmB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEpB,WAAW,CAACzB,EAAE,EAAE,QAAQ,EAAEyB,WAAW,CAAC+K,eAAe,EAAE,QAAQ,EAAEP,OAAO,CAAC;;QAEnG;QACA,MAAMQ,WAAW,GAAG;UAClB,GAAGhL,WAAW;UACd2H,SAAS,EAAEkD,eAAe;UAC1BL,OAAO,EAAEA;QACX,CAAC;QAEDlM,SAAS,CAACgM,UAAU,IAAIA,UAAU,CAAC/I,GAAG,CAAC4C,KAAK,IAAI;UAC9C,IAAIA,KAAK,CAAC5F,EAAE,KAAKyB,WAAW,CAAC+K,eAAe,IAAI5G,KAAK,CAAC5F,EAAE,KAAKiM,OAAO,EAAE;YACpE;YACArJ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;YAC1B,OAAO;cACL,GAAG+C,KAAK;cACRxF,KAAK,EAAEwF,KAAK,CAACxF,KAAK,CAAC4C,GAAG,CAAC8C,IAAI,IACzBA,IAAI,CAAC9F,EAAE,KAAKyB,WAAW,CAACzB,EAAE,GAAGyM,WAAW,GAAG3G,IAC7C;YACF,CAAC;UACH,CAAC,MAAM,IAAIF,KAAK,CAAC5F,EAAE,KAAKyB,WAAW,CAAC+K,eAAe,EAAE;YACnD;YACA5J,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO;cACL,GAAG+C,KAAK;cACRxF,KAAK,EAAEwF,KAAK,CAACxF,KAAK,CAAC8L,MAAM,CAACpG,IAAI,IAAIA,IAAI,CAAC9F,EAAE,KAAKyB,WAAW,CAACzB,EAAE;YAC9D,CAAC;UACH,CAAC,MAAM,IAAI4F,KAAK,CAAC5F,EAAE,KAAKiM,OAAO,EAAE;YAC/B;YACArJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;YAC9B,OAAO;cACL,GAAG+C,KAAK;cACRxF,KAAK,EAAE,CAAC,GAAGwF,KAAK,CAACxF,KAAK,EAAEqM,WAAW;YACrC,CAAC;UACH;UACA,OAAO7G,KAAK;QACd,CAAC,CAAC,CAAC;QACHlE,cAAc,CAAC,IAAI,CAAC;QACpB;MACF;;MAEA;MACA,IAAIqE,SAAS;MACb,IAAI;QACF;QACA,MAAM2G,QAAQ,GAAGzE,CAAC,CAAC0E,YAAY,GAAG1E,CAAC,CAAC0E,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,GAAG,EAAE;QACjF,IAAIF,QAAQ,EAAE;UACZ3G,SAAS,GAAGvD,IAAI,CAACC,KAAK,CAACiK,QAAQ,CAAC;QAClC,CAAC,MAAM;UACL;UACA3G,SAAS,GAAG3D,MAAM,CAACyK,mBAAmB;QACxC;MACF,CAAC,CAAC,OAAO1L,KAAK,EAAE;QACdyB,OAAO,CAACzB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtC4E,SAAS,GAAG3D,MAAM,CAACyK,mBAAmB,CAAC,CAAC;MAC1C;MAEA,IAAI,CAAC9G,SAAS,EAAE;QACdnD,OAAO,CAACzB,KAAK,CAAC,gBAAgB,CAAC;QAC/BC,QAAQ,CAAC,2BAA2B,CAAC;QACrC;MACF;;MAEA;MACA,IAAIgB,MAAM,CAACgC,uBAAuB,EAAE;QAClC2B,SAAS,CAAC/B,SAAS,GAAG5B,MAAM,CAACgC,uBAAuB;QACpDhC,MAAM,CAACgC,uBAAuB,GAAG,IAAI,CAAC,CAAC;MACzC;;MAEA;MACAhC,MAAM,CAACyK,mBAAmB,GAAG,IAAI;MAEjCjK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;QAAEkD,SAAS;QAAE+G,YAAY,EAAE,CAAC,CAAC/G,SAAS,CAAC/B;MAAU,CAAC,CAAC;;MAE/E;MACA,IAAIa,QAAQ,GAAG,GAAG,CAAC,CAAC;MACpB,IAAIkB,SAAS,CAAC/B,SAAS,EAAE;QACvB,IAAI;UACFa,QAAQ,GAAG,MAAMR,gBAAgB,CAAC0B,SAAS,CAAC/B,SAAS,EAAE3D,GAAG,CAAC;UAC3DuC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEgC,QAAQ,EAAE,cAAc,EAAExE,GAAG,EAAE,GAAG,CAAC;QAClE,CAAC,CAAC,OAAOc,KAAK,EAAE;UACdyB,OAAO,CAACyC,IAAI,CAAC,mBAAmB,EAAElE,KAAK,CAAC;QAC1C;MACF;;MAEA;MACA,IAAI,CAAC2D,QAAQ,CAACD,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,EAAE;QACxCjC,OAAO,CAACyC,IAAI,CAAC,cAAc,EAAER,QAAQ,EAAE,WAAW,CAAC;QACnDA,QAAQ,GAAG,GAAG,CAAC,CAAC;MAClB;MAEA,MAAMkI,OAAO,GAAG;QACd/M,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGuI,IAAI,CAACuE,MAAM,CAAC,CAAC;QAAE;QAChCjH,SAAS,EAAEA,SAAS;QACpBqD,SAAS,EAAEkD,eAAe;QAC1BzH,QAAQ,EAAEA,QAAQ;QAClBoH,OAAO,EAAEA;MACX,CAAC;MAEDrJ,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEkK,OAAO,CAAC;MAClCnK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE/C,MAAM,CAACgD,MAAM,CAAC;MACvCF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEoJ,OAAO,CAAC;MACjCrJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE/C,MAAM,CAACmN,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClN,EAAE,KAAKiM,OAAO,CAAC,CAAC;;MAE1D;MACAlM,SAAS,CAACgM,UAAU,IAAI;QACtBnJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkJ,UAAU,CAACkB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClN,EAAE,KAAKiM,OAAO,CAAC,CAAC;QAChE,MAAMvG,aAAa,GAAGqG,UAAU,CAAC/I,GAAG,CAAC4C,KAAK,IACxCA,KAAK,CAAC5F,EAAE,KAAKiM,OAAO,GAChB;UAAE,GAAGrG,KAAK;UAAExF,KAAK,EAAE,CAAC,GAAGwF,KAAK,CAACxF,KAAK,EAAE2M,OAAO;QAAE,CAAC,GAC9CnH,KACN,CAAC;QACDhD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE6C,aAAa,CAACuH,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClN,EAAE,KAAKiM,OAAO,CAAC,CAAC;QACnE,OAAOvG,aAAa;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOvE,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChCC,QAAQ,CAAC,0BAA0B,CAAC;IACtC;EACF,CAAC;EAED,MAAM+L,cAAc,GAAIlF,CAAC,IAAK;IAAA,IAAAmF,oBAAA;IAC5BnF,CAAC,CAACoE,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI5K,WAAW,EAAE;MACfwG,CAAC,CAAC0E,YAAY,CAACU,UAAU,GAAG,MAAM;IACpC,CAAC,MAAM;MACLpF,CAAC,CAAC0E,YAAY,CAACU,UAAU,GAAG,MAAM;IACpC;;IAEA;IACA,MAAMC,IAAI,GAAGrF,CAAC,CAACsF,aAAa,CAACC,qBAAqB,CAAC,CAAC;IACpD,MAAMpB,YAAY,GAAGnE,CAAC,CAACwF,OAAO,GAAGH,IAAI,CAACI,IAAI;IAC1C,MAAMpB,eAAe,GAAG7D,IAAI,CAAC8D,KAAK,CAACH,YAAY,GAAG7M,cAAc,CAAC,GAAGA,cAAc;IAElF,MAAMoO,YAAY,GAAG1F,CAAC,CAACsF,aAAa;IACpC,MAAMK,SAAS,GAAGD,YAAY,CAACH,qBAAqB,CAAC,CAAC;IACtD,MAAMK,cAAc,IAAAT,oBAAA,GAAGnL,WAAW,CAACiC,OAAO,cAAAkJ,oBAAA,uBAAnBA,oBAAA,CAAqBI,qBAAqB,CAAC,CAAC;IAEnE,IAAIK,cAAc,EAAE;MAClB,MAAMC,WAAW,GAAGF,SAAS,CAACG,GAAG,GAAGF,cAAc,CAACE,GAAG;MACtD,MAAM9B,OAAO,GAAG+B,QAAQ,CAACL,YAAY,CAACM,OAAO,CAAChC,OAAO,CAAC;;MAEtD;MACA,IAAIiC,YAAY,GAAG,GAAG,CAAC,CAAC;;MAExB,IAAIzM,WAAW,EAAE;QACf;QACAyM,YAAY,GAAGpJ,QAAQ,CAACrD,WAAW,CAACoD,QAAQ,CAAC,IAAIpD,WAAW,CAACoD,QAAQ,GAAG,CAAC,GACrEpD,WAAW,CAACoD,QAAQ,GACpB,GAAG;QACPjC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEqL,YAAY,CAAC;MAC7C,CAAC,MAAM;QACL;QACAA,YAAY,GAAGrM,oBAAoB;QACnCe,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEqL,YAAY,EAAE,wBAAwB,CAAC;MACvE;MAEAtM,cAAc,CAAC;QACb8L,IAAI,EAAEpB,eAAe;QACrByB,GAAG,EAAED,WAAW,GAAG,EAAE;QACrBK,KAAK,EAAED,YAAY;QACnBjC,OAAO,EAAEA;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMmC,UAAU,GAAGA,CAACnC,OAAO,EAAEoC,MAAM,KAAK;IACtCtO,SAAS,CAACgM,UAAU,IAAIA,UAAU,CAAC/I,GAAG,CAAC4C,KAAK,IAC1CA,KAAK,CAAC5F,EAAE,KAAKiM,OAAO,GAChB;MAAE,GAAGrG,KAAK;MAAExF,KAAK,EAAEwF,KAAK,CAACxF,KAAK,CAAC8L,MAAM,CAACpG,IAAI,IAAIA,IAAI,CAAC9F,EAAE,KAAKqO,MAAM;IAAE,CAAC,GACnEzI,KACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM0I,mBAAmB,GAAGA,CAACxI,IAAI,EAAE0G,eAAe,KAAK;IACrD5J,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEiD,IAAI,CAAC9F,EAAE,EAAE,OAAO,EAAEwM,eAAe,CAAC;IAC7D9K,cAAc,CAAC;MAAE,GAAGoE,IAAI;MAAE0G;IAAgB,CAAC,CAAC;EAC9C,CAAC;;EAED;EACA,MAAM+B,aAAa,GAAItG,CAAC,IAAK;IAC3B;IACA,IAAIxG,WAAW,IAAIwG,CAAC,IAAIA,CAAC,CAAC0E,YAAY,IAAI1E,CAAC,CAAC0E,YAAY,CAACU,UAAU,KAAK,MAAM,EAAE;MAC9EzK,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C;IACAnB,cAAc,CAAC,IAAI,CAAC;IACpBE,cAAc,CAAC,IAAI,CAAC;IACpBE,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAM0M,IAAI,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF;MACA,IAAI7N,YAAY,IAAIA,YAAY,CAAC8N,KAAK,KAAK,WAAW,EAAE;QACtD,MAAM9N,YAAY,CAAC+N,MAAM,CAAC,CAAC;MAC7B;MAEAlO,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,MAAMuE,eAAe,GAAI1E,GAAG,GAAG,EAAE,GAAI,GAAG;MACxC,MAAMsO,oBAAoB,GAAGlO,WAAW,GAAGsE,eAAe;;MAE1D;MACA,MAAM6J,gBAAgB,GAAG,IAAI5N,GAAG,CAAC,CAAC;MAElClB,MAAM,CAACoJ,OAAO,CAACtD,KAAK,IAAI;QACtBA,KAAK,CAACxF,KAAK,CAAC8I,OAAO,CAACpD,IAAI,IAAI;UAC1B;UACA,IAAI,CAAChB,QAAQ,CAACgB,IAAI,CAACjB,QAAQ,CAAC,IAAIiB,IAAI,CAACjB,QAAQ,IAAI,CAAC,EAAE;YAClDjC,OAAO,CAACyC,IAAI,CAAC,mBAAmB,EAAES,IAAI,CAACjB,QAAQ,EAAE,cAAc,CAAC;YAChE;UACF;UAEA,MAAMsE,sBAAsB,GAAGrD,IAAI,CAACsD,SAAS,GAAGrE,eAAe;UAC/D,MAAM8J,oBAAoB,GAAG1F,sBAAsB,GAAIrD,IAAI,CAACjB,QAAQ,GAAGE,eAAgB;;UAEvF;UACA,IAAI,CAACD,QAAQ,CAACqE,sBAAsB,CAAC,IAAI,CAACrE,QAAQ,CAAC+J,oBAAoB,CAAC,EAAE;YACxEjM,OAAO,CAACyC,IAAI,CAAC,UAAU,EAAE;cAAE8D,sBAAsB;cAAE0F;YAAqB,CAAC,CAAC;YAC1E;UACF;;UAEA;UACA,IAAIA,oBAAoB,GAAGF,oBAAoB,EAAE;YAC/C,MAAMG,KAAK,GAAGrG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAES,sBAAsB,GAAGwF,oBAAoB,CAAC;YACxE,IAAI7J,QAAQ,CAACgK,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC,EAAE;cACjCC,oBAAoB,CAACjJ,IAAI,EAAEgJ,KAAK,GAAG,IAAI,EAAEF,gBAAgB,CAAC;YAC5D;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF7N,gBAAgB,CAAC6N,gBAAgB,CAAC;IACpC,CAAC,CAAC,OAAOzN,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAAC,yCAAyC,CAAC;IACrD;EACF,CAAC;EAED,MAAM2N,oBAAoB,GAAGA,CAACjJ,IAAI,EAAEkJ,OAAO,EAAEC,gBAAgB,KAAK;IAAA,IAAAC,eAAA;IAChEtM,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;MAAEiD,IAAI;MAAEgH,YAAY,EAAE,CAAC,GAAAoC,eAAA,GAACpJ,IAAI,CAACC,SAAS,cAAAmJ,eAAA,eAAdA,eAAA,CAAgBlL,SAAS;IAAC,CAAC,CAAC;IAEzF,IAAI8B,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAAC/B,SAAS,IAAI8B,IAAI,CAACC,SAAS,CAAC/B,SAAS,YAAYH,IAAI,EAAE;MAC1F,IAAI;QACF,MAAMsL,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;QACzB,MAAMC,QAAQ,GAAG3I,GAAG,CAACC,eAAe,CAACb,IAAI,CAACC,SAAS,CAAC/B,SAAS,CAAC;QAC9DmL,KAAK,CAACG,GAAG,GAAGD,QAAQ;QAEpB,MAAME,SAAS,GAAGC,UAAU,CAAC,MAAM;UACjCL,KAAK,CAACX,IAAI,CAAC,CAAC,CAACiB,KAAK,CAACtO,KAAK,IAAI;YAC1ByB,OAAO,CAACzB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;YAChCuF,GAAG,CAACc,eAAe,CAAC6H,QAAQ,CAAC,CAAC,CAAC;UACjC,CAAC,CAAC;QACJ,CAAC,EAAEL,OAAO,CAAC;;QAEX;QACAG,KAAK,CAACO,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACpChJ,GAAG,CAACc,eAAe,CAAC6H,QAAQ,CAAC;QAC/B,CAAC,CAAC;QAEFJ,gBAAgB,CAACU,GAAG,CAAC7J,IAAI,CAAC9F,EAAE,EAAE;UAAEmP,KAAK;UAAEI,SAAS;UAAEF;QAAS,CAAC,CAAC;MAC/D,CAAC,CAAC,OAAOlO,KAAK,EAAE;QACdyB,OAAO,CAACzB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,EAAE,YAAY,EAAE2E,IAAI,CAACC,SAAS,CAAC/B,SAAS,CAAC;MACtF;IACF,CAAC,MAAM;MAAA,IAAA4L,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACLpN,OAAO,CAACyC,IAAI,CAAC,wBAAwB,EAAE;QACrCgJ,MAAM,EAAEvI,IAAI,CAAC9F,EAAE;QACfiQ,aAAa,GAAAL,gBAAA,GAAE9J,IAAI,CAACC,SAAS,cAAA6J,gBAAA,uBAAdA,gBAAA,CAAgBzP,IAAI;QACnC+P,YAAY,EAAE,CAAC,GAAAL,gBAAA,GAAC/J,IAAI,CAACC,SAAS,cAAA8J,gBAAA,eAAdA,gBAAA,CAAgB3M,SAAS;QACzC4J,YAAY,EAAE,CAAC,GAAAgD,gBAAA,GAAChK,IAAI,CAACC,SAAS,cAAA+J,gBAAA,eAAdA,gBAAA,CAAgB9L,SAAS;QACzCmM,aAAa,EAAE,SAAAJ,gBAAA,GAAOjK,IAAI,CAACC,SAAS,cAAAgK,gBAAA,uBAAdA,gBAAA,CAAgB/L,SAAS;QAC/CoM,gBAAgB,EAAE,EAAAJ,gBAAA,GAAAlK,IAAI,CAACC,SAAS,cAAAiK,gBAAA,uBAAdA,gBAAA,CAAgBhM,SAAS,aAAYH;MACzD,CAAC,CAAC;;MAEF;MACA,IAAIiC,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAAC7C,SAAS,IAAI,CAAC4C,IAAI,CAACC,SAAS,CAAC/B,SAAS,EAAE;QAC3EpB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtC,IAAI;UACF,MAAMM,cAAc,GAAGC,IAAI,CAAC0C,IAAI,CAACC,SAAS,CAAC7C,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACnE,MAAMC,WAAW,GAAG,IAAIC,KAAK,CAACJ,cAAc,CAACL,MAAM,CAAC;UACpD,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACL,MAAM,EAAEU,CAAC,EAAE,EAAE;YAC9CF,WAAW,CAACE,CAAC,CAAC,GAAGL,cAAc,CAACM,UAAU,CAACD,CAAC,CAAC;UAC/C;UACA,MAAME,SAAS,GAAG,IAAIC,UAAU,CAACL,WAAW,CAAC;UAC7C,MAAMM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,SAAS,CAAC,EAAE;YAAEI,IAAI,EAAE;UAAY,CAAC,CAAC;;UAEzD;UACAgC,IAAI,CAACC,SAAS,CAAC/B,SAAS,GAAGJ,IAAI;;UAE/B;UACAmL,oBAAoB,CAACjJ,IAAI,EAAEkJ,OAAO,EAAEC,gBAAgB,CAAC;UACrD;QACF,CAAC,CAAC,OAAOoB,YAAY,EAAE;UACrBzN,OAAO,CAACzB,KAAK,CAAC,wBAAwB,EAAEkP,YAAY,CAAC;QACvD;MACF;IACF;EACF,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClB9P,YAAY,CAAC,KAAK,CAAC;;IAEnB;IACAM,aAAa,CAACoI,OAAO,CAAC,CAAC;MAAEiG,KAAK;MAAEI,SAAS;MAAEF;IAAS,CAAC,KAAK;MACxD,IAAIE,SAAS,EAAE;QACbgB,YAAY,CAAChB,SAAS,CAAC;MACzB;MACA,IAAI,CAACJ,KAAK,CAACqB,MAAM,EAAE;QACjBrB,KAAK,CAACmB,KAAK,CAAC,CAAC;MACf;MACA;MACA,IAAIjB,QAAQ,EAAE;QACZ3I,GAAG,CAACc,eAAe,CAAC6H,QAAQ,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMoB,IAAI,GAAGA,CAAA,KAAM;IACjBjQ,YAAY,CAAC,KAAK,CAAC;IACnBE,cAAc,CAAC,CAAC,CAAC;;IAEjB;IACAI,aAAa,CAACoI,OAAO,CAAC,CAAC;MAAEiG,KAAK;MAAEI,SAAS;MAAEF;IAAS,CAAC,KAAK;MACxD,IAAIE,SAAS,EAAE;QACbgB,YAAY,CAAChB,SAAS,CAAC;MACzB;MACAJ,KAAK,CAACmB,KAAK,CAAC,CAAC;MACbnB,KAAK,CAAC1O,WAAW,GAAG,CAAC;MACrB;MACA,IAAI4O,QAAQ,EAAE;QACZ3I,GAAG,CAACc,eAAe,CAAC6H,QAAQ,CAAC;MAC/B;IACF,CAAC,CAAC;IAEFtO,gBAAgB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACE7B,OAAA;IAAKuR,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBxR,OAAA;MAAAwR,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB5R,OAAA;MAAAwR,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAE/B5P,KAAK,iBACJhC,OAAA;MAAKuR,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxR,OAAA;QAAAwR,QAAA,GAAM,eAAG,EAACxP,KAAK;MAAA;QAAAyP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvB5R,OAAA;QAAQ6R,OAAO,EAAEA,CAAA,KAAM5P,QAAQ,CAAC,IAAI,CAAE;QAAAuP,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACN,eAED5R,OAAA;MAAKuR,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCxR,OAAA;QAAKuR,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCxR,OAAA;UACEuR,SAAS,EAAE,0BAA0BnQ,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;UAClEyQ,OAAO,EAAEzQ,SAAS,GAAG+P,KAAK,GAAG9B,IAAK;UAAAmC,QAAA,EAEjCpQ,SAAS,GAAG,IAAI,GAAG;QAAI;UAAAqQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACT5R,OAAA;UAAQuR,SAAS,EAAC,wBAAwB;UAACM,OAAO,EAAEP,IAAK;UAAAE,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN5R,OAAA;QAAKuR,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BxR,OAAA;UAAO8R,OAAO,EAAC,KAAK;UAAAN,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpC5R,OAAA;UACEa,EAAE,EAAC,KAAK;UACR8D,IAAI,EAAC,QAAQ;UACbiF,KAAK,EAAE1I,GAAI;UACX6Q,QAAQ,EAAGjJ,CAAC,IAAKzC,eAAe,CAACwI,QAAQ,CAAC/F,CAAC,CAACL,MAAM,CAACmB,KAAK,CAAC,CAAE;UAC3DoB,GAAG,EAAC,IAAI;UACRzB,GAAG,EAAC,KAAK;UACTgI,SAAS,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN5R,OAAA;QAAKuR,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BxR,OAAA;UAAQuR,SAAS,EAAC,gBAAgB;UAACM,OAAO,EAAErF,QAAS;UAAAgF,QAAA,EAAC;QAEtD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5R,OAAA;UACEuR,SAAS,EAAC,kBAAkB;UAC5BM,OAAO,EAAEA,CAAA,KAAMxP,iBAAiB,CAAC,CAACD,cAAc,CAAE;UAAAoP,QAAA,EAEjDpP,cAAc,GAAG,WAAW,GAAG;QAAW;UAAAqP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN5R,OAAA;QAAKuR,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BxR,OAAA;UAAQuR,SAAS,EAAC,kBAAkB;UAACM,OAAO,EAAE/K,WAAY;UAAA0K,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5R,OAAA;UAAOuR,SAAS,EAAC,mCAAmC;UAAAC,QAAA,GAAC,2EAEnD,eAAAxR,OAAA;YACE2E,IAAI,EAAC,MAAM;YACXqN,MAAM,EAAC,OAAO;YACdD,QAAQ,EAAEzJ,WAAY;YACtB2J,KAAK,EAAE;cAAEC,OAAO,EAAE;YAAO;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACR5R,OAAA;UACEuR,SAAS,EAAC,gBAAgB;UAC1BM,OAAO,EAAEhI,WAAY;UACrBsI,QAAQ,EAAEvP,WAAY;UAAA4O,QAAA,EAErB5O,WAAW,GAAG,WAAW,GAAG;QAAS;UAAA6O,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5R,OAAA;MAAKuR,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxR,OAAA;QAAKuR,SAAS,EAAE,eAAe,CAACnP,cAAc,GAAG,cAAc,GAAG,EAAE,EAAG;QAAAoP,QAAA,gBACrExR,OAAA;UAAKuR,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjCxR,OAAA;YAAAwR,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACf5R,OAAA;YACEuR,SAAS,EAAC,mBAAmB;YAC7BM,OAAO,EAAEA,CAAA,KAAMxP,iBAAiB,CAAC,KAAK,CAAE;YACxC+P,KAAK,EAAC,8DAAY;YAAAZ,QAAA,EACnB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5R,OAAA;UAAKuR,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBtP,MAAM,CAACyB,MAAM,GAAG,CAAC,GAChBzB,MAAM,CAAC2B,GAAG,CAACC,KAAK,iBACd9D,OAAA,CAACqS,SAAS;YAERvO,KAAK,EAAEA,KAAM;YACbwO,WAAW,EAAE,MAAOxO,KAAK,IAAK;cAC5B;cACAL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,KAAK,CAAC9C,IAAI,CAAC;cAC5C,IAAI8C,KAAK,CAACe,SAAS,EAAE;gBACnB,IAAI;kBACF,MAAMa,QAAQ,GAAG,MAAMR,gBAAgB,CAACpB,KAAK,CAACe,SAAS,EAAE3D,GAAG,CAAC;kBAC7DuC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEgC,QAAQ,EAAE,IAAI,CAAC;kBACzC/C,uBAAuB,CAAC+C,QAAQ,CAAC;gBACnC,CAAC,CAAC,OAAO1D,KAAK,EAAE;kBACdyB,OAAO,CAACyC,IAAI,CAAC,kBAAkB,EAAElE,KAAK,CAAC;kBACvCW,uBAAuB,CAAC,GAAG,CAAC;gBAC9B;cACF,CAAC,MAAM;gBACLc,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;gBAC3Cf,uBAAuB,CAAC,GAAG,CAAC;cAC9B;YACF;UAAE,GAlBGmB,KAAK,CAACjD,EAAE;YAAA4Q,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBd,CACF,CAAC,gBAEF5R,OAAA;YAAKuR,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBxR,OAAA;cAAAwR,QAAA,EAAG;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAChB5R,OAAA;cAAAwR,QAAA,EAAG;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN5R,OAAA;QAAKuR,SAAS,EAAE,iBAAiB,CAACnP,cAAc,GAAG,cAAc,GAAG,EAAE,EAAG;QAAAoP,QAAA,gBACvExR,OAAA;UAAKuR,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BxR,OAAA;YAAKuR,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EAAC;UAExC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACLjR,MAAM,CAACkD,GAAG,CAAC4C,KAAK,iBACfzG,OAAA,CAACuS,WAAW;YAEV9L,KAAK,EAAEA,KAAM;YACb+L,QAAQ,EAAE3F,WAAY;YACtBnL,WAAW,EAAEA;UAAY,GAHpB+E,KAAK,CAAC5F,EAAE;YAAA4Q,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAId,CACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5R,OAAA;UAAKuR,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjCxR,OAAA,CAACyS,QAAQ;YAACvR,GAAG,EAAEA;UAAI;YAAAuQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtB5R,OAAA;YAAKuR,SAAS,EAAC,aAAa;YAACmB,GAAG,EAAE5P,WAAY;YAACmP,KAAK,EAAE;cAAEU,QAAQ,EAAEtS,cAAc,GAAGF;YAAc,CAAE;YAAAqR,QAAA,gBACjGxR,OAAA,CAAC4S,QAAQ;cAACtR,WAAW,EAAEA;YAAY;cAAAmQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACrCpP,WAAW,iBACVxC,OAAA;cACEuR,SAAS,EAAC,cAAc;cACxBU,KAAK,EAAE;gBACL1D,IAAI,EAAE/L,WAAW,CAAC+L,IAAI;gBACtBK,GAAG,EAAEpM,WAAW,CAACoM,GAAG;gBACpBI,KAAK,EAAExM,WAAW,CAACwM;cACrB;YAAE;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACF,EACAjR,MAAM,CAACkD,GAAG,CAAC4C,KAAK,iBACfzG,OAAA,CAAC6S,KAAK;cAEJpM,KAAK,EAAEA,KAAM;cACbqM,MAAM,EAAE9F,UAAW;cACnB+F,UAAU,EAAE/E,cAAe;cAC3BgF,YAAY,EAAE/D,UAAW;cACzBgE,eAAe,EAAE9D,mBAAoB;cACrC+D,SAAS,EAAE9D,aAAc;cACzB1N,WAAW,EAAEA,WAAY;cACzBR,GAAG,EAAEA;YAAI,GARJuF,KAAK,CAAC5F,EAAE;cAAA4Q,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASd,CACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5R,OAAA;MAAKuR,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCxR,OAAA;QAAAwR,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf5R,OAAA;QAAAwR,QAAA,gBACExR,OAAA;UAAAwR,QAAA,gBAAIxR,OAAA;YAAAwR,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,sMAAkC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnE5R,OAAA;UAAAwR,QAAA,gBAAIxR,OAAA;YAAAwR,QAAA,EAAQ;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,2JAA0B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjE5R,OAAA;UAAAwR,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnC5R,OAAA;UAAAwR,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChC5R,OAAA;UAAAwR,QAAA,EAAI;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtC5R,OAAA;UAAAwR,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC5R,OAAA;UAAAwR,QAAA,EAAI;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrC5R,OAAA;UAAAwR,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB5R,OAAA;UAAAwR,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC5R,OAAA;UAAAwR,QAAA,gBAAIxR,OAAA;YAAAwR,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,+GAAsB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5D5R,OAAA;UAAAwR,QAAA,gBAAIxR,OAAA;YAAAwR,QAAA,EAAQ;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,2JAA0B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClE5R,OAAA;UAAAwR,QAAA,gBAAIxR,OAAA;YAAAwR,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,wGAAoB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACL5R,OAAA;QAAKuR,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BxR,OAAA;UAAAwR,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB5R,OAAA;UAAAwR,QAAA,gBACExR,OAAA;YAAAwR,QAAA,EAAI;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjC5R,OAAA;YAAAwR,QAAA,EAAI;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClC5R,OAAA;YAAAwR,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvC5R,OAAA;YAAAwR,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpR,EAAA,CAphCID,OAAO;AAAA4S,EAAA,GAAP5S,OAAO;AAshCb,MAAM8R,SAAS,GAAGA,CAAC;EAAEvO,KAAK;EAAEwO;AAAY,CAAC,KAAK;EAAAc,GAAA;EAC5C,MAAM,CAAChS,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0T,UAAU,EAAEC,aAAa,CAAC,GAAG3T,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC4T,UAAU,EAAEC,aAAa,CAAC,GAAG7T,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC8T,SAAS,EAAEC,YAAY,CAAC,GAAG/T,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMgU,eAAe,GAAI7K,CAAC,IAAK;IAC7B;IACA,MAAM8K,oBAAoB,GAAG;MAC3B,GAAG9P,KAAK;MACRe,SAAS,EAAE,IAAI,CAAC;IAClB,CAAC;IAEDiE,CAAC,CAAC0E,YAAY,CAACqG,OAAO,CAAC,kBAAkB,EAAExQ,IAAI,CAACgE,SAAS,CAACuM,oBAAoB,CAAC,CAAC;IAChF9K,CAAC,CAAC0E,YAAY,CAACsG,aAAa,GAAG,MAAM;;IAErC;IACA7Q,MAAM,CAACgC,uBAAuB,GAAGnB,KAAK,CAACe,SAAS;;IAEhD;IACA,IAAIyN,WAAW,EAAE;MACfA,WAAW,CAACxO,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMiQ,gBAAgB,GAAIjL,CAAC,IAAK;IAC9B,MAAMkL,KAAK,GAAGlL,CAAC,CAACmL,OAAO,CAAC,CAAC,CAAC;IAC1BT,aAAa,CAAC;MAAEU,CAAC,EAAEF,KAAK,CAAC1F,OAAO;MAAE6F,CAAC,EAAEH,KAAK,CAACI;IAAQ,CAAC,CAAC;IACrDd,aAAa,CAAC,KAAK,CAAC;;IAEpB;IACAjD,UAAU,CAAC,MAAM;MACf,IAAIkD,UAAU,IAAI,CAACF,UAAU,EAAE;QAC7BC,aAAa,CAAC,IAAI,CAAC;QACnB;QACA5L,QAAQ,CAACO,IAAI,CAACoM,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;;QAEvC;QACA,IAAIhC,WAAW,EAAE;UACfA,WAAW,CAACxO,KAAK,CAAC;QACpB;QACA;QACAb,MAAM,CAACgC,uBAAuB,GAAGnB,KAAK,CAACe,SAAS;QAChD5B,MAAM,CAACyK,mBAAmB,GAAG5J,KAAK;MACpC;IACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;EAED,MAAMyQ,eAAe,GAAIzL,CAAC,IAAK;IAC7B,IAAI,CAACyK,UAAU,EAAE;IAEjB,MAAMS,KAAK,GAAGlL,CAAC,CAACmL,OAAO,CAAC,CAAC,CAAC;IAC1B,MAAMO,UAAU,GAAG;MAAEN,CAAC,EAAEF,KAAK,CAAC1F,OAAO;MAAE6F,CAAC,EAAEH,KAAK,CAACI;IAAQ,CAAC;IACzDV,YAAY,CAACc,UAAU,CAAC;;IAExB;IACA,MAAMC,MAAM,GAAGnL,IAAI,CAACoL,GAAG,CAACF,UAAU,CAACN,CAAC,GAAGX,UAAU,CAACW,CAAC,CAAC;IACpD,MAAMS,MAAM,GAAGrL,IAAI,CAACoL,GAAG,CAACF,UAAU,CAACL,CAAC,GAAGZ,UAAU,CAACY,CAAC,CAAC;IAEpD,IAAI,CAACd,UAAU,KAAKoB,MAAM,GAAG,EAAE,IAAIE,MAAM,GAAG,EAAE,CAAC,EAAE;MAC/CrB,aAAa,CAAC,IAAI,CAAC;MACnB;MACA,IAAIhB,WAAW,EAAE;QACfA,WAAW,CAACxO,KAAK,CAAC;MACpB;MACA;MACAb,MAAM,CAACgC,uBAAuB,GAAGnB,KAAK,CAACe,SAAS;MAChD5B,MAAM,CAACyK,mBAAmB,GAAG5J,KAAK;IACpC;IAEA,IAAIuP,UAAU,EAAE;MACd;;MAEA;MACA,MAAM7Q,WAAW,GAAGkF,QAAQ,CAACkN,aAAa,CAAC,sBAAsB,CAAC;MAClE,IAAIpS,WAAW,EAAE;QACfA,WAAW,CAACyP,KAAK,CAAC1D,IAAI,GAAG,GAAGiG,UAAU,CAACN,CAAC,GAAG,EAAE,IAAI;QACjD1R,WAAW,CAACyP,KAAK,CAACrD,GAAG,GAAG,GAAG4F,UAAU,CAACL,CAAC,GAAG,EAAE,IAAI;MAClD;;MAEA;MACA,MAAMU,YAAY,GAAGnN,QAAQ,CAACoN,gBAAgB,CAACN,UAAU,CAACN,CAAC,EAAEM,UAAU,CAACL,CAAC,CAAC;MAC1E,MAAM3F,YAAY,GAAGqG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,OAAO,CAAC,QAAQ,CAAC;;MAEpD;MACArN,QAAQ,CAACsN,gBAAgB,CAAC,QAAQ,CAAC,CAACjL,OAAO,CAACtD,KAAK,IAAI;QACnDA,KAAK,CAAC4N,SAAS,CAACY,MAAM,CAAC,WAAW,CAAC;MACrC,CAAC,CAAC;;MAEF;MACA,IAAIzG,YAAY,EAAE;QAChBA,YAAY,CAAC6F,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACzC;IACF;EACF,CAAC;EAED,MAAMY,cAAc,GAAIpM,CAAC,IAAK;IAC5B,IAAIuK,UAAU,IAAII,SAAS,EAAE;MAC3B;MACA,MAAMoB,YAAY,GAAGnN,QAAQ,CAACoN,gBAAgB,CAACrB,SAAS,CAACS,CAAC,EAAET,SAAS,CAACU,CAAC,CAAC;MACxE,MAAM3F,YAAY,GAAGqG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,OAAO,CAAC,QAAQ,CAAC;MAEpD,IAAIvG,YAAY,EAAE;QAChB,MAAM1B,OAAO,GAAG+B,QAAQ,CAACL,YAAY,CAACM,OAAO,CAAChC,OAAO,CAAC;QACtD,MAAMqB,IAAI,GAAGK,YAAY,CAACH,qBAAqB,CAAC,CAAC;QACjD,MAAMpB,YAAY,GAAGwG,SAAS,CAACS,CAAC,GAAG/F,IAAI,CAACI,IAAI;;QAE5C;QACA,MAAM4G,SAAS,GAAG,IAAIC,WAAW,CAAC,YAAY,EAAE;UAC9CC,MAAM,EAAE;YACNvI,OAAO;YACPG,YAAY;YACZnJ,KAAK,EAAEA;UACT;QACF,CAAC,CAAC;QACF0K,YAAY,CAAC8G,aAAa,CAACH,SAAS,CAAC;MACvC;IACF;;IAEA;IACA3B,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;IAClBJ,aAAa,CAAC,KAAK,CAAC;IACpB5L,QAAQ,CAACO,IAAI,CAACoM,SAAS,CAACY,MAAM,CAAC,UAAU,CAAC;;IAE1C;IACAvN,QAAQ,CAACsN,gBAAgB,CAAC,QAAQ,CAAC,CAACjL,OAAO,CAACtD,KAAK,IAAI;MACnDA,KAAK,CAAC4N,SAAS,CAACY,MAAM,CAAC,WAAW,CAAC;IACrC,CAAC,CAAC;;IAEF;IACA,MAAMzS,WAAW,GAAGkF,QAAQ,CAACkN,aAAa,CAAC,sBAAsB,CAAC;IAClE,IAAIpS,WAAW,EAAE;MACfA,WAAW,CAACyS,MAAM,CAAC,CAAC;IACtB;;IAEA;IACAhS,MAAM,CAACgC,uBAAuB,GAAG,IAAI;IACrChC,MAAM,CAACyK,mBAAmB,GAAG,IAAI;EACnC,CAAC;EAED,MAAM6H,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIzR,KAAK,CAACe,SAAS,IAAI,CAACzD,SAAS,IAAI,CAACiS,UAAU,EAAE;MAChD,MAAMrD,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;MACzBD,KAAK,CAACG,GAAG,GAAG5I,GAAG,CAACC,eAAe,CAAC1D,KAAK,CAACe,SAAS,CAAC;MAChDmL,KAAK,CAACX,IAAI,CAAC,CAAC,CACTmG,IAAI,CAAC,MAAM;QACVnU,YAAY,CAAC,IAAI,CAAC;QAClB2O,KAAK,CAACO,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACpClP,YAAY,CAAC,KAAK,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC,CACDiP,KAAK,CAACtO,KAAK,IAAI;QACdyB,OAAO,CAACzB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC,CAAC,CAAC;IACN;EACF,CAAC;;EAED;EACA,MAAMyT,iBAAiB,GAAG3V,WAAW,CAAC,MAAM;IAC1C,IAAIuT,UAAU,IAAII,SAAS,EAAE;MAC3B,IAAIjR,WAAW,GAAGkF,QAAQ,CAACkN,aAAa,CAAC,sBAAsB,CAAC;MAChE,IAAI,CAACpS,WAAW,EAAE;QAChBA,WAAW,GAAGkF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC3CnF,WAAW,CAAC+O,SAAS,GAAG,qBAAqB;QAC7C/O,WAAW,CAACkT,WAAW,GAAG5R,KAAK,CAAC9C,IAAI;QACpCwB,WAAW,CAACyP,KAAK,CAAC0D,OAAO,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBlC,SAAS,CAACS,CAAC,GAAG,EAAE;AAClC,iBAAiBT,SAAS,CAACU,CAAC,GAAG,EAAE;AACjC,SAAS;QACDzM,QAAQ,CAACO,IAAI,CAACC,WAAW,CAAC1F,WAAW,CAAC;MACxC;IACF;EACF,CAAC,EAAE,CAAC6Q,UAAU,EAAEI,SAAS,EAAE3P,KAAK,CAAC9C,IAAI,CAAC,CAAC;;EAEvC;EACAtB,KAAK,CAACG,SAAS,CAAC,MAAM;IACpB,IAAIwT,UAAU,EAAE;MACdoC,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACpC,UAAU,EAAEI,SAAS,EAAEgC,iBAAiB,CAAC,CAAC;EAE9C,oBACEzV,OAAA;IACEuR,SAAS,EAAE,cAAc8B,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IACxDuC,SAAS,EAAC,MAAM;IAChBtD,WAAW,EAAEqB,eAAgB;IAC7BkC,YAAY,EAAE9B,gBAAiB;IAC/B+B,WAAW,EAAEvB,eAAgB;IAC7BwB,UAAU,EAAEb,cAAe;IAAA1D,QAAA,gBAE3BxR,OAAA;MAAKuR,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBxR,OAAA;QAAAwR,QAAA,EAAK1N,KAAK,CAAC9C;MAAI;QAAAyQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrB5R,OAAA;QAAKuR,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxB1N,KAAK,CAACkS,IAAI,CAACnS,GAAG,CAAC,CAACoS,GAAG,EAAEvM,KAAK,kBACzB1J,OAAA;UAAkBuR,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEyE;QAAG,GAAjCvM,KAAK;UAAA+H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmC,CACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN5R,OAAA;MAAKuR,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BxR,OAAA;QACEuR,SAAS,EAAC,gBAAgB;QAC1BM,OAAO,EAAE0D,SAAU;QACnBpD,QAAQ,EAAE/Q,SAAU;QAAAoQ,QAAA,EAEnBpQ,SAAS,GAAG,IAAI,GAAG;MAAI;QAAAqQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACwB,GAAA,CA3NIf,SAAS;AAAA6D,GAAA,GAAT7D,SAAS;AA6Nf,MAAME,WAAW,GAAGA,CAAC;EAAE9L,KAAK;EAAE+L,QAAQ;EAAE9Q;AAAY,CAAC,KAAK;EACxD,oBACE1B,OAAA;IAAKuR,SAAS,EAAC,cAAc;IAACU,KAAK,EAAE;MAAEkE,MAAM,EAAEzU;IAAY,CAAE;IAAA8P,QAAA,eAC3DxR,OAAA;MAAKuR,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBxR,OAAA;QAAAwR,QAAA,EAAK/K,KAAK,CAACzF;MAAI;QAAAyQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrB5R,OAAA;QAAKuR,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BxR,OAAA;UACEuR,SAAS,EAAC,kBAAkB;UAC5BM,OAAO,EAAEA,CAAA,KAAMW,QAAQ,CAAC/L,KAAK,CAAC5F,EAAE,CAAE;UAClCuR,KAAK,EAAC,4CAAS;UAAAZ,QAAA,EAChB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACwE,GAAA,GAjBI7D,WAAW;AAmBjB,MAAME,QAAQ,GAAGA,CAAC;EAAEvR;AAAI,CAAC,KAAK;EAC5B,MAAMmV,QAAQ,GAAGhW,cAAc,CAAC,CAAC;EACjC,MAAMiW,eAAe,GAAGpW,iBAAiB,CAAC,CAAC;;EAE3C,oBACEF,OAAA;IAAKuR,SAAS,EAAC,UAAU;IAACU,KAAK,EAAE;MAAEU,QAAQ,EAAEtS,cAAc,GAAGF;IAAc,CAAE;IAAAqR,QAAA,EAC3EpN,KAAK,CAACmS,IAAI,CAAC;MAAE5S,MAAM,EAAE0S;IAAS,CAAC,EAAE,CAACG,CAAC,EAAEC,YAAY,kBAChDzW,OAAA;MAAwBuR,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACzCxR,OAAA;QAAKuR,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEiF,YAAY,GAAG;MAAC;QAAAhF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxD5R,OAAA;QAAKuR,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBpN,KAAK,CAACmS,IAAI,CAAC;UAAE5S,MAAM,EAAE2S;QAAgB,CAAC,EAAE,CAACE,CAAC,EAAEE,SAAS,kBACpD1W,OAAA;UAEEuR,SAAS,EAAC,MAAM;UAChBU,KAAK,EAAE;YAAEjD,KAAK,EAAE/O;UAAW,CAAE;UAAAuR,QAAA,gBAE7BxR,OAAA;YAAKuR,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBkF,SAAS,GAAG;UAAC;YAAAjF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACN5R,OAAA;YAAKuR,SAAS,EAAC,UAAU;YAAAC,QAAA,eACvBxR,OAAA;cAAKuR,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA,GATD8E,SAAS;UAAAjF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUX,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAjBE6E,YAAY;MAAAhF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC+E,GAAA,GA7BIlE,QAAQ;AA+Bd,MAAMI,KAAK,GAAGA,CAAC;EAAEpM,KAAK;EAAEqM,MAAM;EAAEC,UAAU;EAAEC,YAAY;EAAEC,eAAe;EAAEC,SAAS;EAAExR,WAAW;EAAER;AAAI,CAAC,KAAK;EAAA0V,GAAA;EAC3G,MAAM5J,UAAU,GAAIlE,CAAC,IAAK;IACxB,MAAMqF,IAAI,GAAGrF,CAAC,CAACsF,aAAa,CAACC,qBAAqB,CAAC,CAAC;IACpD,MAAMpB,YAAY,GAAGnE,CAAC,CAACwF,OAAO,GAAGH,IAAI,CAACI,IAAI;IAC1CuE,MAAM,CAAChK,CAAC,EAAErC,KAAK,CAAC5F,EAAE,EAAEoM,YAAY,CAAC;EACnC,CAAC;;EAED;EACA,MAAM4J,gBAAgB,GAAG/W,WAAW,CAAEgJ,CAAC,IAAK;IAC1C,MAAM;MAAEgE,OAAO;MAAEG,YAAY;MAAEnJ;IAAM,CAAC,GAAGgF,CAAC,CAACuM,MAAM;;IAEjD;IACA,MAAMyB,aAAa,GAAG;MACpB5J,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;MACxBM,YAAY,EAAE;QACZC,OAAO,EAAG9I,IAAI,IAAK;UACjB,IAAIA,IAAI,KAAK,kBAAkB,EAAE;YAC/B,OAAOtB,IAAI,CAACgE,SAAS,CAACvD,KAAK,CAAC;UAC9B;UACA,OAAO,EAAE;QACX;MACF;IACF,CAAC;IAEDgP,MAAM,CAACgE,aAAa,EAAEhK,OAAO,EAAEG,YAAY,CAAC;EAC9C,CAAC,EAAE,CAAC6F,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMiE,oBAAoB,GAAGjX,WAAW,CAAEgJ,CAAC,IAAK;IAC9C,MAAM;MAAEnC,IAAI;MAAEqQ,UAAU;MAAE/J;IAAa,CAAC,GAAGnE,CAAC,CAACuM,MAAM;;IAEnD;IACA,MAAMyB,aAAa,GAAG;MACpB5J,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;MACxBM,YAAY,EAAE;QACZC,OAAO,EAAG9I,IAAI,IAAK;UACjB,IAAIA,IAAI,KAAK,YAAY,EAAE;YACzB,OAAO,iBAAiBgC,IAAI,CAAC9F,EAAE,EAAE;UACnC;UACA,OAAO,EAAE;QACX;MACF;IACF,CAAC;IAEDiS,MAAM,CAACgE,aAAa,EAAEE,UAAU,EAAE/J,YAAY,CAAC;EACjD,CAAC,EAAE,CAAC6F,MAAM,CAAC,CAAC;EAEZpT,KAAK,CAACG,SAAS,CAAC,MAAM;IACpB,MAAM2O,YAAY,GAAG9G,QAAQ,CAACkN,aAAa,CAAC,mBAAmBnO,KAAK,CAAC5F,EAAE,IAAI,CAAC;IAC5E,IAAI2N,YAAY,EAAE;MAChBA,YAAY,CAAC+B,gBAAgB,CAAC,YAAY,EAAEsG,gBAAgB,CAAC;MAC7DrI,YAAY,CAAC+B,gBAAgB,CAAC,gBAAgB,EAAEwG,oBAAoB,CAAC;MACrE,OAAO,MAAM;QACXvI,YAAY,CAACyI,mBAAmB,CAAC,YAAY,EAAEJ,gBAAgB,CAAC;QAChErI,YAAY,CAACyI,mBAAmB,CAAC,gBAAgB,EAAEF,oBAAoB,CAAC;MAC1E,CAAC;IACH;EACF,CAAC,EAAE,CAACtQ,KAAK,CAAC5F,EAAE,EAAEgW,gBAAgB,EAAEE,oBAAoB,CAAC,CAAC;EAEtD,oBACE/W,OAAA;IACEuR,SAAS,EAAC,OAAO;IACjBU,KAAK,EAAE;MAAEkE,MAAM,EAAEzU;IAAY,CAAE;IAC/B,iBAAe+E,KAAK,CAAC5F,EAAG;IACxBiS,MAAM,EAAE9F,UAAW;IACnB+F,UAAU,EAAEA,UAAW;IAAAvB,QAAA,gBAEvBxR,OAAA;MAAKuR,SAAS,EAAC,YAAY;MAAAC,QAAA,GAExBpN,KAAK,CAACmS,IAAI,CAAC;QAAE5S,MAAM,EAAErD;MAAY,CAAC,EAAE,CAACkW,CAAC,EAAE9M,KAAK,KAAK;QACjD,MAAMwN,WAAW,GAAGxN,KAAK,KAAK,CAAC;QAC/B,MAAMyN,cAAc,GAAGzN,KAAK,GAAGxJ,iBAAiB,KAAK,CAAC;QACtD,MAAMqR,SAAS,GAAG,4BAA4B2F,WAAW,GAAG,YAAY,GAAG,EAAE,IAAIC,cAAc,GAAG,eAAe,GAAG,EAAE,EAAE;QACxH,oBACEnX,OAAA;UAA2BuR,SAAS,EAAEA,SAAU;UAACU,KAAK,EAAE;YAAE1D,IAAI,EAAE7E,KAAK,GAAGzJ;UAAW;QAAE,GAA3E,QAAQyJ,KAAK,EAAE;UAAA+H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8D,CAAC;MAE5F,CAAC,CAAC,EAEDxN,KAAK,CAACmS,IAAI,CAAC;QAAE5S,MAAM,EAAErD;MAAY,CAAC,EAAE,CAACkW,CAAC,EAAE9M,KAAK,kBAC5C1J,OAAA;QAA0BuR,SAAS,EAAC,yBAAyB;QAACU,KAAK,EAAE;UAAE1D,IAAI,EAAE7E,KAAK,GAAGzJ,UAAU,GAAGG;QAAe;MAAE,GAAzG,OAAOsJ,KAAK,EAAE;QAAA+H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6F,CACtH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELnL,KAAK,CAACxF,KAAK,CAAC4C,GAAG,CAAC8C,IAAI,iBACnB3G,OAAA,CAACoX,SAAS;MAERzQ,IAAI,EAAEA,IAAK;MACXmG,OAAO,EAAErG,KAAK,CAAC5F,EAAG;MAClB2R,QAAQ,EAAEA,CAAA,KAAMQ,YAAY,CAACvM,KAAK,CAAC5F,EAAE,EAAE8F,IAAI,CAAC9F,EAAE,CAAE;MAChDyR,WAAW,EAAEW,eAAgB;MAC7BC,SAAS,EAAEA;IAAU,GALhBvM,IAAI,CAAC9F,EAAE;MAAA4Q,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACgF,GAAA,CA/FI/D,KAAK;AAAAwE,GAAA,GAALxE,KAAK;AAiGX,MAAMuE,SAAS,GAAGA,CAAC;EAAEzQ,IAAI;EAAEmG,OAAO;EAAE0F,QAAQ;EAAEF,WAAW;EAAEY;AAAU,CAAC,KAAK;EAAAoE,GAAA;EACzE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG9X,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0T,UAAU,EAAEC,aAAa,CAAC,GAAG5T,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC4T,UAAU,EAAEC,aAAa,CAAC,GAAG9T,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC8T,SAAS,EAAEC,YAAY,CAAC,GAAGhU,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EAEtDD,KAAK,CAACG,SAAS,CAAC,MAAM;IACpB;IACA,MAAM4X,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,MAAM,GAAG,EAAE,CAAC,CAAC;MACnB,MAAMC,IAAI,GAAG,EAAE;MACf,KAAK,IAAItT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqT,MAAM,EAAErT,CAAC,EAAE,EAAE;QAC/BsT,IAAI,CAACC,IAAI,CAACtO,IAAI,CAACuE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;MACxC;MACA2J,eAAe,CAACG,IAAI,CAAC;IACvB,CAAC;IAEDF,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAAC9Q,IAAI,CAACC,SAAS,CAAC,CAAC;EAEpB,MAAM+M,eAAe,GAAI7K,CAAC,IAAK;IAC7BA,CAAC,CAAC+O,eAAe,CAAC,CAAC,CAAC,CAAC;;IAErB;IACA/O,CAAC,CAAC0E,YAAY,CAACqG,OAAO,CAAC,YAAY,EAAE,iBAAiBlN,IAAI,CAAC9F,EAAE,EAAE,CAAC;IAChEiI,CAAC,CAAC0E,YAAY,CAACsG,aAAa,GAAG,MAAM;;IAErC;IACAxB,WAAW,CAAC3L,IAAI,EAAEmG,OAAO,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMiH,gBAAgB,GAAIjL,CAAC,IAAK;IAC9BA,CAAC,CAAC+O,eAAe,CAAC,CAAC;IACnB,MAAM7D,KAAK,GAAGlL,CAAC,CAACmL,OAAO,CAAC,CAAC,CAAC;IAC1BT,aAAa,CAAC;MAAEU,CAAC,EAAEF,KAAK,CAAC1F,OAAO;MAAE6F,CAAC,EAAEH,KAAK,CAACI;IAAQ,CAAC,CAAC;IACrDd,aAAa,CAAC,KAAK,CAAC;;IAEpB;IACA5L,QAAQ,CAACO,IAAI,CAACoM,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EACzC,CAAC;EAED,MAAMC,eAAe,GAAIzL,CAAC,IAAK;IAC7B,IAAI,CAACyK,UAAU,EAAE;IAEjB,MAAMS,KAAK,GAAGlL,CAAC,CAACmL,OAAO,CAAC,CAAC,CAAC;IAC1B,MAAMO,UAAU,GAAG;MAAEN,CAAC,EAAEF,KAAK,CAAC1F,OAAO;MAAE6F,CAAC,EAAEH,KAAK,CAACI;IAAQ,CAAC;IACzDV,YAAY,CAACc,UAAU,CAAC;;IAExB;IACA,MAAMC,MAAM,GAAGnL,IAAI,CAACoL,GAAG,CAACF,UAAU,CAACN,CAAC,GAAGX,UAAU,CAACW,CAAC,CAAC;IACpD,MAAMS,MAAM,GAAGrL,IAAI,CAACoL,GAAG,CAACF,UAAU,CAACL,CAAC,GAAGZ,UAAU,CAACY,CAAC,CAAC;IAEpD,IAAI,CAACd,UAAU,KAAKoB,MAAM,GAAG,CAAC,IAAIE,MAAM,GAAG,CAAC,CAAC,EAAE;MAC7CrB,aAAa,CAAC,IAAI,CAAC;MACnBhB,WAAW,CAAC3L,IAAI,EAAEmG,OAAO,CAAC;IAC5B;IAEA,IAAIuG,UAAU,EAAE;MACd;;MAEA;MACA,MAAMwB,YAAY,GAAGnN,QAAQ,CAACoN,gBAAgB,CAACN,UAAU,CAACN,CAAC,EAAEM,UAAU,CAACL,CAAC,CAAC;MAC1E,MAAM3F,YAAY,GAAGqG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,OAAO,CAAC,QAAQ,CAAC;;MAEpD;MACArN,QAAQ,CAACsN,gBAAgB,CAAC,QAAQ,CAAC,CAACjL,OAAO,CAACtD,KAAK,IAAI;QACnDA,KAAK,CAAC4N,SAAS,CAACY,MAAM,CAAC,WAAW,CAAC;MACrC,CAAC,CAAC;;MAEF;MACA,IAAIzG,YAAY,EAAE;QAChBA,YAAY,CAAC6F,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACzC;IACF;EACF,CAAC;EAED,MAAMY,cAAc,GAAIpM,CAAC,IAAK;IAC5B,IAAIuK,UAAU,IAAII,SAAS,EAAE;MAC3B;MACA,MAAMoB,YAAY,GAAGnN,QAAQ,CAACoN,gBAAgB,CAACrB,SAAS,CAACS,CAAC,EAAET,SAAS,CAACU,CAAC,CAAC;MACxE,MAAM3F,YAAY,GAAGqG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,OAAO,CAAC,QAAQ,CAAC;MAEpD,IAAIvG,YAAY,EAAE;QAChB,MAAMwI,UAAU,GAAGnI,QAAQ,CAACL,YAAY,CAACM,OAAO,CAAChC,OAAO,CAAC;QACzD,MAAMqB,IAAI,GAAGK,YAAY,CAACH,qBAAqB,CAAC,CAAC;QACjD,MAAMpB,YAAY,GAAGwG,SAAS,CAACS,CAAC,GAAG/F,IAAI,CAACI,IAAI;;QAE5C;QACA,MAAMuJ,SAAS,GAAG,IAAI1C,WAAW,CAAC,gBAAgB,EAAE;UAClDC,MAAM,EAAE;YACN1O,IAAI;YACJ0G,eAAe,EAAEP,OAAO;YACxBkK,UAAU;YACV/J;UACF;QACF,CAAC,CAAC;QACFuB,YAAY,CAAC8G,aAAa,CAACwC,SAAS,CAAC;MACvC;IACF;;IAEA;IACAtE,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;IAClBJ,aAAa,CAAC,KAAK,CAAC;IACpB5L,QAAQ,CAACO,IAAI,CAACoM,SAAS,CAACY,MAAM,CAAC,UAAU,CAAC;;IAE1C;IACAvN,QAAQ,CAACsN,gBAAgB,CAAC,QAAQ,CAAC,CAACjL,OAAO,CAACtD,KAAK,IAAI;MACnDA,KAAK,CAAC4N,SAAS,CAACY,MAAM,CAAC,WAAW,CAAC;IACrC,CAAC,CAAC;IAEF,IAAI/B,SAAS,EAAE;MACbA,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACElT,OAAA;IACEuR,SAAS,EAAE,cAAc8B,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IACxDuC,SAAS,EAAC,MAAM;IAChBtD,WAAW,EAAEqB,eAAgB;IAC7BT,SAAS,EAAEA,SAAU;IACrB2C,YAAY,EAAE9B,gBAAiB;IAC/B+B,WAAW,EAAEvB,eAAgB;IAC7BwB,UAAU,EAAEb,cAAe;IAC3BjD,KAAK,EAAE;MACL1D,IAAI,EAAE5H,IAAI,CAACsD,SAAS;MACpB+E,KAAK,EAAErJ,QAAQ,CAACgB,IAAI,CAACjB,QAAQ,CAAC,IAAIiB,IAAI,CAACjB,QAAQ,GAAG,CAAC,GAAGiB,IAAI,CAACjB,QAAQ,GAAG,GAAG,CAAC;IAC5E,CAAE;IAAA8L,QAAA,gBAEFxR,OAAA;MAAKuR,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BxR,OAAA;QAAMuR,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAE7K,IAAI,CAACC,SAAS,CAAC5F;MAAI;QAAAyQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxD5R,OAAA;QACEuR,SAAS,EAAC,iBAAiB;QAC3BM,OAAO,EAAEW,QAAS;QAClBJ,KAAK,EAAC,4CAAS;QAAAZ,QAAA,EAChB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN5R,OAAA;MAAKuR,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B+F,YAAY,CAAC5T,MAAM,GAAG,CAAC,gBACtB3D,OAAA;QAAKuR,SAAS,EAAC,cAAc;QAACvC,KAAK,EAAC,MAAM;QAACmH,MAAM,EAAC,IAAI;QAAA3E,QAAA,EACnD+F,YAAY,CAAC1T,GAAG,CAAC,CAACsS,MAAM,EAAEzM,KAAK,kBAC9B1J,OAAA;UAEEkU,CAAC,EAAE,GAAIxK,KAAK,GAAG6N,YAAY,CAAC5T,MAAM,GAAI,GAAG,GAAI;UAC7CwQ,CAAC,EAAE,GAAG,CAAC,CAAC,GAAGgC,MAAM,IAAI,EAAE,EAAG;UAC1BnH,KAAK,EAAE,GAAG,EAAE,GAAGuI,YAAY,CAAC5T,MAAM,GAAI;UACtCwS,MAAM,EAAE,GAAGA,MAAM,GAAG,EAAE,EAAG;UACzB4B,IAAI,EAAC;QAA0B,GAL1BrO,KAAK;UAAA+H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAEN5R,OAAA;QAAKuR,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAC9C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC0F,GAAA,CAjKIF,SAAS;AAAAY,GAAA,GAATZ,SAAS;AAmKf,MAAMxE,QAAQ,GAAGA,CAAC;EAAEtR;AAAY,CAAC,KAAK;EACpC;EACA,MAAM2W,eAAe,GAAGtS,QAAQ,CAACrE,WAAW,CAAC,IAAIA,WAAW,IAAI,CAAC,GAAGA,WAAW,GAAG,CAAC;EAEnF,oBACEtB,OAAA;IACEuR,SAAS,EAAC,UAAU;IACpBU,KAAK,EAAE;MAAE1D,IAAI,EAAE0J;IAAgB;EAAE;IAAAxG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEN,CAAC;AAACsG,GAAA,GAVItF,QAAQ;AAYd,eAAerS,OAAO;AAAC,IAAA4S,EAAA,EAAA+C,GAAA,EAAAE,GAAA,EAAAO,GAAA,EAAAU,GAAA,EAAAW,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAhF,EAAA;AAAAgF,YAAA,CAAAjC,GAAA;AAAAiC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}