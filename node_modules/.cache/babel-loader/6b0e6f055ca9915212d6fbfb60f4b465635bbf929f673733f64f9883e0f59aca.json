{"ast":null,"code":"var _jsxFileName = \"/Users/nakataniyuutomo/Desktop/Programing/\\u30BB\\u3099\\u30DF\\u958B\\u767A/sound-library2/src/pages/DAWPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAWPage = () => {\n  _s();\n  const [tracks, setTracks] = useState([{\n    id: 1,\n    name: 'トラック 1',\n    clips: []\n  }]);\n  const [bpm, setBpm] = useState(120);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n\n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n\n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          const byteCharacters = atob(sound.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n          return {\n            ...sound,\n            audioBlob: blob\n          };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    setSounds(soundsWithBlob);\n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = (audioBlob, currentBpm = bpm) => {\n    return new Promise(resolve => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n      const audio = new Audio();\n      const handleLoadedMetadata = () => {\n        const durationInSeconds = audio.duration;\n        console.log('音声ファイルの実際の長さ:', durationInSeconds, '秒');\n        console.log('音声ファイルの詳細情報:', {\n          duration: durationInSeconds,\n          readyState: audio.readyState,\n          networkState: audio.networkState,\n          currentTime: audio.currentTime,\n          paused: audio.paused,\n          ended: audio.ended\n        });\n\n        // URLをクリーンアップ\n        URL.revokeObjectURL(audio.src);\n\n        // 有効な数値かチェック（NaN、Infinity、負の値を除外）\n        if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n          // BPMに基づいてピクセル幅を計算\n          // 1拍 = 100px, 1小節 = 4拍 = 400px\n          // 1秒あたりの拍数 = BPM / 60\n          // 1秒あたりのピクセル数 = (BPM / 60) * 100\n          const pixelsPerSecond = currentBpm / 60 * 100;\n          const widthInPixels = durationInSeconds * pixelsPerSecond;\n          console.log('計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm / 60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n          resolve(widthInPixels);\n        } else {\n          // デフォルト値（1小節 = 400px）\n          console.log('無効な音声長さのためデフォルト値を使用:', durationInSeconds);\n          resolve(400);\n        }\n      };\n      const handleError = event => {\n        console.log('音声ファイルの読み込みエラー - デフォルト値を使用', event);\n        console.log('エラー詳細:', {\n          error: audio.error,\n          networkState: audio.networkState,\n          readyState: audio.readyState\n        });\n        URL.revokeObjectURL(audio.src);\n        resolve(400);\n      };\n      const handleCanPlayThrough = () => {\n        console.log('canplaythrough イベント発生 - duration:', audio.duration);\n      };\n\n      // タイムアウト処理を追加（10秒でタイムアウト）\n      const timeoutId = setTimeout(() => {\n        console.log('音声ファイルの読み込みタイムアウト - デフォルト値を使用');\n        console.log('タイムアウト時の状態:', {\n          duration: audio.duration,\n          readyState: audio.readyState,\n          networkState: audio.networkState\n        });\n        audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        audio.removeEventListener('error', handleError);\n        audio.removeEventListener('canplaythrough', handleCanPlayThrough);\n        URL.revokeObjectURL(audio.src);\n        resolve(400);\n      }, 10000);\n      audio.addEventListener('loadedmetadata', () => {\n        console.log('loadedmetadata イベント発生');\n        clearTimeout(timeoutId);\n        handleLoadedMetadata();\n      });\n      audio.addEventListener('error', event => {\n        console.log('error イベント発生');\n        clearTimeout(timeoutId);\n        handleError(event);\n      });\n      audio.addEventListener('canplaythrough', handleCanPlayThrough);\n      try {\n        const objectUrl = URL.createObjectURL(audioBlob);\n        console.log('ObjectURL作成成功:', objectUrl);\n        audio.src = objectUrl;\n\n        // 手動でloadを呼び出し\n        audio.load();\n      } catch (error) {\n        console.error('createObjectURL エラー:', error);\n        clearTimeout(timeoutId);\n        resolve(400);\n      }\n    });\n  };\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = bpm / 60 * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n\n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n\n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = bpm / 60 * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - timeInSeconds * 1000);\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = async newBpm => {\n    setBpm(newBpm);\n\n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(tracks.map(async track => {\n      const updatedClips = await Promise.all(track.clips.map(async clip => {\n        if (clip.soundData && clip.soundData.audioBlob) {\n          try {\n            const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n            return {\n              ...clip,\n              duration: newDuration\n            };\n          } catch (error) {\n            console.warn('クリップのduration更新に失敗:', error);\n            return clip;\n          }\n        }\n        return clip;\n      }));\n      return {\n        ...track,\n        clips: updatedClips\n      };\n    }));\n    setTracks(updatedTracks);\n  };\n  const addTrack = () => {\n    const newTrack = {\n      id: tracks.length + 1,\n      name: `トラック ${tracks.length + 1}`,\n      clips: []\n    };\n    setTracks([...tracks, newTrack]);\n  };\n  const removeTrack = trackId => {\n    if (tracks.length > 1) {\n      setTracks(tracks.filter(track => track.id !== trackId));\n    }\n  };\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    console.log('ドロップ処理開始:', {\n      trackId,\n      timePosition,\n      draggedClip\n    });\n    try {\n      // 拍に合わせて位置を調整\n      const beatWidth = 100; // 1拍の幅（px）\n      const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n\n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n\n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n        setTracks(tracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => clip.id === draggedClip.id ? updatedClip : clip)\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n\n      // 新しい音素材の配置\n      const soundData = JSON.parse(e.dataTransfer.getData('application/json'));\n\n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      console.log('新しい音素材のドロップ:', {\n        soundData,\n        hasAudioBlob: !!soundData.audioBlob\n      });\n\n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n      const newClip = {\n        id: Date.now(),\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n      console.log('作成されたクリップ:', newClip);\n      setTracks(tracks.map(track => track.id === trackId ? {\n        ...track,\n        clips: [...track.clips, newClip]\n      } : track));\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n  const handleDragOver = e => {\n    var _timelineRef$current;\n    e.preventDefault();\n\n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n\n    // ドラッグプレビューの更新\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    const beatWidth = 100;\n    const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n    const trackElement = e.currentTarget;\n    const trackRect = trackElement.getBoundingClientRect();\n    const tracksAreaRect = (_timelineRef$current = timelineRef.current) === null || _timelineRef$current === void 0 ? void 0 : _timelineRef$current.getBoundingClientRect();\n    if (tracksAreaRect) {\n      const relativeTop = trackRect.top - tracksAreaRect.top;\n      const trackId = parseInt(trackElement.dataset.trackId);\n\n      // プレビュー幅を決定\n      let previewWidth = 400; // デフォルト値（1小節）\n\n      if (draggedClip) {\n        // 既存クリップの場合\n        previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 ? draggedClip.duration : 400;\n      } else {\n        // 新しい音素材の場合、概算のサイズを表示（実際のサイズは配置後に決定）\n        previewWidth = 400; // 1小節分として表示\n      }\n      setDragPreview({\n        left: snappedPosition,\n        top: relativeTop + 10,\n        width: previewWidth,\n        trackId: trackId\n      });\n    }\n  };\n  const removeClip = (trackId, clipId) => {\n    setTracks(tracks.map(track => track.id === trackId ? {\n      ...track,\n      clips: track.clips.filter(clip => clip.id !== clipId)\n    } : track));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({\n      ...clip,\n      originalTrackId\n    });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = e => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n  };\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      setIsPlaying(true);\n\n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = bpm / 60 * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n\n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + clip.duration / pixelsPerSecond;\n\n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', {\n              clipStartTimeInSeconds,\n              clipEndTimeInSeconds\n            });\n            return;\n          }\n\n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    var _clip$soundData;\n    console.log('scheduleClipPlayback:', {\n      clip,\n      hasAudioBlob: !!((_clip$soundData = clip.soundData) !== null && _clip$soundData !== void 0 && _clip$soundData.audioBlob)\n    });\n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n\n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        playingAudiosMap.set(clip.id, {\n          audio,\n          timeoutId,\n          audioUrl\n        });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です:', clip.soundData);\n    }\n  };\n  const pause = () => {\n    setIsPlaying(false);\n\n    // 再生中の音声を一時停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n\n    // 再生中の音声を停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    setPlayingAudios(new Map());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daw-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB9 \\u97F3\\u697D\\u3065\\u304F\\u308A\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u97F3\\u7D20\\u6750\\u3092\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u97F3\\u697D\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u3087\\u3046\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-controls card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transport-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `transport-btn play-btn ${isPlaying ? 'playing' : ''}`,\n          onClick: isPlaying ? pause : play,\n          children: isPlaying ? '⏸️' : '▶️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transport-btn stop-btn\",\n          onClick: stop,\n          children: \"\\u23F9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpm-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bpm\",\n          children: \"\\uD83C\\uDFB5 BPM:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bpm\",\n          type: \"number\",\n          value: bpm,\n          onChange: e => handleBpmChange(parseInt(e.target.value)),\n          min: \"60\",\n          max: \"200\",\n          className: \"bpm-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: addTrack,\n          children: \"\\u2795 \\u30C8\\u30E9\\u30C3\\u30AF\\u8FFD\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: () => setShowSoundPanel(!showSoundPanel),\n          children: showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-main-area\",\n      children: [showSoundPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDFB5 \\u97F3\\u7D20\\u6750\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-list\",\n          children: sounds.length > 0 ? sounds.map(sound => /*#__PURE__*/_jsxDEV(SoundItem, {\n            sound: sound\n          }, sound.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sounds\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u97F3\\u7D20\\u6750\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u300C\\u97F3\\u3092\\u96C6\\u3081\\u308B\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u97F3\\u3092\\u9332\\u97F3\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daw-workspace\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-headers\",\n          children: tracks.map(track => /*#__PURE__*/_jsxDEV(TrackHeader, {\n            track: track,\n            onRemove: removeTrack,\n            trackHeight: trackHeight\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(Timeline, {\n            bpm: bpm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tracks-area\",\n            ref: timelineRef,\n            children: [/*#__PURE__*/_jsxDEV(Playhead, {\n              currentTime: currentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this), dragPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drag-preview\",\n              style: {\n                left: dragPreview.left,\n                top: dragPreview.top,\n                width: dragPreview.width\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n              track: track,\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onRemoveClip: removeClip,\n              onClipDragStart: handleClipDragStart,\n              onDragEnd: handleDragEnd,\n              trackHeight: trackHeight,\n              bpm: bpm\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCD6 \\u4F7F\\u3044\\u65B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u5DE6\\u5074\\u306E\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u304B\\u3089\\u97F3\\u7D20\\u6750\\u3092\\u30C8\\u30E9\\u30C3\\u30AF\\u306B\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u914D\\u7F6E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u914D\\u7F6E\\u6E08\\u307F\\u306E\\u97F3\\u7D20\\u6750\\u3082\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u5225\\u306E\\u5834\\u6240\\u306B\\u79FB\\u52D5\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u914D\\u7F6E\\u4E88\\u5B9A\\u4F4D\\u7F6E\\u306B\\u9752\\u3044\\u5F71\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u306F\\u62CD\\u306B\\u5408\\u308F\\u305B\\u3066\\u81EA\\u52D5\\u7684\\u306B\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u306E\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u500B\\u5225\\u306B\\u97F3\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u518D\\u751F\\u3001\\u23F8\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u4E00\\u6642\\u505C\\u6B62\\u3001\\u23F9\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u505C\\u6B62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"BPM\\u3092\\u5909\\u66F4\\u3057\\u3066\\u97F3\\u697D\\u306E\\u901F\\u3055\\u3092\\u8ABF\\u6574\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u8FFD\\u52A0\\u3057\\u3066\\u8907\\u6570\\u306E\\u97F3\\u3092\\u91CD\\u306D\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 563,\n    columnNumber: 5\n  }, this);\n};\n_s(DAWPage, \"N1eC5PNpinduC8uHwDd3HD4ELUc=\");\n_c = DAWPage;\nconst SoundItem = ({\n  sound\n}) => {\n  _s2();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handleDragStart = e => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n\n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n  };\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying) {\n      const audio = new Audio();\n      audio.src = URL.createObjectURL(sound.audioBlob);\n      audio.play().then(() => {\n        setIsPlaying(true);\n        audio.addEventListener('ended', () => {\n          setIsPlaying(false);\n        });\n      }).catch(error => {\n        console.error('音声再生エラー:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sound-item\",\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: sound.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-tags\",\n        children: sound.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-tag\",\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-sound-btn\",\n        onClick: playSound,\n        disabled: isPlaying,\n        children: isPlaying ? '⏸️' : '▶️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 728,\n    columnNumber: 5\n  }, this);\n};\n_s2(SoundItem, \"dxr5RgzQJlMZkbQdHY9iHZ+FF0w=\");\n_c2 = SoundItem;\nconst TrackHeader = ({\n  track,\n  onRemove,\n  trackHeight\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track-header\",\n    style: {\n      height: trackHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-track-btn\",\n          onClick: () => onRemove(track.id),\n          title: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u524A\\u9664\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 756,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TrackHeader;\nconst Timeline = ({\n  bpm\n}) => {\n  const measures = 16; // 16小節表示\n  const beatsPerMeasure = 4; // 4/4拍子\n  const beatWidth = 100; // 1拍の幅\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    children: Array.from({\n      length: measures\n    }, (_, measureIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"measure\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measure-number\",\n        children: measureIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beats\",\n        children: Array.from({\n          length: beatsPerMeasure\n        }, (_, beatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"beat\",\n          style: {\n            width: beatWidth\n          },\n          children: beatIndex + 1\n        }, beatIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 11\n      }, this)]\n    }, measureIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 779,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Timeline;\nconst Track = ({\n  track,\n  onDrop,\n  onDragOver,\n  onRemoveClip,\n  onClipDragStart,\n  onDragEnd,\n  trackHeight,\n  bpm\n}) => {\n  const handleDrop = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track\",\n    style: {\n      height: trackHeight\n    },\n    \"data-track-id\": track.id,\n    onDrop: handleDrop,\n    onDragOver: onDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-grid\",\n      children: Array.from({\n        length: 64\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beat-line\",\n        style: {\n          left: index * 100\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 7\n    }, this), track.clips.map(clip => /*#__PURE__*/_jsxDEV(AudioClip, {\n      clip: clip,\n      trackId: track.id,\n      onRemove: () => onRemoveClip(track.id, clip.id),\n      onDragStart: onClipDragStart,\n      onDragEnd: onDragEnd\n    }, clip.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 808,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Track;\nconst AudioClip = ({\n  clip,\n  trackId,\n  onRemove,\n  onDragStart,\n  onDragEnd\n}) => {\n  _s3();\n  const [waveformData, setWaveformData] = React.useState([]);\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n    generateWaveform();\n  }, [clip.soundData]);\n  const handleDragStart = e => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n\n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-clip\",\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onDragEnd: onDragEnd,\n    style: {\n      left: clip.startTime,\n      width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clip-name\",\n        children: clip.soundData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-clip-btn\",\n        onClick: onRemove,\n        title: \"\\u30AF\\u30EA\\u30C3\\u30D7\\u3092\\u524A\\u9664\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-waveform\",\n      children: waveformData.length > 0 ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"waveform-svg\",\n        width: \"100%\",\n        height: \"30\",\n        children: waveformData.map((height, index) => /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: `${index / waveformData.length * 100}%`,\n          y: `${(1 - height) * 15}`,\n          width: `${80 / waveformData.length}%`,\n          height: `${height * 30}`,\n          fill: \"rgba(255, 255, 255, 0.8)\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform-placeholder\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 865,\n    columnNumber: 5\n  }, this);\n};\n_s3(AudioClip, \"VRSTty1v2EawVvG4In91JJSTL8A=\");\n_c6 = AudioClip;\nconst Playhead = ({\n  currentTime\n}) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playhead\",\n    style: {\n      left: safeCurrentTime\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 912,\n    columnNumber: 5\n  }, this);\n};\n_c7 = Playhead;\nexport default DAWPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DAWPage\");\n$RefreshReg$(_c2, \"SoundItem\");\n$RefreshReg$(_c3, \"TrackHeader\");\n$RefreshReg$(_c4, \"Timeline\");\n$RefreshReg$(_c5, \"Track\");\n$RefreshReg$(_c6, \"AudioClip\");\n$RefreshReg$(_c7, \"Playhead\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","DAWPage","_s","tracks","setTracks","id","name","clips","bpm","setBpm","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioContext","setAudioContext","trackHeight","playingAudios","setPlayingAudios","Map","startPlayTime","setStartPlayTime","error","setError","sounds","setSounds","showSoundPanel","setShowSoundPanel","draggedClip","setDraggedClip","dragPreview","setDragPreview","timelineRef","animationFrameRef","ctx","window","AudioContext","webkitAudioContext","savedSounds","JSON","parse","localStorage","getItem","soundsWithBlob","map","sound","audioData","byteCharacters","atob","split","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","audioBlob","console","close","current","cancelAnimationFrame","currentDraggedSoundBlob","getAudioDuration","currentBpm","Promise","resolve","log","size","audio","Audio","handleLoadedMetadata","durationInSeconds","duration","readyState","networkState","paused","ended","URL","revokeObjectURL","src","isFinite","pixelsPerSecond","widthInPixels","handleError","event","handleCanPlayThrough","timeoutId","setTimeout","removeEventListener","addEventListener","clearTimeout","objectUrl","createObjectURL","load","updatePlayhead","animate","elapsed","Date","now","newCurrentTime","warn","requestAnimationFrame","timeInSeconds","handleBpmChange","newBpm","updatedTracks","all","track","updatedClips","clip","soundData","newDuration","addTrack","newTrack","removeTrack","trackId","filter","handleDrop","e","timePosition","preventDefault","beatWidth","snappedPosition","Math","round","originalTrackId","updatedClip","startTime","dataTransfer","getData","hasAudioBlob","newClip","handleDragOver","_timelineRef$current","dropEffect","rect","currentTarget","getBoundingClientRect","clientX","left","trackElement","trackRect","tracksAreaRect","relativeTop","top","parseInt","dataset","previewWidth","width","removeClip","clipId","handleClipDragStart","handleDragEnd","play","state","resume","currentTimeInSeconds","newPlayingAudios","forEach","clipStartTimeInSeconds","clipEndTimeInSeconds","delay","max","scheduleClipPlayback","delayMs","playingAudiosMap","_clip$soundData","audioUrl","catch","set","pause","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","value","onChange","target","min","SoundItem","TrackHeader","onRemove","Timeline","ref","Playhead","style","Track","onDrop","onDragOver","onRemoveClip","onClipDragStart","onDragEnd","_c","_s2","handleDragStart","soundDataForTransfer","setData","stringify","effectAllowed","playSound","then","draggable","onDragStart","tags","tag","index","disabled","_c2","height","title","_c3","measures","beatsPerMeasure","from","_","measureIndex","beatIndex","_c4","AudioClip","_c5","_s3","waveformData","setWaveformData","generateWaveform","points","data","push","random","stopPropagation","x","y","fill","_c6","safeCurrentTime","_c7","$RefreshReg$"],"sources":["/Users/nakataniyuutomo/Desktop/Programing/ゼミ開発/sound-library2/src/pages/DAWPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\nconst DAWPage = () => {\n  const [tracks, setTracks] = useState([{ id: 1, name: 'トラック 1', clips: [] }]);\n  const [bpm, setBpm] = useState(120);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n    \n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    \n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          const byteCharacters = atob(sound.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          return { ...sound, audioBlob: blob };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    \n    setSounds(soundsWithBlob);\n    \n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = (audioBlob, currentBpm = bpm) => {\n    return new Promise((resolve) => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      const audio = new Audio();\n      \n      const handleLoadedMetadata = () => {\n        const durationInSeconds = audio.duration;\n        console.log('音声ファイルの実際の長さ:', durationInSeconds, '秒');\n        console.log('音声ファイルの詳細情報:', {\n          duration: durationInSeconds,\n          readyState: audio.readyState,\n          networkState: audio.networkState,\n          currentTime: audio.currentTime,\n          paused: audio.paused,\n          ended: audio.ended\n        });\n        \n        // URLをクリーンアップ\n        URL.revokeObjectURL(audio.src);\n        \n        // 有効な数値かチェック（NaN、Infinity、負の値を除外）\n        if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n          // BPMに基づいてピクセル幅を計算\n          // 1拍 = 100px, 1小節 = 4拍 = 400px\n          // 1秒あたりの拍数 = BPM / 60\n          // 1秒あたりのピクセル数 = (BPM / 60) * 100\n          const pixelsPerSecond = (currentBpm / 60) * 100;\n          const widthInPixels = durationInSeconds * pixelsPerSecond;\n          console.log('計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm/60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n          resolve(widthInPixels);\n        } else {\n          // デフォルト値（1小節 = 400px）\n          console.log('無効な音声長さのためデフォルト値を使用:', durationInSeconds);\n          resolve(400);\n        }\n      };\n      \n      const handleError = (event) => {\n        console.log('音声ファイルの読み込みエラー - デフォルト値を使用', event);\n        console.log('エラー詳細:', {\n          error: audio.error,\n          networkState: audio.networkState,\n          readyState: audio.readyState\n        });\n        URL.revokeObjectURL(audio.src);\n        resolve(400);\n      };\n      \n      const handleCanPlayThrough = () => {\n        console.log('canplaythrough イベント発生 - duration:', audio.duration);\n      };\n      \n      // タイムアウト処理を追加（10秒でタイムアウト）\n      const timeoutId = setTimeout(() => {\n        console.log('音声ファイルの読み込みタイムアウト - デフォルト値を使用');\n        console.log('タイムアウト時の状態:', {\n          duration: audio.duration,\n          readyState: audio.readyState,\n          networkState: audio.networkState\n        });\n        audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        audio.removeEventListener('error', handleError);\n        audio.removeEventListener('canplaythrough', handleCanPlayThrough);\n        URL.revokeObjectURL(audio.src);\n        resolve(400);\n      }, 10000);\n      \n      audio.addEventListener('loadedmetadata', () => {\n        console.log('loadedmetadata イベント発生');\n        clearTimeout(timeoutId);\n        handleLoadedMetadata();\n      });\n      audio.addEventListener('error', (event) => {\n        console.log('error イベント発生');\n        clearTimeout(timeoutId);\n        handleError(event);\n      });\n      audio.addEventListener('canplaythrough', handleCanPlayThrough);\n      \n      try {\n        const objectUrl = URL.createObjectURL(audioBlob);\n        console.log('ObjectURL作成成功:', objectUrl);\n        audio.src = objectUrl;\n        \n        // 手動でloadを呼び出し\n        audio.load();\n      } catch (error) {\n        console.error('createObjectURL エラー:', error);\n        clearTimeout(timeoutId);\n        resolve(400);\n      }\n    });\n  };\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = (bpm / 60) * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n        \n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n        \n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = (bpm / 60) * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - (timeInSeconds * 1000));\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = async (newBpm) => {\n    setBpm(newBpm);\n    \n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration更新に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  };\n\n  const addTrack = () => {\n    const newTrack = {\n      id: tracks.length + 1,\n      name: `トラック ${tracks.length + 1}`,\n      clips: []\n    };\n    setTracks([...tracks, newTrack]);\n  };\n\n  const removeTrack = (trackId) => {\n    if (tracks.length > 1) {\n      setTracks(tracks.filter(track => track.id !== trackId));\n    }\n  };\n\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    \n    console.log('ドロップ処理開始:', { trackId, timePosition, draggedClip });\n    \n    try {\n      // 拍に合わせて位置を調整\n      const beatWidth = 100; // 1拍の幅（px）\n      const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n      \n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n        \n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n\n        setTracks(tracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => \n                clip.id === draggedClip.id ? updatedClip : clip\n              )\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n      \n      // 新しい音素材の配置\n      const soundData = JSON.parse(e.dataTransfer.getData('application/json'));\n      \n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      \n      console.log('新しい音素材のドロップ:', { soundData, hasAudioBlob: !!soundData.audioBlob });\n      \n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n\n      const newClip = {\n        id: Date.now(),\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n\n      console.log('作成されたクリップ:', newClip);\n\n      setTracks(tracks.map(track => \n        track.id === trackId \n          ? { ...track, clips: [...track.clips, newClip] }\n          : track\n      ));\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    \n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n    \n    // ドラッグプレビューの更新\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    const beatWidth = 100;\n    const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n    \n    const trackElement = e.currentTarget;\n    const trackRect = trackElement.getBoundingClientRect();\n    const tracksAreaRect = timelineRef.current?.getBoundingClientRect();\n    \n    if (tracksAreaRect) {\n      const relativeTop = trackRect.top - tracksAreaRect.top;\n      const trackId = parseInt(trackElement.dataset.trackId);\n      \n      // プレビュー幅を決定\n      let previewWidth = 400; // デフォルト値（1小節）\n      \n      if (draggedClip) {\n        // 既存クリップの場合\n        previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 \n          ? draggedClip.duration \n          : 400;\n      } else {\n        // 新しい音素材の場合、概算のサイズを表示（実際のサイズは配置後に決定）\n        previewWidth = 400; // 1小節分として表示\n      }\n      \n      setDragPreview({\n        left: snappedPosition,\n        top: relativeTop + 10,\n        width: previewWidth,\n        trackId: trackId\n      });\n    }\n  };\n\n  const removeClip = (trackId, clipId) => {\n    setTracks(tracks.map(track => \n      track.id === trackId \n        ? { ...track, clips: track.clips.filter(clip => clip.id !== clipId) }\n        : track\n    ));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({ ...clip, originalTrackId });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = (e) => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n  };\n\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      setIsPlaying(true);\n      \n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = (bpm / 60) * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n      \n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      \n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          \n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + (clip.duration / pixelsPerSecond);\n          \n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', { clipStartTimeInSeconds, clipEndTimeInSeconds });\n            return;\n          }\n          \n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      \n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    console.log('scheduleClipPlayback:', { clip, hasAudioBlob: !!clip.soundData?.audioBlob });\n    \n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        \n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n        \n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        \n        playingAudiosMap.set(clip.id, { audio, timeoutId, audioUrl });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です:', clip.soundData);\n    }\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n    \n    // 再生中の音声を一時停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    \n    // 再生中の音声を停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    \n    setPlayingAudios(new Map());\n  };\n\n  return (\n    <div className=\"daw-page\">\n      <h2>🎹 音楽づくりページ</h2>\n      <p>音素材をドラッグ&ドロップして音楽を作りましょう！</p>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"daw-controls card\">\n        <div className=\"transport-controls\">\n          <button \n            className={`transport-btn play-btn ${isPlaying ? 'playing' : ''}`}\n            onClick={isPlaying ? pause : play}\n          >\n            {isPlaying ? '⏸️' : '▶️'}\n          </button>\n          <button className=\"transport-btn stop-btn\" onClick={stop}>\n            ⏹️\n          </button>\n        </div>\n\n        <div className=\"bpm-control\">\n          <label htmlFor=\"bpm\">🎵 BPM:</label>\n          <input\n            id=\"bpm\"\n            type=\"number\"\n            value={bpm}\n            onChange={(e) => handleBpmChange(parseInt(e.target.value))}\n            min=\"60\"\n            max=\"200\"\n            className=\"bpm-input\"\n          />\n        </div>\n\n        <div className=\"track-controls\">\n          <button className=\"button-primary\" onClick={addTrack}>\n            ➕ トラック追加\n          </button>\n          <button \n            className=\"button-secondary\" \n            onClick={() => setShowSoundPanel(!showSoundPanel)}\n          >\n            {showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"daw-main-area\">\n        {showSoundPanel && (\n          <div className=\"sound-panel\">\n            <h3>🎵 音素材</h3>\n            <div className=\"sound-list\">\n              {sounds.length > 0 ? (\n                sounds.map(sound => (\n                  <SoundItem key={sound.id} sound={sound} />\n                ))\n              ) : (\n                <div className=\"no-sounds\">\n                  <p>音素材がありません</p>\n                  <p>「音を集める」ページで音を録音してください</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div className=\"daw-workspace\">\n          <div className=\"track-headers\">\n            {tracks.map(track => (\n              <TrackHeader \n                key={track.id} \n                track={track} \n                onRemove={removeTrack}\n                trackHeight={trackHeight}\n              />\n            ))}\n          </div>\n\n          <div className=\"timeline-container\">\n            <Timeline bpm={bpm} />\n            <div className=\"tracks-area\" ref={timelineRef}>\n              <Playhead currentTime={currentTime} />\n              {dragPreview && (\n                <div \n                  className=\"drag-preview\"\n                  style={{\n                    left: dragPreview.left,\n                    top: dragPreview.top,\n                    width: dragPreview.width\n                  }}\n                />\n              )}\n              {tracks.map(track => (\n                <Track\n                  key={track.id}\n                  track={track}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onRemoveClip={removeClip}\n                  onClipDragStart={handleClipDragStart}\n                  onDragEnd={handleDragEnd}\n                  trackHeight={trackHeight}\n                  bpm={bpm}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"instructions card\">\n        <h3>📖 使い方</h3>\n        <ul>\n          <li>左側の音素材パネルから音素材をトラックにドラッグ&ドロップして配置</li>\n          <li>配置済みの音素材もドラッグして別の場所に移動できます</li>\n          <li>ドラッグ中は配置予定位置に青い影が表示されます</li>\n          <li>音素材は拍に合わせて自動的に配置されます</li>\n          <li>音素材パネルの▶️ボタンで個別に音を確認できます</li>\n          <li>▶️ボタンで再生、⏸️ボタンで一時停止、⏹️ボタンで停止</li>\n          <li>BPMを変更して音楽の速さを調整</li>\n          <li>トラックを追加して複数の音を重ねることができます</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst SoundItem = ({ sound }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const handleDragStart = (e) => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    \n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n    \n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n  };\n\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying) {\n      const audio = new Audio();\n      audio.src = URL.createObjectURL(sound.audioBlob);\n      audio.play()\n        .then(() => {\n          setIsPlaying(true);\n          audio.addEventListener('ended', () => {\n            setIsPlaying(false);\n          });\n        })\n        .catch(error => {\n          console.error('音声再生エラー:', error);\n        });\n    }\n  };\n\n  return (\n    <div\n      className=\"sound-item\"\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n    >\n      <div className=\"sound-info\">\n        <h4>{sound.name}</h4>\n        <div className=\"sound-tags\">\n          {sound.tags.map((tag, index) => (\n            <span key={index} className=\"sound-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"sound-actions\">\n        <button \n          className=\"play-sound-btn\"\n          onClick={playSound}\n          disabled={isPlaying}\n        >\n          {isPlaying ? '⏸️' : '▶️'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst TrackHeader = ({ track, onRemove, trackHeight }) => {\n  return (\n    <div className=\"track-header\" style={{ height: trackHeight }}>\n      <div className=\"track-info\">\n        <h4>{track.name}</h4>\n        <div className=\"track-actions\">\n          <button \n            className=\"remove-track-btn\"\n            onClick={() => onRemove(track.id)}\n            title=\"トラックを削除\"\n          >\n            🗑️\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Timeline = ({ bpm }) => {\n  const measures = 16; // 16小節表示\n  const beatsPerMeasure = 4; // 4/4拍子\n  const beatWidth = 100; // 1拍の幅\n\n  return (\n    <div className=\"timeline\">\n      {Array.from({ length: measures }, (_, measureIndex) => (\n        <div key={measureIndex} className=\"measure\">\n          <div className=\"measure-number\">{measureIndex + 1}</div>\n          <div className=\"beats\">\n            {Array.from({ length: beatsPerMeasure }, (_, beatIndex) => (\n              <div \n                key={beatIndex} \n                className=\"beat\"\n                style={{ width: beatWidth }}\n              >\n                {beatIndex + 1}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Track = ({ track, onDrop, onDragOver, onRemoveClip, onClipDragStart, onDragEnd, trackHeight, bpm }) => {\n  const handleDrop = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  return (\n    <div \n      className=\"track\"\n      style={{ height: trackHeight }}\n      data-track-id={track.id}\n      onDrop={handleDrop}\n      onDragOver={onDragOver}\n    >\n      <div className=\"track-grid\">\n        {/* 拍の境界線を表示 */}\n        {Array.from({ length: 64 }, (_, index) => (\n          <div key={index} className=\"beat-line\" style={{ left: index * 100 }} />\n        ))}\n      </div>\n      \n      {track.clips.map(clip => (\n        <AudioClip\n          key={clip.id}\n          clip={clip}\n          trackId={track.id}\n          onRemove={() => onRemoveClip(track.id, clip.id)}\n          onDragStart={onClipDragStart}\n          onDragEnd={onDragEnd}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AudioClip = ({ clip, trackId, onRemove, onDragStart, onDragEnd }) => {\n  const [waveformData, setWaveformData] = React.useState([]);\n\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n\n    generateWaveform();\n  }, [clip.soundData]);\n\n  const handleDragStart = (e) => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n    \n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  return (\n    <div \n      className=\"audio-clip\"\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={onDragEnd}\n      style={{\n        left: clip.startTime,\n        width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n      }}\n    >\n      <div className=\"clip-header\">\n        <span className=\"clip-name\">{clip.soundData.name}</span>\n        <button \n          className=\"remove-clip-btn\"\n          onClick={onRemove}\n          title=\"クリップを削除\"\n        >\n          ×\n        </button>\n      </div>\n      <div className=\"clip-waveform\">\n        {waveformData.length > 0 ? (\n          <svg className=\"waveform-svg\" width=\"100%\" height=\"30\">\n            {waveformData.map((height, index) => (\n              <rect\n                key={index}\n                x={`${(index / waveformData.length) * 100}%`}\n                y={`${(1 - height) * 15}`}\n                width={`${80 / waveformData.length}%`}\n                height={`${height * 30}`}\n                fill=\"rgba(255, 255, 255, 0.8)\"\n              />\n            ))}\n          </svg>\n        ) : (\n          <div className=\"waveform-placeholder\">🔊</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Playhead = ({ currentTime }) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  \n  return (\n    <div \n      className=\"playhead\"\n      style={{ left: safeCurrentTime }}\n    />\n  );\n};\n\nexport default DAWPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}