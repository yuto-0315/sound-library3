{"ast":null,"code":"import _objectSpread from\"/Users/nakataniyuutomo/Desktop/Programing/\\u30BB\\u3099\\u30DF\\u958B\\u767A/sound-library2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef,useEffect,useCallback}from'react';import'./DAWPage.css';// DAWの定数\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BEAT_WIDTH=100;// 1拍の幅（px）\nconst BEATS_PER_MEASURE=4;// 1小節あたりの拍数\nconst MEASURE_WIDTH=BEAT_WIDTH*BEATS_PER_MEASURE;// 1小節の幅（400px）\nconst SUB_BEAT_WIDTH=BEAT_WIDTH/2;// 8分音符の幅（50px）\nconst TOTAL_MEASURES=16;// 表示する小節数\nconst TOTAL_BEATS=TOTAL_MEASURES*BEATS_PER_MEASURE;// 総拍数\nconst DAWPage=()=>{// ユニークID生成用のカウンター\nconst trackIdCounterRef=useRef(1);// トラック名の番号管理用カウンター\nconst trackNameCounterRef=useRef(1);const[tracks,setTracks]=useState(()=>[{id:Date.now(),name:'トラック 1',clips:[]}]);const[bpm,setBpm]=useState(120);const[isPlaying,setIsPlaying]=useState(false);const[currentTime,setCurrentTime]=useState(0);const[audioContext,setAudioContext]=useState(null);const[trackHeight]=useState(80);const[playingAudios,setPlayingAudios]=useState(new Map());const[startPlayTime,setStartPlayTime]=useState(null);const[error,setError]=useState(null);const[sounds,setSounds]=useState([]);const[showSoundPanel,setShowSoundPanel]=useState(true);const[draggedClip,setDraggedClip]=useState(null);const[dragPreview,setDragPreview]=useState(null);const[draggedSoundDuration,setDraggedSoundDuration]=useState(400);// ドラッグ中の音素材の長さ\nconst[isExporting,setIsExporting]=useState(false);// 音源出力中フラグ\nconst timelineRef=useRef(null);const animationFrameRef=useRef(null);useEffect(()=>{// Web Audio API の初期化\nconst ctx=new(window.AudioContext||window.webkitAudioContext)();setAudioContext(ctx);// LocalStorageから音素材を読み込み\nconst savedSounds=JSON.parse(localStorage.getItem('soundRecordings')||'[]');console.log('LocalStorageから読み込んだ音素材数:',savedSounds.length);// audioDataからBlobを復元\nconst soundsWithBlob=savedSounds.map(sound=>{if(sound.audioData){try{console.log('音声データ復元中:',sound.name,'データサイズ:',sound.audioData.length);const byteCharacters=atob(sound.audioData.split(',')[1]);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'audio/wav'});console.log('Blob復元成功:',sound.name,'サイズ:',blob.size,'タイプ:',blob.type);return _objectSpread(_objectSpread({},sound),{},{audioBlob:blob});}catch(error){console.error('音声データの復元に失敗:',sound.name,error);return sound;}}return sound;});setSounds(soundsWithBlob);return()=>{if(ctx){ctx.close();}if(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);}// グローバル変数をクリーンアップ\nif(window.currentDraggedSoundBlob){window.currentDraggedSoundBlob=null;}};},[]);// 音声ファイルの継続時間を取得してピクセル幅に変換\nconst getAudioDuration=useCallback(function(audioBlob){let currentBpm=arguments.length>1&&arguments[1]!==undefined?arguments[1]:bpm;return new Promise(async resolve=>{if(!audioBlob||!(audioBlob instanceof Blob)){console.log('無効なaudioBlob - デフォルト値を使用');resolve(400);return;}console.log('audioBlob詳細:',{size:audioBlob.size,type:audioBlob.type,bpm:currentBpm});// AudioContextを使用した方法を優先\nif(audioContext){try{console.log('AudioContext方式で音声長さを取得中...');const arrayBuffer=await audioBlob.arrayBuffer();const audioBuffer=await audioContext.decodeAudioData(arrayBuffer);const durationInSeconds=audioBuffer.duration;console.log('AudioContext方式で取得した長さ:',durationInSeconds,'秒');if(isFinite(durationInSeconds)&&durationInSeconds>0){const pixelsPerSecond=currentBpm/60*100;const widthInPixels=durationInSeconds*pixelsPerSecond;console.log('AudioContext計算結果 - BPM:',currentBpm,'拍/秒:',currentBpm/60,'ピクセル/秒:',pixelsPerSecond,'最終幅:',widthInPixels,'px');resolve(widthInPixels);return;}}catch(error){console.log('AudioContext方式でエラー:',error);}}// AudioContextが失敗した場合はデフォルト値を使用\nconsole.log('AudioContextが利用できないため、デフォルト値を使用');resolve(400);});},[audioContext,bpm]);// プレイヘッドのアニメーション更新\nconst updatePlayhead=useCallback(()=>{const animate=()=>{if(isPlaying&&startPlayTime){const elapsed=(Date.now()-startPlayTime)/1000;// 経過時間（秒）\nconst pixelsPerSecond=bpm/60*100;// BPMに基づいたピクセル/秒\nconst newCurrentTime=elapsed*pixelsPerSecond;// 有効な数値かチェック\nif(isFinite(newCurrentTime)&&newCurrentTime>=0){setCurrentTime(newCurrentTime);}else{console.warn('無効なcurrentTime:',newCurrentTime,'elapsed:',elapsed,'pixelsPerSecond:',pixelsPerSecond);}// 次のフレームを要求\nanimationFrameRef.current=requestAnimationFrame(animate);}};if(isPlaying&&startPlayTime){animate();}},[isPlaying,startPlayTime,bpm]);useEffect(()=>{if(isPlaying){if(!startPlayTime){// 再生開始時にstartPlayTimeを設定\nconst pixelsPerSecond=bpm/60*100;if(isFinite(pixelsPerSecond)&&pixelsPerSecond>0){const timeInSeconds=currentTime/pixelsPerSecond;if(isFinite(timeInSeconds)&&timeInSeconds>=0){setStartPlayTime(Date.now()-timeInSeconds*1000);}else{setStartPlayTime(Date.now());}}else{setStartPlayTime(Date.now());}}}else{// 再生停止時にアニメーションをクリア\nif(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);animationFrameRef.current=null;}setStartPlayTime(null);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isPlaying,bpm,currentTime]);// startPlayTimeが設定されたときにアニメーションを開始\nuseEffect(()=>{if(isPlaying&&startPlayTime){updatePlayhead();}},[isPlaying,startPlayTime,updatePlayhead]);// BPM変更時のハンドラー\nconst handleBpmChange=useCallback(async newBpm=>{setBpm(newBpm);// 既存のクリップのdurationを新しいBPMで再計算\nconst updatedTracks=await Promise.all(tracks.map(async track=>{const updatedClips=await Promise.all(track.clips.map(async clip=>{if(clip.soundData&&clip.soundData.audioBlob){try{const newDuration=await getAudioDuration(clip.soundData.audioBlob,newBpm);return _objectSpread(_objectSpread({},clip),{},{duration:newDuration});}catch(error){console.warn('クリップのduration更新に失敗:',error);return clip;}}return clip;}));return _objectSpread(_objectSpread({},track),{},{clips:updatedClips});}));setTracks(updatedTracks);},[tracks,getAudioDuration]);// プロジェクト保存機能\nconst saveProject=()=>{try{const projectData={version:'1.0',bpm:bpm,tracks:tracks,sounds:sounds.map(sound=>_objectSpread(_objectSpread({},sound),{},{audioBlob:null,// Blobは別途保存\naudioData:sound.audioData// base64データを保持\n})),timestamp:Date.now(),trackNameCounter:trackNameCounterRef.current,trackIdCounter:trackIdCounterRef.current};const projectJson=JSON.stringify(projectData,null,2);const blob=new Blob([projectJson],{type:'application/json'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=\"music-project-\".concat(new Date().toISOString().slice(0,19).replace(/:/g,'-'),\".json\");document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);console.log('プロジェクトを保存しました');}catch(error){console.error('プロジェクト保存エラー:',error);setError('プロジェクトの保存に失敗しました。');}};// プロジェクト読み込み機能\nconst loadProject=event=>{const file=event.target.files[0];if(!file)return;const reader=new FileReader();reader.onload=e=>{try{const projectData=JSON.parse(e.target.result);// バージョンチェック\nif(!projectData.version){throw new Error('不正なプロジェクトファイルです');}// 音声データ復元用のヘルパー関数\nconst restoreAudioBlob=soundData=>{if(soundData&&soundData.audioData){try{const byteCharacters=atob(soundData.audioData.split(',')[1]);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'audio/wav'});return _objectSpread(_objectSpread({},soundData),{},{audioBlob:blob});}catch(error){console.error('音声データの復元に失敗:',soundData.name||'unknown',error);return soundData;}}return soundData;};// BPMを復元\nsetBpm(projectData.bpm||120);// トラックを復元（クリップ内の音声データも復元）\nif(projectData.tracks){const restoredTracks=projectData.tracks.map(track=>_objectSpread(_objectSpread({},track),{},{clips:track.clips.map(clip=>_objectSpread(_objectSpread({},clip),{},{soundData:restoreAudioBlob(clip.soundData)}))}));setTracks(restoredTracks);console.log('トラックデータを復元しました:',restoredTracks.length,'トラック');}// カウンターを復元\nif(projectData.trackNameCounter){trackNameCounterRef.current=projectData.trackNameCounter;}if(projectData.trackIdCounter){trackIdCounterRef.current=projectData.trackIdCounter;}// 音素材を復元\nif(projectData.sounds){const restoredSounds=projectData.sounds.map(sound=>restoreAudioBlob(sound));setSounds(restoredSounds);console.log('音素材を復元しました:',restoredSounds.length,'個');}console.log('プロジェクトを読み込みました');setError(null);}catch(error){console.error('プロジェクト読み込みエラー:',error);setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');}};reader.readAsText(file);// ファイル選択をリセット\nevent.target.value='';};// 音源出力機能\nconst exportAudio=async()=>{if(!audioContext){setError('AudioContextが初期化されていません。');return;}setIsExporting(true);try{// 全トラックの全クリップの最大終了時間を計算\nlet maxDuration=0;tracks.forEach(track=>{track.clips.forEach(clip=>{const pixelsPerSecond=bpm/60*100;const clipStartTimeInSeconds=clip.startTime/pixelsPerSecond;const clipDurationInSeconds=clip.duration/pixelsPerSecond;const clipEndTime=clipStartTimeInSeconds+clipDurationInSeconds;maxDuration=Math.max(maxDuration,clipEndTime);});});if(maxDuration===0){setError('出力する音声がありません。音素材を配置してください。');setIsExporting(false);return;}// 出力用AudioContextを作成（44.1kHz）\nconst exportContext=new AudioContext({sampleRate:44100});const bufferLength=Math.ceil(maxDuration*exportContext.sampleRate);const outputBuffer=exportContext.createBuffer(2,bufferLength,exportContext.sampleRate);const leftChannel=outputBuffer.getChannelData(0);const rightChannel=outputBuffer.getChannelData(1);// 各トラックの各クリップを処理\nfor(const track of tracks){for(const clip of track.clips){if(clip.soundData&&clip.soundData.audioBlob){try{const arrayBuffer=await clip.soundData.audioBlob.arrayBuffer();const audioBuffer=await exportContext.decodeAudioData(arrayBuffer);const pixelsPerSecond=bpm/60*100;const startTimeInSamples=Math.floor(clip.startTime/pixelsPerSecond*exportContext.sampleRate);// 音声をミックス\nfor(let channel=0;channel<Math.min(audioBuffer.numberOfChannels,2);channel++){const sourceData=audioBuffer.getChannelData(channel);const targetData=channel===0?leftChannel:rightChannel;for(let i=0;i<sourceData.length&&startTimeInSamples+i<targetData.length;i++){targetData[startTimeInSamples+i]+=sourceData[i];}}// モノラル音源の場合は両チャンネルにコピー\nif(audioBuffer.numberOfChannels===1){const sourceData=audioBuffer.getChannelData(0);for(let i=0;i<sourceData.length&&startTimeInSamples+i<rightChannel.length;i++){rightChannel[startTimeInSamples+i]+=sourceData[i];}}}catch(error){console.error('クリップの処理エラー:',error);}}}}// WAVファイルとして出力\nconst wavBlob=audioBufferToWav(outputBuffer);const url=URL.createObjectURL(wavBlob);const link=document.createElement('a');link.href=url;link.download=\"exported-music-\".concat(new Date().toISOString().slice(0,19).replace(/:/g,'-'),\".wav\");document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);console.log('音源を出力しました');await exportContext.close();}catch(error){console.error('音源出力エラー:',error);setError('音源の出力に失敗しました。');}finally{setIsExporting(false);}};// AudioBufferをWAVファイルに変換\nconst audioBufferToWav=buffer=>{const length=buffer.length;const numberOfChannels=buffer.numberOfChannels;const sampleRate=buffer.sampleRate;const bytesPerSample=2;const blockAlign=numberOfChannels*bytesPerSample;const byteRate=sampleRate*blockAlign;const dataSize=length*blockAlign;const bufferSize=44+dataSize;const arrayBuffer=new ArrayBuffer(bufferSize);const view=new DataView(arrayBuffer);// WAVファイルヘッダー\nconst writeString=(offset,string)=>{for(let i=0;i<string.length;i++){view.setUint8(offset+i,string.charCodeAt(i));}};writeString(0,'RIFF');view.setUint32(4,bufferSize-8,true);writeString(8,'WAVE');writeString(12,'fmt ');view.setUint32(16,16,true);view.setUint16(20,1,true);view.setUint16(22,numberOfChannels,true);view.setUint32(24,sampleRate,true);view.setUint32(28,byteRate,true);view.setUint16(32,blockAlign,true);view.setUint16(34,bytesPerSample*8,true);writeString(36,'data');view.setUint32(40,dataSize,true);// 音声データ\nlet offset=44;for(let i=0;i<length;i++){for(let channel=0;channel<numberOfChannels;channel++){const sample=buffer.getChannelData(channel)[i];const intSample=Math.max(-1,Math.min(1,sample))*0x7FFF;view.setInt16(offset,intSample,true);offset+=2;}}return new Blob([arrayBuffer],{type:'audio/wav'});};const addTrack=()=>{// より確実にユニークなIDを生成\ntrackIdCounterRef.current+=1;const uniqueId=Date.now()+trackIdCounterRef.current;// トラック名の番号を増加（削除されても番号は戻らない）\ntrackNameCounterRef.current+=1;const trackName=\"\\u30C8\\u30E9\\u30C3\\u30AF \".concat(trackNameCounterRef.current);const newTrack={id:uniqueId,name:trackName,clips:[]};setTracks(prevTracks=>[...prevTracks,newTrack]);};const removeTrack=trackId=>{setTracks(prevTracks=>{if(prevTracks.length>1){return prevTracks.filter(track=>track.id!==trackId);}return prevTracks;});};const handleDrop=async(e,trackId,timePosition)=>{e.preventDefault();setDragPreview(null);console.log('ドロップ処理開始:',{trackId,timePosition,draggedClip});try{// 8分音符に合わせて位置を調整（50px単位）\nconst snappedPosition=Math.round(timePosition/SUB_BEAT_WIDTH)*SUB_BEAT_WIDTH;// 既存のクリップの移動かどうかチェック\nif(draggedClip){console.log('既存クリップの移動:',draggedClip.id,'元トラック:',draggedClip.originalTrackId,'新トラック:',trackId);// 既存クリップの移動\nconst updatedClip=_objectSpread(_objectSpread({},draggedClip),{},{startTime:snappedPosition,trackId:trackId});setTracks(prevTracks=>prevTracks.map(track=>{if(track.id===draggedClip.originalTrackId&&track.id===trackId){// 同じトラック内での移動\nconsole.log('同じトラック内での移動');return _objectSpread(_objectSpread({},track),{},{clips:track.clips.map(clip=>clip.id===draggedClip.id?updatedClip:clip)});}else if(track.id===draggedClip.originalTrackId){// 元のトラックからクリップを削除\nconsole.log('元のトラックからクリップを削除');return _objectSpread(_objectSpread({},track),{},{clips:track.clips.filter(clip=>clip.id!==draggedClip.id)});}else if(track.id===trackId){// 新しいトラックにクリップを追加\nconsole.log('新しいトラックにクリップを追加');return _objectSpread(_objectSpread({},track),{},{clips:[...track.clips,updatedClip]});}return track;}));setDraggedClip(null);return;}// 新しい音素材の配置\nlet soundData;try{// dataTransferからデータを取得\nconst jsonData=e.dataTransfer?e.dataTransfer.getData('application/json'):'';if(jsonData){soundData=JSON.parse(jsonData);}else{// モバイルの場合はグローバル変数から取得\nsoundData=window.currentDraggedSound;}}catch(error){console.error('ドラッグデータの取得に失敗:',error);soundData=window.currentDraggedSound;// フォールバック\n}if(!soundData){console.error('音素材データが見つかりません');setError('音素材データが見つかりません。再度お試しください。');return;}// グローバル変数からaudioBlobを復元\nif(window.currentDraggedSoundBlob){soundData.audioBlob=window.currentDraggedSoundBlob;window.currentDraggedSoundBlob=null;// クリーンアップ\n}// グローバル変数をクリア\nwindow.currentDraggedSound=null;console.log('新しい音素材のドロップ:',{soundData,hasAudioBlob:!!soundData.audioBlob});// 音声の実際の継続時間を取得（現在のBPMに基づいて）\nlet duration=400;// デフォルト値（1小節）\nif(soundData.audioBlob){try{duration=await getAudioDuration(soundData.audioBlob,bpm);console.log('取得したduration:',duration,'pixels (BPM:',bpm,')');}catch(error){console.warn('音声継続時間の取得に失敗しました:',error);}}// durationが有効な値かチェック\nif(!isFinite(duration)||duration<=0){console.warn('無効なduration:',duration,'デフォルト値を使用');duration=400;// 1小節分\n}const newClip={id:Date.now()+Math.random(),// より確実にユニークなIDを生成\nsoundData:soundData,startTime:snappedPosition,duration:duration,trackId:trackId};console.log('作成されたクリップ:',newClip);console.log('現在のトラック数:',tracks.length);console.log('対象トラックID:',trackId);console.log('対象トラック:',tracks.find(t=>t.id===trackId));// 関数型更新を使用して最新の状態を確実に取得\nsetTracks(prevTracks=>{console.log('更新前のトラック:',prevTracks.find(t=>t.id===trackId));const updatedTracks=prevTracks.map(track=>track.id===trackId?_objectSpread(_objectSpread({},track),{},{clips:[...track.clips,newClip]}):track);console.log('更新後のトラック:',updatedTracks.find(t=>t.id===trackId));return updatedTracks;});}catch(error){console.error('ドロップエラー:',error);setError('音素材の配置に失敗しました。再度お試しください。');}};const handleDragOver=e=>{var _timelineRef$current;e.preventDefault();// ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\nif(draggedClip){e.dataTransfer.dropEffect='move';}else{e.dataTransfer.dropEffect='copy';}// ドラッグプレビューの更新\nconst rect=e.currentTarget.getBoundingClientRect();const timePosition=e.clientX-rect.left;const snappedPosition=Math.round(timePosition/SUB_BEAT_WIDTH)*SUB_BEAT_WIDTH;const trackElement=e.currentTarget;const trackRect=trackElement.getBoundingClientRect();const tracksAreaRect=(_timelineRef$current=timelineRef.current)===null||_timelineRef$current===void 0?void 0:_timelineRef$current.getBoundingClientRect();if(tracksAreaRect){const relativeTop=trackRect.top-tracksAreaRect.top;const trackId=parseInt(trackElement.dataset.trackId);// プレビュー幅を決定\nlet previewWidth=400;// デフォルト値（1小節）\nif(draggedClip){// 既存クリップの場合\npreviewWidth=isFinite(draggedClip.duration)&&draggedClip.duration>0?draggedClip.duration:400;}else{// 新しい音素材の場合、事前に計算された長さを使用\npreviewWidth=draggedSoundDuration;}setDragPreview({left:snappedPosition,top:relativeTop+10,width:previewWidth,trackId:trackId});}};const removeClip=(trackId,clipId)=>{setTracks(prevTracks=>prevTracks.map(track=>track.id===trackId?_objectSpread(_objectSpread({},track),{},{clips:track.clips.filter(clip=>clip.id!==clipId)}):track));};// クリップのドラッグ開始\nconst handleClipDragStart=(clip,originalTrackId)=>{console.log('クリップドラッグ開始:',clip.id,'トラック:',originalTrackId);setDraggedClip(_objectSpread(_objectSpread({},clip),{},{originalTrackId}));};// ドラッグ終了時のクリーンアップ\nconst handleDragEnd=e=>{// ドロップが正常に処理されなかった場合、元の状態を保持\nif(draggedClip&&e.dataTransfer.dropEffect==='none'){console.log('ドラッグがキャンセルされました。元の位置を保持します。');}setDraggedClip(null);setDragPreview(null);setDraggedSoundDuration(400);// リセット\n};const play=async()=>{try{// AudioContextが中断されている場合は再開\nif(audioContext&&audioContext.state==='suspended'){await audioContext.resume();}setIsPlaying(true);// 現在の時間位置に基づいて、再生すべきクリップを見つける\nconst pixelsPerSecond=bpm/60*100;const currentTimeInSeconds=currentTime/pixelsPerSecond;// 各トラックのクリップを再生\nconst newPlayingAudios=new Map();tracks.forEach(track=>{track.clips.forEach(clip=>{// clip.durationが有効な値かチェック\nif(!isFinite(clip.duration)||clip.duration<=0){console.warn('無効なclip.duration:',clip.duration,'クリップをスキップします');return;}const clipStartTimeInSeconds=clip.startTime/pixelsPerSecond;const clipEndTimeInSeconds=clipStartTimeInSeconds+clip.duration/pixelsPerSecond;// 計算結果が有効かチェック\nif(!isFinite(clipStartTimeInSeconds)||!isFinite(clipEndTimeInSeconds)){console.warn('無効な時間計算:',{clipStartTimeInSeconds,clipEndTimeInSeconds});return;}// 現在の時間位置がクリップの範囲内または今後再生される場合\nif(clipEndTimeInSeconds>currentTimeInSeconds){const delay=Math.max(0,clipStartTimeInSeconds-currentTimeInSeconds);if(isFinite(delay)&&delay>=0){scheduleClipPlayback(clip,delay*1000,newPlayingAudios);}}});});setPlayingAudios(newPlayingAudios);}catch(error){console.error('再生エラー:',error);setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');}};const scheduleClipPlayback=(clip,delayMs,playingAudiosMap)=>{var _clip$soundData;console.log('scheduleClipPlayback:',{clip,hasAudioBlob:!!((_clip$soundData=clip.soundData)!==null&&_clip$soundData!==void 0&&_clip$soundData.audioBlob)});if(clip.soundData&&clip.soundData.audioBlob&&clip.soundData.audioBlob instanceof Blob){try{const audio=new Audio();const audioUrl=URL.createObjectURL(clip.soundData.audioBlob);audio.src=audioUrl;const timeoutId=setTimeout(()=>{audio.play().catch(error=>{console.error('音声再生エラー:',error);URL.revokeObjectURL(audioUrl);// メモリリークを防ぐ\n});},delayMs);// 音声終了時にURLを解放\naudio.addEventListener('ended',()=>{URL.revokeObjectURL(audioUrl);});playingAudiosMap.set(clip.id,{audio,timeoutId,audioUrl});}catch(error){console.error('createObjectURL エラー:',error,'audioBlob:',clip.soundData.audioBlob);}}else{var _clip$soundData2,_clip$soundData3,_clip$soundData4,_clip$soundData5,_clip$soundData6;console.warn('audioBlobが無効です。クリップ情報:',{clipId:clip.id,soundDataName:(_clip$soundData2=clip.soundData)===null||_clip$soundData2===void 0?void 0:_clip$soundData2.name,hasAudioData:!!((_clip$soundData3=clip.soundData)!==null&&_clip$soundData3!==void 0&&_clip$soundData3.audioData),hasAudioBlob:!!((_clip$soundData4=clip.soundData)!==null&&_clip$soundData4!==void 0&&_clip$soundData4.audioBlob),audioBlobType:typeof((_clip$soundData5=clip.soundData)===null||_clip$soundData5===void 0?void 0:_clip$soundData5.audioBlob),isInstanceOfBlob:((_clip$soundData6=clip.soundData)===null||_clip$soundData6===void 0?void 0:_clip$soundData6.audioBlob)instanceof Blob});// AudioBlobが無効な場合、audioDataから復元を試行\nif(clip.soundData&&clip.soundData.audioData&&!clip.soundData.audioBlob){console.log('audioDataからBlobを再作成中...');try{const byteCharacters=atob(clip.soundData.audioData.split(',')[1]);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'audio/wav'});// クリップのsoundDataを更新\nclip.soundData.audioBlob=blob;// 再帰的に再試行\nscheduleClipPlayback(clip,delayMs,playingAudiosMap);return;}catch(restoreError){console.error('audioDataからのBlob復元に失敗:',restoreError);}}}};const pause=()=>{setIsPlaying(false);// 再生中の音声を一時停止\nplayingAudios.forEach(_ref=>{let{audio,timeoutId,audioUrl}=_ref;if(timeoutId){clearTimeout(timeoutId);}if(!audio.paused){audio.pause();}// URLを解放\nif(audioUrl){URL.revokeObjectURL(audioUrl);}});};const stop=()=>{setIsPlaying(false);setCurrentTime(0);// 再生中の音声を停止\nplayingAudios.forEach(_ref2=>{let{audio,timeoutId,audioUrl}=_ref2;if(timeoutId){clearTimeout(timeoutId);}audio.pause();audio.currentTime=0;// URLを解放\nif(audioUrl){URL.revokeObjectURL(audioUrl);}});setPlayingAudios(new Map());};return/*#__PURE__*/_jsxs(\"div\",{className:\"daw-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFB9 \\u97F3\\u697D\\u3065\\u304F\\u308A\\u30DA\\u30FC\\u30B8\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u97F3\\u7D20\\u6750\\u3092\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u97F3\\u697D\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u3087\\u3046\\uFF01\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u26A0\\uFE0F \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"daw-controls card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"transport-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"transport-btn play-btn \".concat(isPlaying?'playing':''),onClick:isPlaying?pause:play,children:isPlaying?'⏸️':'▶️'}),/*#__PURE__*/_jsx(\"button\",{className:\"transport-btn stop-btn\",onClick:stop,children:\"\\u23F9\\uFE0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bpm-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bpm\",children:\"\\uD83C\\uDFB5 BPM:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"bpm\",type:\"number\",value:bpm,onChange:e=>handleBpmChange(parseInt(e.target.value)),min:\"60\",max:\"200\",className:\"bpm-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"track-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button-primary\",onClick:addTrack,children:\"\\u2795 \\u30C8\\u30E9\\u30C3\\u30AF\\u8FFD\\u52A0\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button-secondary\",onClick:()=>setShowSoundPanel(!showSoundPanel),children:showSoundPanel?'🎵 音素材を隠す':'🎵 音素材を表示'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"project-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button-secondary\",onClick:saveProject,children:\"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"button-secondary file-input-label\",children:[\"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".json\",onChange:loadProject,style:{display:'none'}})]}),/*#__PURE__*/_jsx(\"button\",{className:\"button-primary\",onClick:exportAudio,disabled:isExporting,children:isExporting?'🔄 出力中...':'🎧 音源出力'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"daw-main-area\",children:[showSoundPanel&&/*#__PURE__*/_jsxs(\"div\",{className:\"sound-panel\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFB5 \\u97F3\\u7D20\\u6750\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sound-list\",children:sounds.length>0?sounds.map(sound=>/*#__PURE__*/_jsx(SoundItem,{sound:sound,onDragStart:async sound=>{// ドラッグ開始時に音声の長さを計算\nif(sound.audioBlob){try{const duration=await getAudioDuration(sound.audioBlob,bpm);setDraggedSoundDuration(duration);}catch(error){console.warn('ドラッグ時の音声長さ計算に失敗:',error);setDraggedSoundDuration(400);}}else{setDraggedSoundDuration(400);}}},sound.id)):/*#__PURE__*/_jsxs(\"div\",{className:\"no-sounds\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u97F3\\u7D20\\u6750\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u97F3\\u3092\\u9332\\u97F3\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"daw-workspace\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"track-headers\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"timeline-header-spacer\",children:\"\\u30BF\\u30A4\\u30E0\\u30E9\\u30A4\\u30F3\"}),tracks.map(track=>/*#__PURE__*/_jsx(TrackHeader,{track:track,onRemove:removeTrack,trackHeight:trackHeight},track.id))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-container\",children:[/*#__PURE__*/_jsx(Timeline,{bpm:bpm}),/*#__PURE__*/_jsxs(\"div\",{className:\"tracks-area\",ref:timelineRef,style:{minWidth:TOTAL_MEASURES*MEASURE_WIDTH},children:[/*#__PURE__*/_jsx(Playhead,{currentTime:currentTime}),dragPreview&&/*#__PURE__*/_jsx(\"div\",{className:\"drag-preview\",style:{left:dragPreview.left,top:dragPreview.top,width:dragPreview.width}}),tracks.map(track=>/*#__PURE__*/_jsx(Track,{track:track,onDrop:handleDrop,onDragOver:handleDragOver,onRemoveClip:removeClip,onClipDragStart:handleClipDragStart,onDragEnd:handleDragEnd,trackHeight:trackHeight,bpm:bpm},track.id))]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCD6 \\u4F7F\\u3044\\u65B9\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDDA5\\uFE0F PC:\"}),\" \\u5DE6\\u5074\\u306E\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u304B\\u3089\\u97F3\\u7D20\\u6750\\u3092\\u30C8\\u30E9\\u30C3\\u30AF\\u306B\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u914D\\u7F6E\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30DB/\\u30BF\\u30D6\\u30EC\\u30C3\\u30C8:\"}),\" \\u97F3\\u7D20\\u6750\\u3092\\u9577\\u62BC\\u3057\\u3057\\u3066\\u304B\\u3089\\u30C8\\u30E9\\u30C3\\u30AF\\u307E\\u3067\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u914D\\u7F6E\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u914D\\u7F6E\\u6E08\\u307F\\u306E\\u97F3\\u7D20\\u6750\\u3082\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u5225\\u306E\\u5834\\u6240\\u306B\\u79FB\\u52D5\\u3067\\u304D\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u914D\\u7F6E\\u4E88\\u5B9A\\u4F4D\\u7F6E\\u306B\\u9752\\u3044\\u5F71\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u97F3\\u7D20\\u6750\\u306F8\\u5206\\u97F3\\u7B26\\uFF08\\u88CF\\u62CD\\u542B\\u3080\\uFF09\\u306B\\u5408\\u308F\\u305B\\u3066\\u81EA\\u52D5\\u7684\\u306B\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u306E\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u500B\\u5225\\u306B\\u97F3\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u518D\\u751F\\u3001\\u23F8\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u4E00\\u6642\\u505C\\u6B62\\u3001\\u23F9\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u505C\\u6B62\"}),/*#__PURE__*/_jsx(\"li\",{children:\"BPM\\u3092\\u5909\\u66F4\\u3057\\u3066\\u97F3\\u697D\\u306E\\u901F\\u3055\\u3092\\u8ABF\\u6574\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u8FFD\\u52A0\\u3057\\u3066\\u8907\\u6570\\u306E\\u97F3\\u3092\\u91CD\\u306D\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58:\"}),\" \\u7DE8\\u96C6\\u4E2D\\u306E\\u30C7\\u30FC\\u30BF\\u3092JSON\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u4FDD\\u5B58\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F:\"}),\" \\u4FDD\\u5B58\\u3057\\u305F\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u7DE8\\u96C6\\u3092\\u518D\\u958B\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFA7 \\u97F3\\u6E90\\u51FA\\u529B:\"}),\" \\u5B8C\\u6210\\u3057\\u305F\\u697D\\u66F2\\u3092WAV\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u51FA\\u529B\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-tips\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30FC\\u30C8\\u30D5\\u30A9\\u30F3\\u5229\\u7528\\u306E\\u30B3\\u30C4\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u97F3\\u7D20\\u6750\\u3092\\u8EFD\\u304F\\u9577\\u62BC\\u3057\\u3059\\u308B\\u3068\\u30C9\\u30E9\\u30C3\\u30B0\\u30E2\\u30FC\\u30C9\\u306B\\u306A\\u308A\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u753B\\u9762\\u304C\\u30B9\\u30AF\\u30ED\\u30FC\\u30EB\\u3057\\u306A\\u3044\\u3088\\u3046\\u5236\\u5FA1\\u3055\\u308C\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u9752\\u304F\\u30CF\\u30A4\\u30E9\\u30A4\\u30C8\\u3055\\u308C\\u305F\\u30C8\\u30E9\\u30C3\\u30AF\\u3067\\u6307\\u3092\\u96E2\\u3059\\u3068\\u97F3\\u7D20\\u6750\\u304C\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u6A2A\\u753B\\u9762\\u8868\\u793A\\u306B\\u3059\\u308B\\u3068\\u3088\\u308A\\u4F7F\\u3044\\u3084\\u3059\\u304F\\u306A\\u308A\\u307E\\u3059\"})]})]})]})]});};const SoundItem=_ref3=>{let{sound,onDragStart}=_ref3;const[isPlaying,setIsPlaying]=useState(false);const[isDragging,setIsDragging]=useState(false);const[touchStart,setTouchStart]=useState(null);const[touchMove,setTouchMove]=useState(null);const handleDragStart=e=>{// audioBlob以外のデータをJSON文字列として設定\nconst soundDataForTransfer=_objectSpread(_objectSpread({},sound),{},{audioBlob:null// Blobは直接シリアライズできないため一時的にnullに\n});e.dataTransfer.setData('application/json',JSON.stringify(soundDataForTransfer));e.dataTransfer.effectAllowed='copy';// 実際のaudioBlobは別途グローバル変数で保持\nwindow.currentDraggedSoundBlob=sound.audioBlob;// 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\nif(onDragStart){onDragStart(sound);}};// タッチイベント対応\nconst handleTouchStart=e=>{const touch=e.touches[0];setTouchStart({x:touch.clientX,y:touch.clientY});setIsDragging(false);// 長押し判定用のタイマー\nsetTimeout(()=>{if(touchStart&&!isDragging){setIsDragging(true);// スクロールを一時的に無効化\ndocument.body.classList.add('dragging');// 親コンポーネントのonDragStart関数を呼び出し\nif(onDragStart){onDragStart(sound);}// グローバル変数に設定\nwindow.currentDraggedSoundBlob=sound.audioBlob;window.currentDraggedSound=sound;}},200);// 200ms長押しで開始\n};const handleTouchMove=e=>{if(!touchStart)return;const touch=e.touches[0];const currentPos={x:touch.clientX,y:touch.clientY};setTouchMove(currentPos);// ドラッグ開始の判定（10px以上移動）\nconst deltaX=Math.abs(currentPos.x-touchStart.x);const deltaY=Math.abs(currentPos.y-touchStart.y);if(!isDragging&&(deltaX>10||deltaY>10)){setIsDragging(true);// 親コンポーネントのonDragStart関数を呼び出し\nif(onDragStart){onDragStart(sound);}// グローバル変数に設定\nwindow.currentDraggedSoundBlob=sound.audioBlob;window.currentDraggedSound=sound;}if(isDragging){// passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n// ドラッグプレビューの位置を更新\nconst dragPreview=document.querySelector('.mobile-drag-preview');if(dragPreview){dragPreview.style.left=\"\".concat(currentPos.x-50,\"px\");dragPreview.style.top=\"\".concat(currentPos.y-20,\"px\");}// ドロップターゲットのハイライト\nconst elementBelow=document.elementFromPoint(currentPos.x,currentPos.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');// 既存のハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// 新しいハイライトを追加\nif(trackElement){trackElement.classList.add('drag-over');}}};const handleTouchEnd=e=>{if(isDragging&&touchMove){// ドロップ処理\nconst elementBelow=document.elementFromPoint(touchMove.x,touchMove.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');if(trackElement){const trackId=parseInt(trackElement.dataset.trackId);const rect=trackElement.getBoundingClientRect();const timePosition=touchMove.x-rect.left;// ドロップイベントを発火\nconst dropEvent=new CustomEvent('mobileDrop',{detail:{trackId,timePosition,sound:sound}});trackElement.dispatchEvent(dropEvent);}}// クリーンアップ\nsetTouchStart(null);setTouchMove(null);setIsDragging(false);document.body.classList.remove('dragging');// ハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// ドラッグプレビューを削除\nconst dragPreview=document.querySelector('.mobile-drag-preview');if(dragPreview){dragPreview.remove();}// グローバル変数をクリア\nwindow.currentDraggedSoundBlob=null;window.currentDraggedSound=null;};const playSound=()=>{if(sound.audioBlob&&!isPlaying&&!isDragging){const audio=new Audio();audio.src=URL.createObjectURL(sound.audioBlob);audio.play().then(()=>{setIsPlaying(true);audio.addEventListener('ended',()=>{setIsPlaying(false);});}).catch(error=>{console.error('音声再生エラー:',error);});}};// ドラッグプレビューを作成\nconst createDragPreview=()=>{if(isDragging&&touchMove){let dragPreview=document.querySelector('.mobile-drag-preview');if(!dragPreview){dragPreview=document.createElement('div');dragPreview.className='mobile-drag-preview';dragPreview.textContent=sound.name;dragPreview.style.cssText=\"\\n          position: fixed;\\n          background: rgba(0, 123, 255, 0.8);\\n          color: white;\\n          padding: 5px 10px;\\n          border-radius: 4px;\\n          font-size: 12px;\\n          pointer-events: none;\\n          z-index: 1000;\\n          left: \".concat(touchMove.x-50,\"px;\\n          top: \").concat(touchMove.y-20,\"px;\\n        \");document.body.appendChild(dragPreview);}}};// ドラッグプレビューの更新\nReact.useEffect(()=>{if(isDragging){createDragPreview();}},[isDragging,touchMove]);return/*#__PURE__*/_jsxs(\"div\",{className:\"sound-item \".concat(isDragging?'dragging':''),draggable:\"true\",onDragStart:handleDragStart,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sound-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:sound.name}),/*#__PURE__*/_jsx(\"div\",{className:\"sound-tags\",children:sound.tags.map((tag,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"sound-tag\",children:tag},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sound-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"play-sound-btn\",onClick:playSound,disabled:isPlaying,children:isPlaying?'⏸️':'▶️'})})]});};const TrackHeader=_ref4=>{let{track,onRemove,trackHeight}=_ref4;return/*#__PURE__*/_jsx(\"div\",{className:\"track-header\",style:{height:trackHeight},children:/*#__PURE__*/_jsxs(\"div\",{className:\"track-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:track.name}),/*#__PURE__*/_jsx(\"div\",{className:\"track-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"remove-track-btn\",onClick:()=>onRemove(track.id),title:\"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u524A\\u9664\",children:\"\\uD83D\\uDDD1\\uFE0F\"})})]})});};const Timeline=_ref5=>{let{bpm}=_ref5;const measures=TOTAL_MEASURES;// 16小節表示\nconst beatsPerMeasure=BEATS_PER_MEASURE;// 4/4拍子\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"timeline\",style:{minWidth:TOTAL_MEASURES*MEASURE_WIDTH},children:Array.from({length:measures},(_,measureIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"measure\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"measure-number\",children:measureIndex+1}),/*#__PURE__*/_jsx(\"div\",{className:\"beats\",children:Array.from({length:beatsPerMeasure},(_,beatIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"beat\",style:{width:BEAT_WIDTH},children:[/*#__PURE__*/_jsx(\"div\",{className:\"beat-main\",children:beatIndex+1}),/*#__PURE__*/_jsx(\"div\",{className:\"beat-sub\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sub-beat-marker\",children:\"\\u30FB\"})})]},beatIndex))})]},measureIndex))});};const Track=_ref6=>{let{track,onDrop,onDragOver,onRemoveClip,onClipDragStart,onDragEnd,trackHeight,bpm}=_ref6;const handleDrop=e=>{const rect=e.currentTarget.getBoundingClientRect();const timePosition=e.clientX-rect.left;onDrop(e,track.id,timePosition);};// モバイルドロップイベントの処理\nconst handleMobileDrop=e=>{const{trackId,timePosition,sound}=e.detail;// 模擬的なドロップイベントを作成\nconst mockDropEvent={preventDefault:()=>{},dataTransfer:{getData:type=>{if(type==='application/json'){return JSON.stringify(sound);}return'';}}};onDrop(mockDropEvent,trackId,timePosition);};// モバイルクリップ移動イベントの処理\nconst handleMobileClipMove=e=>{const{clip,originalTrackId,newTrackId,timePosition}=e.detail;// 模擬的なドロップイベントを作成\nconst mockDropEvent={preventDefault:()=>{},dataTransfer:{getData:type=>{if(type==='text/plain'){return\"existing-clip-\".concat(clip.id);}return'';}}};onDrop(mockDropEvent,newTrackId,timePosition);};React.useEffect(()=>{const trackElement=document.querySelector(\"[data-track-id=\\\"\".concat(track.id,\"\\\"]\"));if(trackElement){trackElement.addEventListener('mobileDrop',handleMobileDrop);trackElement.addEventListener('mobileClipMove',handleMobileClipMove);return()=>{trackElement.removeEventListener('mobileDrop',handleMobileDrop);trackElement.removeEventListener('mobileClipMove',handleMobileClipMove);};}},[track.id]);return/*#__PURE__*/_jsxs(\"div\",{className:\"track\",style:{height:trackHeight},\"data-track-id\":track.id,onDrop:handleDrop,onDragOver:onDragOver,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"track-grid\",children:[Array.from({length:TOTAL_BEATS},(_,index)=>{const isFirstBeat=index===0;const isMeasureStart=index%BEATS_PER_MEASURE===0;const className=\"beat-line beat-line-main \".concat(isFirstBeat?'first-beat':'',\" \").concat(isMeasureStart?'measure-start':'');return/*#__PURE__*/_jsx(\"div\",{className:className,style:{left:index*BEAT_WIDTH}},\"main-\".concat(index));}),Array.from({length:TOTAL_BEATS},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"beat-line beat-line-sub\",style:{left:index*BEAT_WIDTH+SUB_BEAT_WIDTH}},\"sub-\".concat(index)))]}),track.clips.map(clip=>/*#__PURE__*/_jsx(AudioClip,{clip:clip,trackId:track.id,onRemove:()=>onRemoveClip(track.id,clip.id),onDragStart:onClipDragStart,onDragEnd:onDragEnd},clip.id))]});};const AudioClip=_ref7=>{let{clip,trackId,onRemove,onDragStart,onDragEnd}=_ref7;const[waveformData,setWaveformData]=React.useState([]);const[isDragging,setIsDragging]=React.useState(false);const[touchStart,setTouchStart]=React.useState(null);const[touchMove,setTouchMove]=React.useState(null);React.useEffect(()=>{// 簡単な波形データ生成（実際の実装では音声解析が必要）\nconst generateWaveform=()=>{const points=20;// 波形のポイント数\nconst data=[];for(let i=0;i<points;i++){data.push(Math.random()*0.8+0.2);// 0.2-1.0の間のランダム値\n}setWaveformData(data);};generateWaveform();},[clip.soundData]);const handleDragStart=e=>{e.stopPropagation();// イベントバブリングを防ぐ\n// ドラッグデータに既存クリップの情報を設定\ne.dataTransfer.setData('text/plain',\"existing-clip-\".concat(clip.id));e.dataTransfer.effectAllowed='move';// onDragStartコールバックを呼び出し\nonDragStart(clip,trackId);};// タッチイベント対応（クリップの移動）\nconst handleTouchStart=e=>{e.stopPropagation();const touch=e.touches[0];setTouchStart({x:touch.clientX,y:touch.clientY});setIsDragging(false);// ドラッグモードを有効化\ndocument.body.classList.add('dragging');};const handleTouchMove=e=>{if(!touchStart)return;const touch=e.touches[0];const currentPos={x:touch.clientX,y:touch.clientY};setTouchMove(currentPos);// ドラッグ開始の判定（5px以上移動）\nconst deltaX=Math.abs(currentPos.x-touchStart.x);const deltaY=Math.abs(currentPos.y-touchStart.y);if(!isDragging&&(deltaX>5||deltaY>5)){setIsDragging(true);onDragStart(clip,trackId);}if(isDragging){// passiveイベントではpreventDefaultが使えないので、touchActionで制御\n// ドロップターゲットのハイライト\nconst elementBelow=document.elementFromPoint(currentPos.x,currentPos.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');// 既存のハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// 新しいハイライトを追加（自分のトラック以外も含む）\nif(trackElement){trackElement.classList.add('drag-over');}}};const handleTouchEnd=e=>{if(isDragging&&touchMove){// ドロップ処理\nconst elementBelow=document.elementFromPoint(touchMove.x,touchMove.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');if(trackElement){const newTrackId=parseInt(trackElement.dataset.trackId);const rect=trackElement.getBoundingClientRect();const timePosition=touchMove.x-rect.left;// 既存クリップの移動イベントを発火\nconst moveEvent=new CustomEvent('mobileClipMove',{detail:{clip,originalTrackId:trackId,newTrackId,timePosition}});trackElement.dispatchEvent(moveEvent);}}// クリーンアップ\nsetTouchStart(null);setTouchMove(null);setIsDragging(false);document.body.classList.remove('dragging');// ハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});if(onDragEnd){onDragEnd();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"audio-clip \".concat(isDragging?'dragging':''),draggable:\"true\",onDragStart:handleDragStart,onDragEnd:onDragEnd,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,style:{left:clip.startTime,width:isFinite(clip.duration)&&clip.duration>0?clip.duration:400// デフォルト1小節\n},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"clip-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"clip-name\",children:clip.soundData.name}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-clip-btn\",onClick:onRemove,title:\"\\u30AF\\u30EA\\u30C3\\u30D7\\u3092\\u524A\\u9664\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"clip-waveform\",children:waveformData.length>0?/*#__PURE__*/_jsx(\"svg\",{className:\"waveform-svg\",width:\"100%\",height:\"30\",children:waveformData.map((height,index)=>/*#__PURE__*/_jsx(\"rect\",{x:\"\".concat(index/waveformData.length*100,\"%\"),y:\"\".concat((1-height)*15),width:\"\".concat(80/waveformData.length,\"%\"),height:\"\".concat(height*30),fill:\"rgba(255, 255, 255, 0.8)\"},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"waveform-placeholder\",children:\"\\uD83D\\uDD0A\"})})]});};const Playhead=_ref8=>{let{currentTime}=_ref8;// currentTimeが有効な数値かチェック\nconst safeCurrentTime=isFinite(currentTime)&&currentTime>=0?currentTime:0;return/*#__PURE__*/_jsx(\"div\",{className:\"playhead\",style:{left:safeCurrentTime}});};export default DAWPage;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","BEAT_WIDTH","BEATS_PER_MEASURE","MEASURE_WIDTH","SUB_BEAT_WIDTH","TOTAL_MEASURES","TOTAL_BEATS","DAWPage","trackIdCounterRef","trackNameCounterRef","tracks","setTracks","id","Date","now","name","clips","bpm","setBpm","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioContext","setAudioContext","trackHeight","playingAudios","setPlayingAudios","Map","startPlayTime","setStartPlayTime","error","setError","sounds","setSounds","showSoundPanel","setShowSoundPanel","draggedClip","setDraggedClip","dragPreview","setDragPreview","draggedSoundDuration","setDraggedSoundDuration","isExporting","setIsExporting","timelineRef","animationFrameRef","ctx","window","AudioContext","webkitAudioContext","savedSounds","JSON","parse","localStorage","getItem","console","log","length","soundsWithBlob","map","sound","audioData","byteCharacters","atob","split","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","size","_objectSpread","audioBlob","close","current","cancelAnimationFrame","currentDraggedSoundBlob","getAudioDuration","currentBpm","arguments","undefined","Promise","resolve","arrayBuffer","audioBuffer","decodeAudioData","durationInSeconds","duration","isFinite","pixelsPerSecond","widthInPixels","updatePlayhead","animate","elapsed","newCurrentTime","warn","requestAnimationFrame","timeInSeconds","handleBpmChange","newBpm","updatedTracks","all","track","updatedClips","clip","soundData","newDuration","saveProject","projectData","version","timestamp","trackNameCounter","trackIdCounter","projectJson","stringify","url","URL","createObjectURL","link","document","createElement","href","download","concat","toISOString","slice","replace","body","appendChild","click","removeChild","revokeObjectURL","loadProject","event","file","target","files","reader","FileReader","onload","e","result","Error","restoreAudioBlob","restoredTracks","restoredSounds","readAsText","value","exportAudio","maxDuration","forEach","clipStartTimeInSeconds","startTime","clipDurationInSeconds","clipEndTime","Math","max","exportContext","sampleRate","bufferLength","ceil","outputBuffer","createBuffer","leftChannel","getChannelData","rightChannel","startTimeInSamples","floor","channel","min","numberOfChannels","sourceData","targetData","wavBlob","audioBufferToWav","buffer","bytesPerSample","blockAlign","byteRate","dataSize","bufferSize","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","sample","intSample","setInt16","addTrack","uniqueId","trackName","newTrack","prevTracks","removeTrack","trackId","filter","handleDrop","timePosition","preventDefault","snappedPosition","round","originalTrackId","updatedClip","jsonData","dataTransfer","getData","currentDraggedSound","hasAudioBlob","newClip","random","find","t","handleDragOver","_timelineRef$current","dropEffect","rect","currentTarget","getBoundingClientRect","clientX","left","trackElement","trackRect","tracksAreaRect","relativeTop","top","parseInt","dataset","previewWidth","width","removeClip","clipId","handleClipDragStart","handleDragEnd","play","state","resume","currentTimeInSeconds","newPlayingAudios","clipEndTimeInSeconds","delay","scheduleClipPlayback","delayMs","playingAudiosMap","_clip$soundData","audio","Audio","audioUrl","src","timeoutId","setTimeout","catch","addEventListener","set","_clip$soundData2","_clip$soundData3","_clip$soundData4","_clip$soundData5","_clip$soundData6","soundDataName","hasAudioData","audioBlobType","isInstanceOfBlob","restoreError","pause","_ref","clearTimeout","paused","stop","_ref2","className","children","onClick","htmlFor","onChange","accept","style","display","disabled","SoundItem","onDragStart","TrackHeader","onRemove","Timeline","ref","minWidth","Playhead","Track","onDrop","onDragOver","onRemoveClip","onClipDragStart","onDragEnd","_ref3","isDragging","setIsDragging","touchStart","setTouchStart","touchMove","setTouchMove","handleDragStart","soundDataForTransfer","setData","effectAllowed","handleTouchStart","touch","touches","x","y","clientY","classList","add","handleTouchMove","currentPos","deltaX","abs","deltaY","querySelector","elementBelow","elementFromPoint","closest","querySelectorAll","remove","handleTouchEnd","dropEvent","CustomEvent","detail","dispatchEvent","playSound","then","createDragPreview","textContent","cssText","draggable","onTouchStart","onTouchMove","onTouchEnd","tags","tag","index","_ref4","height","title","_ref5","measures","beatsPerMeasure","from","_","measureIndex","beatIndex","_ref6","handleMobileDrop","mockDropEvent","handleMobileClipMove","newTrackId","removeEventListener","isFirstBeat","isMeasureStart","AudioClip","_ref7","waveformData","setWaveformData","generateWaveform","points","data","push","stopPropagation","moveEvent","fill","_ref8","safeCurrentTime"],"sources":["/Users/nakataniyuutomo/Desktop/Programing/ゼミ開発/sound-library2/src/pages/DAWPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\nconst DAWPage = () => {\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n  \n  const [tracks, setTracks] = useState(() => [{ \n    id: Date.now(), \n    name: 'トラック 1', \n    clips: [] \n  }]);\n  const [bpm, setBpm] = useState(120);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n    \n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    console.log('LocalStorageから読み込んだ音素材数:', savedSounds.length);\n    \n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          console.log('音声データ復元中:', sound.name, 'データサイズ:', sound.audioData.length);\n          const byteCharacters = atob(sound.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          console.log('Blob復元成功:', sound.name, 'サイズ:', blob.size, 'タイプ:', blob.type);\n          return { ...sound, audioBlob: blob };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    \n    setSounds(soundsWithBlob);\n    \n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm) => {\n    return new Promise(async (resolve) => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          console.log('AudioContext方式で音声長さを取得中...');\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          \n          console.log('AudioContext方式で取得した長さ:', durationInSeconds, '秒');\n          \n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            const pixelsPerSecond = (currentBpm / 60) * 100;\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            console.log('AudioContext計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm/60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.log('AudioContext方式でエラー:', error);\n        }\n      }\n\n      // AudioContextが失敗した場合はデフォルト値を使用\n      console.log('AudioContextが利用できないため、デフォルト値を使用');\n      resolve(400);\n    });\n  }, [audioContext, bpm]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = (bpm / 60) * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n        \n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n        \n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = (bpm / 60) * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - (timeInSeconds * 1000));\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async (newBpm) => {\n    setBpm(newBpm);\n    \n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration更新に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null, // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current\n      };\n\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('プロジェクトを保存しました');\n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n        \n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = (soundData) => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              return { ...soundData, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n        \n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips.map(clip => ({\n              ...clip,\n              soundData: restoreAudioBlob(clip.soundData)\n            }))\n          }));\n          setTracks(restoredTracks);\n          console.log('トラックデータを復元しました:', restoredTracks.length, 'トラック');\n        }\n        \n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        // 音素材を復元\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n          setSounds(restoredSounds);\n          console.log('音素材を復元しました:', restoredSounds.length, '個');\n        }\n        \n        console.log('プロジェクトを読み込みました');\n        setError(null);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    \n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = (bpm / 60) * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({ sampleRate: 44100 });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      \n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              \n              const pixelsPerSecond = (bpm / 60) * 100;\n              const startTimeInSamples = Math.floor((clip.startTime / pixelsPerSecond) * exportContext.sampleRate);\n              \n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                \n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n              \n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('音源を出力しました');\n      await exportContext.close();\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = (buffer) => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    \n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n    \n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n    \n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    \n    return new Blob([arrayBuffer], { type: 'audio/wav' });\n  };\n\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n    \n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    \n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n\n  const removeTrack = (trackId) => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    \n    console.log('ドロップ処理開始:', { trackId, timePosition, draggedClip });\n    \n    try {\n      // 8分音符に合わせて位置を調整（50px単位）\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      \n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n        \n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => \n                clip.id === draggedClip.id ? updatedClip : clip\n              )\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n      \n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      \n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n      \n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      \n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      \n      console.log('新しい音素材のドロップ:', { soundData, hasAudioBlob: !!soundData.audioBlob });\n      \n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n\n      const newClip = {\n        id: Date.now() + Math.random(), // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n\n      console.log('作成されたクリップ:', newClip);\n      console.log('現在のトラック数:', tracks.length);\n      console.log('対象トラックID:', trackId);\n      console.log('対象トラック:', tracks.find(t => t.id === trackId));\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        console.log('更新前のトラック:', prevTracks.find(t => t.id === trackId));\n        const updatedTracks = prevTracks.map(track => \n          track.id === trackId \n            ? { ...track, clips: [...track.clips, newClip] }\n            : track\n        );\n        console.log('更新後のトラック:', updatedTracks.find(t => t.id === trackId));\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    \n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n    \n    // ドラッグプレビューの更新\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n    \n    const trackElement = e.currentTarget;\n    const trackRect = trackElement.getBoundingClientRect();\n    const tracksAreaRect = timelineRef.current?.getBoundingClientRect();\n    \n    if (tracksAreaRect) {\n      const relativeTop = trackRect.top - tracksAreaRect.top;\n      const trackId = parseInt(trackElement.dataset.trackId);\n      \n      // プレビュー幅を決定\n      let previewWidth = 400; // デフォルト値（1小節）\n      \n      if (draggedClip) {\n        // 既存クリップの場合\n        previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 \n          ? draggedClip.duration \n          : 400;\n      } else {\n        // 新しい音素材の場合、事前に計算された長さを使用\n        previewWidth = draggedSoundDuration;\n      }\n      \n      setDragPreview({\n        left: snappedPosition,\n        top: relativeTop + 10,\n        width: previewWidth,\n        trackId: trackId\n      });\n    }\n  };\n\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => \n      track.id === trackId \n        ? { ...track, clips: track.clips.filter(clip => clip.id !== clipId) }\n        : track\n    ));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({ ...clip, originalTrackId });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = (e) => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400); // リセット\n  };\n\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      setIsPlaying(true);\n      \n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = (bpm / 60) * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n      \n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      \n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          \n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + (clip.duration / pixelsPerSecond);\n          \n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', { clipStartTimeInSeconds, clipEndTimeInSeconds });\n            return;\n          }\n          \n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      \n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    console.log('scheduleClipPlayback:', { clip, hasAudioBlob: !!clip.soundData?.audioBlob });\n    \n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        \n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n        \n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        \n        playingAudiosMap.set(clip.id, { audio, timeoutId, audioUrl });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: clip.soundData?.name,\n        hasAudioData: !!clip.soundData?.audioData,\n        hasAudioBlob: !!clip.soundData?.audioBlob,\n        audioBlobType: typeof clip.soundData?.audioBlob,\n        isInstanceOfBlob: clip.soundData?.audioBlob instanceof Blob\n      });\n      \n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        console.log('audioDataからBlobを再作成中...');\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          \n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n          \n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n    \n    // 再生中の音声を一時停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    \n    // 再生中の音声を停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    \n    setPlayingAudios(new Map());\n  };\n\n  return (\n    <div className=\"daw-page\">\n      <h2>🎹 音楽づくりページ</h2>\n      <p>音素材をドラッグ&ドロップして音楽を作りましょう！</p>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"daw-controls card\">\n        <div className=\"transport-controls\">\n          <button \n            className={`transport-btn play-btn ${isPlaying ? 'playing' : ''}`}\n            onClick={isPlaying ? pause : play}\n          >\n            {isPlaying ? '⏸️' : '▶️'}\n          </button>\n          <button className=\"transport-btn stop-btn\" onClick={stop}>\n            ⏹️\n          </button>\n        </div>\n\n        <div className=\"bpm-control\">\n          <label htmlFor=\"bpm\">🎵 BPM:</label>\n          <input\n            id=\"bpm\"\n            type=\"number\"\n            value={bpm}\n            onChange={(e) => handleBpmChange(parseInt(e.target.value))}\n            min=\"60\"\n            max=\"200\"\n            className=\"bpm-input\"\n          />\n        </div>\n\n        <div className=\"track-controls\">\n          <button className=\"button-primary\" onClick={addTrack}>\n            ➕ トラック追加\n          </button>\n          <button \n            className=\"button-secondary\" \n            onClick={() => setShowSoundPanel(!showSoundPanel)}\n          >\n            {showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'}\n          </button>\n        </div>\n\n        <div className=\"project-controls\">\n          <button className=\"button-secondary\" onClick={saveProject}>\n            💾 プロジェクト保存\n          </button>\n          <label className=\"button-secondary file-input-label\">\n            📁 プロジェクト読み込み\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={loadProject}\n              style={{ display: 'none' }}\n            />\n          </label>\n          <button \n            className=\"button-primary\" \n            onClick={exportAudio}\n            disabled={isExporting}\n          >\n            {isExporting ? '🔄 出力中...' : '🎧 音源出力'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"daw-main-area\">\n        {showSoundPanel && (\n          <div className=\"sound-panel\">\n            <h3>🎵 音素材</h3>\n            <div className=\"sound-list\">\n              {sounds.length > 0 ? (\n                sounds.map(sound => (\n                  <SoundItem \n                    key={sound.id} \n                    sound={sound} \n                    onDragStart={async (sound) => {\n                      // ドラッグ開始時に音声の長さを計算\n                      if (sound.audioBlob) {\n                        try {\n                          const duration = await getAudioDuration(sound.audioBlob, bpm);\n                          setDraggedSoundDuration(duration);\n                        } catch (error) {\n                          console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                          setDraggedSoundDuration(400);\n                        }\n                      } else {\n                        setDraggedSoundDuration(400);\n                      }\n                    }}\n                  />\n                ))\n              ) : (\n                <div className=\"no-sounds\">\n                  <p>音素材がありません</p>\n                  <p>「音あつめ」ページで音を録音してください</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div className=\"daw-workspace\">\n          <div className=\"track-headers\">\n            <div className=\"timeline-header-spacer\">\n              タイムライン\n            </div>\n            {tracks.map(track => (\n              <TrackHeader \n                key={track.id} \n                track={track} \n                onRemove={removeTrack}\n                trackHeight={trackHeight}\n              />\n            ))}\n          </div>\n\n          <div className=\"timeline-container\">\n            <Timeline bpm={bpm} />\n            <div className=\"tracks-area\" ref={timelineRef} style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n              <Playhead currentTime={currentTime} />\n              {dragPreview && (\n                <div \n                  className=\"drag-preview\"\n                  style={{\n                    left: dragPreview.left,\n                    top: dragPreview.top,\n                    width: dragPreview.width\n                  }}\n                />\n              )}\n              {tracks.map(track => (\n                <Track\n                  key={track.id}\n                  track={track}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onRemoveClip={removeClip}\n                  onClipDragStart={handleClipDragStart}\n                  onDragEnd={handleDragEnd}\n                  trackHeight={trackHeight}\n                  bpm={bpm}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"instructions card\">\n        <h3>📖 使い方</h3>\n        <ul>\n          <li><strong>🖥️ PC:</strong> 左側の音素材パネルから音素材をトラックにドラッグ&ドロップして配置</li>\n          <li><strong>📱 スマホ/タブレット:</strong> 音素材を長押ししてからトラックまでドラッグして配置</li>\n          <li>配置済みの音素材もドラッグして別の場所に移動できます</li>\n          <li>ドラッグ中は配置予定位置に青い影が表示されます</li>\n          <li>音素材は8分音符（裏拍含む）に合わせて自動的に配置されます</li>\n          <li>音素材パネルの▶️ボタンで個別に音を確認できます</li>\n          <li>▶️ボタンで再生、⏸️ボタンで一時停止、⏹️ボタンで停止</li>\n          <li>BPMを変更して音楽の速さを調整</li>\n          <li>トラックを追加して複数の音を重ねることができます</li>\n          <li><strong>💾 プロジェクト保存:</strong> 編集中のデータをJSONファイルとして保存</li>\n          <li><strong>📁 プロジェクト読み込み:</strong> 保存したプロジェクトファイルを読み込んで編集を再開</li>\n          <li><strong>🎧 音源出力:</strong> 完成した楽曲をWAVファイルとして出力</li>\n        </ul>\n        <div className=\"mobile-tips\">\n          <h4>📱 スマートフォン利用のコツ</h4>\n          <ul>\n            <li>音素材を軽く長押しするとドラッグモードになります</li>\n            <li>ドラッグ中は画面がスクロールしないよう制御されます</li>\n            <li>青くハイライトされたトラックで指を離すと音素材が配置されます</li>\n            <li>横画面表示にするとより使いやすくなります</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SoundItem = ({ sound, onDragStart }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n\n  const handleDragStart = (e) => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    \n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n    \n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n    \n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = (e) => {\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // 長押し判定用のタイマー\n    setTimeout(() => {\n      if (touchStart && !isDragging) {\n        setIsDragging(true);\n        // スクロールを一時的に無効化\n        document.body.classList.add('dragging');\n        \n        // 親コンポーネントのonDragStart関数を呼び出し\n        if (onDragStart) {\n          onDragStart(sound);\n        }\n        // グローバル変数に設定\n        window.currentDraggedSoundBlob = sound.audioBlob;\n        window.currentDraggedSound = sound;\n      }\n    }, 200); // 200ms長押しで開始\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n      \n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // ドラッグプレビューを削除\n    const dragPreview = document.querySelector('.mobile-drag-preview');\n    if (dragPreview) {\n      dragPreview.remove();\n    }\n    \n    // グローバル変数をクリア\n    window.currentDraggedSoundBlob = null;\n    window.currentDraggedSound = null;\n  };\n\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      const audio = new Audio();\n      audio.src = URL.createObjectURL(sound.audioBlob);\n      audio.play()\n        .then(() => {\n          setIsPlaying(true);\n          audio.addEventListener('ended', () => {\n            setIsPlaying(false);\n          });\n        })\n        .catch(error => {\n          console.error('音声再生エラー:', error);\n        });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = () => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  };\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove]);\n\n  return (\n    <div\n      className={`sound-item ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <div className=\"sound-info\">\n        <h4>{sound.name}</h4>\n        <div className=\"sound-tags\">\n          {sound.tags.map((tag, index) => (\n            <span key={index} className=\"sound-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"sound-actions\">\n        <button \n          className=\"play-sound-btn\"\n          onClick={playSound}\n          disabled={isPlaying}\n        >\n          {isPlaying ? '⏸️' : '▶️'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst TrackHeader = ({ track, onRemove, trackHeight }) => {\n  return (\n    <div className=\"track-header\" style={{ height: trackHeight }}>\n      <div className=\"track-info\">\n        <h4>{track.name}</h4>\n        <div className=\"track-actions\">\n          <button \n            className=\"remove-track-btn\"\n            onClick={() => onRemove(track.id)}\n            title=\"トラックを削除\"\n          >\n            🗑️\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Timeline = ({ bpm }) => {\n  const measures = TOTAL_MEASURES; // 16小節表示\n  const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n  return (\n    <div className=\"timeline\" style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n      {Array.from({ length: measures }, (_, measureIndex) => (\n        <div key={measureIndex} className=\"measure\">\n          <div className=\"measure-number\">{measureIndex + 1}</div>\n          <div className=\"beats\">\n            {Array.from({ length: beatsPerMeasure }, (_, beatIndex) => (\n              <div \n                key={beatIndex} \n                className=\"beat\"\n                style={{ width: BEAT_WIDTH }}\n              >\n                <div className=\"beat-main\">\n                  {beatIndex + 1}\n                </div>\n                <div className=\"beat-sub\">\n                  <div className=\"sub-beat-marker\">・</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Track = ({ track, onDrop, onDragOver, onRemoveClip, onClipDragStart, onDragEnd, trackHeight, bpm }) => {\n  const handleDrop = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = (e) => {\n    const { trackId, timePosition, sound } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, trackId, timePosition);\n  };\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = (e) => {\n    const { clip, originalTrackId, newTrackId, timePosition } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, newTrackId, timePosition);\n  };\n\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n      };\n    }\n  }, [track.id]);\n\n  return (\n    <div \n      className=\"track\"\n      style={{ height: trackHeight }}\n      data-track-id={track.id}\n      onDrop={handleDrop}\n      onDragOver={onDragOver}\n    >\n      <div className=\"track-grid\">\n        {/* 表拍（主要な拍）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => {\n          const isFirstBeat = index === 0;\n          const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n          const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n          return (\n            <div key={`main-${index}`} className={className} style={{ left: index * BEAT_WIDTH }} />\n          );\n        })}\n        {/* 裏拍（8分音符）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => (\n          <div key={`sub-${index}`} className=\"beat-line beat-line-sub\" style={{ left: index * BEAT_WIDTH + SUB_BEAT_WIDTH }} />\n        ))}\n      </div>\n      \n      {track.clips.map(clip => (\n        <AudioClip\n          key={clip.id}\n          clip={clip}\n          trackId={track.id}\n          onRemove={() => onRemoveClip(track.id, clip.id)}\n          onDragStart={onClipDragStart}\n          onDragEnd={onDragEnd}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AudioClip = ({ clip, trackId, onRemove, onDragStart, onDragEnd }) => {\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n\n    generateWaveform();\n  }, [clip.soundData]);\n\n  const handleDragStart = (e) => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n    \n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = (e) => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // ドラッグモードを有効化\n    document.body.classList.add('dragging');\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（5px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 5 || deltaY > 5)) {\n      setIsDragging(true);\n      onDragStart(clip, trackId);\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    if (onDragEnd) {\n      onDragEnd();\n    }\n  };\n\n  return (\n    <div \n      className={`audio-clip ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={onDragEnd}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n      style={{\n        left: clip.startTime,\n        width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n      }}\n    >\n      <div className=\"clip-header\">\n        <span className=\"clip-name\">{clip.soundData.name}</span>\n        <button \n          className=\"remove-clip-btn\"\n          onClick={onRemove}\n          title=\"クリップを削除\"\n        >\n          ×\n        </button>\n      </div>\n      <div className=\"clip-waveform\">\n        {waveformData.length > 0 ? (\n          <svg className=\"waveform-svg\" width=\"100%\" height=\"30\">\n            {waveformData.map((height, index) => (\n              <rect\n                key={index}\n                x={`${(index / waveformData.length) * 100}%`}\n                y={`${(1 - height) * 15}`}\n                width={`${80 / waveformData.length}%`}\n                height={`${height * 30}`}\n                fill=\"rgba(255, 255, 255, 0.8)\"\n              />\n            ))}\n          </svg>\n        ) : (\n          <div className=\"waveform-placeholder\">🔊</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Playhead = ({ currentTime }) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  \n  return (\n    <div \n      className=\"playhead\"\n      style={{ left: safeCurrentTime }}\n    />\n  );\n};\n\nexport default DAWPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}