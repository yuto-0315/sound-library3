{"ast":null,"code":"var _jsxFileName = \"/Users/nakataniyuutomo/Desktop/Programing/\\u30BB\\u3099\\u30DF\\u958B\\u767A/sound-library2/src/pages/DAWPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAWPage = () => {\n  _s();\n  const [tracks, setTracks] = useState([{\n    id: 1,\n    name: 'トラック 1',\n    clips: []\n  }]);\n  const [bpm, setBpm] = useState(120);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n\n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n\n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          const byteCharacters = atob(sound.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n          return {\n            ...sound,\n            audioBlob: blob\n          };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    setSounds(soundsWithBlob);\n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = (audioBlob, currentBpm = bpm) => {\n    return new Promise(resolve => {\n      const audio = new Audio();\n      audio.addEventListener('loadedmetadata', () => {\n        const durationInSeconds = audio.duration;\n        console.log('音声ファイルの実際の長さ:', durationInSeconds, '秒');\n        // 有効な数値かチェック（NaN、Infinity、負の値を除外）\n        if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n          // BPMに基づいてピクセル幅を計算\n          // 1拍 = 100px, 1小節 = 4拍 = 400px\n          // 1秒あたりの拍数 = BPM / 60\n          // 1秒あたりのピクセル数 = (BPM / 60) * 100\n          const pixelsPerSecond = currentBpm / 60 * 100;\n          const widthInPixels = durationInSeconds * pixelsPerSecond;\n          console.log('計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm / 60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n          resolve(widthInPixels);\n        } else {\n          // デフォルト値（1小節 = 400px）\n          console.log('無効な音声長さのためデフォルト値を使用:', durationInSeconds);\n          resolve(400);\n        }\n        // URLを解放してメモリリークを防ぐ\n        URL.revokeObjectURL(audio.src);\n      });\n      audio.addEventListener('error', () => {\n        // エラーの場合はデフォルト値（1小節）\n        resolve(400);\n        // URLを解放してメモリリークを防ぐ\n        URL.revokeObjectURL(audio.src);\n      });\n      audio.src = URL.createObjectURL(audioBlob);\n    });\n  };\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = bpm / 60 * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n\n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n\n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = bpm / 60 * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - timeInSeconds * 1000);\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = async newBpm => {\n    setBpm(newBpm);\n\n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(tracks.map(async track => {\n      const updatedClips = await Promise.all(track.clips.map(async clip => {\n        if (clip.soundData && clip.soundData.audioBlob) {\n          try {\n            const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n            return {\n              ...clip,\n              duration: newDuration\n            };\n          } catch (error) {\n            console.warn('クリップのduration更新に失敗:', error);\n            return clip;\n          }\n        }\n        return clip;\n      }));\n      return {\n        ...track,\n        clips: updatedClips\n      };\n    }));\n    setTracks(updatedTracks);\n  };\n  const addTrack = () => {\n    const newTrack = {\n      id: tracks.length + 1,\n      name: `トラック ${tracks.length + 1}`,\n      clips: []\n    };\n    setTracks([...tracks, newTrack]);\n  };\n  const removeTrack = trackId => {\n    if (tracks.length > 1) {\n      setTracks(tracks.filter(track => track.id !== trackId));\n    }\n  };\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    console.log('ドロップ処理開始:', {\n      trackId,\n      timePosition,\n      draggedClip\n    });\n    try {\n      // 拍に合わせて位置を調整\n      const beatWidth = 100; // 1拍の幅（px）\n      const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n\n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n\n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n        setTracks(tracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => clip.id === draggedClip.id ? updatedClip : clip)\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n\n      // 新しい音素材の配置\n      const soundData = JSON.parse(e.dataTransfer.getData('application/json'));\n\n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      console.log('新しい音素材のドロップ:', {\n        soundData,\n        hasAudioBlob: !!soundData.audioBlob\n      });\n\n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n      const newClip = {\n        id: Date.now(),\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n      console.log('作成されたクリップ:', newClip);\n      setTracks(tracks.map(track => track.id === trackId ? {\n        ...track,\n        clips: [...track.clips, newClip]\n      } : track));\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n  const handleDragOver = e => {\n    var _timelineRef$current;\n    e.preventDefault();\n\n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n\n    // ドラッグプレビューの更新\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    const beatWidth = 100;\n    const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n    const trackElement = e.currentTarget;\n    const trackRect = trackElement.getBoundingClientRect();\n    const tracksAreaRect = (_timelineRef$current = timelineRef.current) === null || _timelineRef$current === void 0 ? void 0 : _timelineRef$current.getBoundingClientRect();\n    if (tracksAreaRect) {\n      const relativeTop = trackRect.top - tracksAreaRect.top;\n      const trackId = parseInt(trackElement.dataset.trackId);\n\n      // プレビュー幅を決定\n      let previewWidth = 400; // デフォルト値（1小節）\n\n      if (draggedClip) {\n        // 既存クリップの場合\n        previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 ? draggedClip.duration : 400;\n      } else {\n        // 新しい音素材の場合、概算のサイズを表示（実際のサイズは配置後に決定）\n        previewWidth = 400; // 1小節分として表示\n      }\n      setDragPreview({\n        left: snappedPosition,\n        top: relativeTop + 10,\n        width: previewWidth,\n        trackId: trackId\n      });\n    }\n  };\n  const removeClip = (trackId, clipId) => {\n    setTracks(tracks.map(track => track.id === trackId ? {\n      ...track,\n      clips: track.clips.filter(clip => clip.id !== clipId)\n    } : track));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({\n      ...clip,\n      originalTrackId\n    });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = e => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n  };\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      setIsPlaying(true);\n\n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = bpm / 60 * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n\n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + clip.duration / pixelsPerSecond;\n\n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', {\n              clipStartTimeInSeconds,\n              clipEndTimeInSeconds\n            });\n            return;\n          }\n\n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    var _clip$soundData;\n    console.log('scheduleClipPlayback:', {\n      clip,\n      hasAudioBlob: !!((_clip$soundData = clip.soundData) !== null && _clip$soundData !== void 0 && _clip$soundData.audioBlob)\n    });\n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n\n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        playingAudiosMap.set(clip.id, {\n          audio,\n          timeoutId,\n          audioUrl\n        });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です:', clip.soundData);\n    }\n  };\n  const pause = () => {\n    setIsPlaying(false);\n\n    // 再生中の音声を一時停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n\n    // 再生中の音声を停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    setPlayingAudios(new Map());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daw-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB9 \\u97F3\\u697D\\u3065\\u304F\\u308A\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u97F3\\u7D20\\u6750\\u3092\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u97F3\\u697D\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u3087\\u3046\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-controls card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transport-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `transport-btn play-btn ${isPlaying ? 'playing' : ''}`,\n          onClick: isPlaying ? pause : play,\n          children: isPlaying ? '⏸️' : '▶️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transport-btn stop-btn\",\n          onClick: stop,\n          children: \"\\u23F9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpm-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bpm\",\n          children: \"\\uD83C\\uDFB5 BPM:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bpm\",\n          type: \"number\",\n          value: bpm,\n          onChange: e => handleBpmChange(parseInt(e.target.value)),\n          min: \"60\",\n          max: \"200\",\n          className: \"bpm-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: addTrack,\n          children: \"\\u2795 \\u30C8\\u30E9\\u30C3\\u30AF\\u8FFD\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: () => setShowSoundPanel(!showSoundPanel),\n          children: showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-main-area\",\n      children: [showSoundPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDFB5 \\u97F3\\u7D20\\u6750\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-list\",\n          children: sounds.length > 0 ? sounds.map(sound => /*#__PURE__*/_jsxDEV(SoundItem, {\n            sound: sound\n          }, sound.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sounds\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u97F3\\u7D20\\u6750\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u300C\\u97F3\\u3092\\u96C6\\u3081\\u308B\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u97F3\\u3092\\u9332\\u97F3\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daw-workspace\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-headers\",\n          children: tracks.map(track => /*#__PURE__*/_jsxDEV(TrackHeader, {\n            track: track,\n            onRemove: removeTrack,\n            trackHeight: trackHeight\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(Timeline, {\n            bpm: bpm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tracks-area\",\n            ref: timelineRef,\n            children: [/*#__PURE__*/_jsxDEV(Playhead, {\n              currentTime: currentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this), dragPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drag-preview\",\n              style: {\n                left: dragPreview.left,\n                top: dragPreview.top,\n                width: dragPreview.width\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n              track: track,\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onRemoveClip: removeClip,\n              onClipDragStart: handleClipDragStart,\n              onDragEnd: handleDragEnd,\n              trackHeight: trackHeight,\n              bpm: bpm\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCD6 \\u4F7F\\u3044\\u65B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u5DE6\\u5074\\u306E\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u304B\\u3089\\u97F3\\u7D20\\u6750\\u3092\\u30C8\\u30E9\\u30C3\\u30AF\\u306B\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u914D\\u7F6E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u914D\\u7F6E\\u6E08\\u307F\\u306E\\u97F3\\u7D20\\u6750\\u3082\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u5225\\u306E\\u5834\\u6240\\u306B\\u79FB\\u52D5\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u914D\\u7F6E\\u4E88\\u5B9A\\u4F4D\\u7F6E\\u306B\\u9752\\u3044\\u5F71\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u306F\\u62CD\\u306B\\u5408\\u308F\\u305B\\u3066\\u81EA\\u52D5\\u7684\\u306B\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u306E\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u500B\\u5225\\u306B\\u97F3\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u518D\\u751F\\u3001\\u23F8\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u4E00\\u6642\\u505C\\u6B62\\u3001\\u23F9\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u505C\\u6B62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"BPM\\u3092\\u5909\\u66F4\\u3057\\u3066\\u97F3\\u697D\\u306E\\u901F\\u3055\\u3092\\u8ABF\\u6574\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u8FFD\\u52A0\\u3057\\u3066\\u8907\\u6570\\u306E\\u97F3\\u3092\\u91CD\\u306D\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 492,\n    columnNumber: 5\n  }, this);\n};\n_s(DAWPage, \"N1eC5PNpinduC8uHwDd3HD4ELUc=\");\n_c = DAWPage;\nconst SoundItem = ({\n  sound\n}) => {\n  _s2();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handleDragStart = e => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n\n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n  };\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying) {\n      const audio = new Audio();\n      audio.src = URL.createObjectURL(sound.audioBlob);\n      audio.play().then(() => {\n        setIsPlaying(true);\n        audio.addEventListener('ended', () => {\n          setIsPlaying(false);\n        });\n      }).catch(error => {\n        console.error('音声再生エラー:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sound-item\",\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: sound.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-tags\",\n        children: sound.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-tag\",\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-sound-btn\",\n        onClick: playSound,\n        disabled: isPlaying,\n        children: isPlaying ? '⏸️' : '▶️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 657,\n    columnNumber: 5\n  }, this);\n};\n_s2(SoundItem, \"dxr5RgzQJlMZkbQdHY9iHZ+FF0w=\");\n_c2 = SoundItem;\nconst TrackHeader = ({\n  track,\n  onRemove,\n  trackHeight\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track-header\",\n    style: {\n      height: trackHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-track-btn\",\n          onClick: () => onRemove(track.id),\n          title: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u524A\\u9664\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 685,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TrackHeader;\nconst Timeline = ({\n  bpm\n}) => {\n  const measures = 16; // 16小節表示\n  const beatsPerMeasure = 4; // 4/4拍子\n  const beatWidth = 100; // 1拍の幅\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    children: Array.from({\n      length: measures\n    }, (_, measureIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"measure\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measure-number\",\n        children: measureIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beats\",\n        children: Array.from({\n          length: beatsPerMeasure\n        }, (_, beatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"beat\",\n          style: {\n            width: beatWidth\n          },\n          children: beatIndex + 1\n        }, beatIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 11\n      }, this)]\n    }, measureIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 708,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Timeline;\nconst Track = ({\n  track,\n  onDrop,\n  onDragOver,\n  onRemoveClip,\n  onClipDragStart,\n  onDragEnd,\n  trackHeight,\n  bpm\n}) => {\n  const handleDrop = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track\",\n    style: {\n      height: trackHeight\n    },\n    \"data-track-id\": track.id,\n    onDrop: handleDrop,\n    onDragOver: onDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-grid\",\n      children: Array.from({\n        length: 64\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beat-line\",\n        style: {\n          left: index * 100\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }, this), track.clips.map(clip => /*#__PURE__*/_jsxDEV(AudioClip, {\n      clip: clip,\n      trackId: track.id,\n      onRemove: () => onRemoveClip(track.id, clip.id),\n      onDragStart: onClipDragStart,\n      onDragEnd: onDragEnd\n    }, clip.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 737,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Track;\nconst AudioClip = ({\n  clip,\n  trackId,\n  onRemove,\n  onDragStart,\n  onDragEnd\n}) => {\n  _s3();\n  const [waveformData, setWaveformData] = React.useState([]);\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n    generateWaveform();\n  }, [clip.soundData]);\n  const handleDragStart = e => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n\n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-clip\",\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onDragEnd: onDragEnd,\n    style: {\n      left: clip.startTime,\n      width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clip-name\",\n        children: clip.soundData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-clip-btn\",\n        onClick: onRemove,\n        title: \"\\u30AF\\u30EA\\u30C3\\u30D7\\u3092\\u524A\\u9664\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-waveform\",\n      children: waveformData.length > 0 ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"waveform-svg\",\n        width: \"100%\",\n        height: \"30\",\n        children: waveformData.map((height, index) => /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: `${index / waveformData.length * 100}%`,\n          y: `${(1 - height) * 15}`,\n          width: `${80 / waveformData.length}%`,\n          height: `${height * 30}`,\n          fill: \"rgba(255, 255, 255, 0.8)\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform-placeholder\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 794,\n    columnNumber: 5\n  }, this);\n};\n_s3(AudioClip, \"VRSTty1v2EawVvG4In91JJSTL8A=\");\n_c6 = AudioClip;\nconst Playhead = ({\n  currentTime\n}) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playhead\",\n    style: {\n      left: safeCurrentTime\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 841,\n    columnNumber: 5\n  }, this);\n};\n_c7 = Playhead;\nexport default DAWPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DAWPage\");\n$RefreshReg$(_c2, \"SoundItem\");\n$RefreshReg$(_c3, \"TrackHeader\");\n$RefreshReg$(_c4, \"Timeline\");\n$RefreshReg$(_c5, \"Track\");\n$RefreshReg$(_c6, \"AudioClip\");\n$RefreshReg$(_c7, \"Playhead\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","DAWPage","_s","tracks","setTracks","id","name","clips","bpm","setBpm","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioContext","setAudioContext","trackHeight","playingAudios","setPlayingAudios","Map","startPlayTime","setStartPlayTime","error","setError","sounds","setSounds","showSoundPanel","setShowSoundPanel","draggedClip","setDraggedClip","dragPreview","setDragPreview","timelineRef","animationFrameRef","ctx","window","AudioContext","webkitAudioContext","savedSounds","JSON","parse","localStorage","getItem","soundsWithBlob","map","sound","audioData","byteCharacters","atob","split","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","audioBlob","console","close","current","cancelAnimationFrame","currentDraggedSoundBlob","getAudioDuration","currentBpm","Promise","resolve","audio","Audio","addEventListener","durationInSeconds","duration","log","isFinite","pixelsPerSecond","widthInPixels","URL","revokeObjectURL","src","createObjectURL","updatePlayhead","animate","elapsed","Date","now","newCurrentTime","warn","requestAnimationFrame","timeInSeconds","handleBpmChange","newBpm","updatedTracks","all","track","updatedClips","clip","soundData","newDuration","addTrack","newTrack","removeTrack","trackId","filter","handleDrop","e","timePosition","preventDefault","beatWidth","snappedPosition","Math","round","originalTrackId","updatedClip","startTime","dataTransfer","getData","hasAudioBlob","newClip","handleDragOver","_timelineRef$current","dropEffect","rect","currentTarget","getBoundingClientRect","clientX","left","trackElement","trackRect","tracksAreaRect","relativeTop","top","parseInt","dataset","previewWidth","width","removeClip","clipId","handleClipDragStart","handleDragEnd","play","state","resume","currentTimeInSeconds","newPlayingAudios","forEach","clipStartTimeInSeconds","clipEndTimeInSeconds","delay","max","scheduleClipPlayback","delayMs","playingAudiosMap","_clip$soundData","audioUrl","timeoutId","setTimeout","catch","set","pause","clearTimeout","paused","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","value","onChange","target","min","SoundItem","TrackHeader","onRemove","Timeline","ref","Playhead","style","Track","onDrop","onDragOver","onRemoveClip","onClipDragStart","onDragEnd","_c","_s2","handleDragStart","soundDataForTransfer","setData","stringify","effectAllowed","playSound","then","draggable","onDragStart","tags","tag","index","disabled","_c2","height","title","_c3","measures","beatsPerMeasure","from","_","measureIndex","beatIndex","_c4","AudioClip","_c5","_s3","waveformData","setWaveformData","generateWaveform","points","data","push","random","stopPropagation","x","y","fill","_c6","safeCurrentTime","_c7","$RefreshReg$"],"sources":["/Users/nakataniyuutomo/Desktop/Programing/ゼミ開発/sound-library2/src/pages/DAWPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\nconst DAWPage = () => {\n  const [tracks, setTracks] = useState([{ id: 1, name: 'トラック 1', clips: [] }]);\n  const [bpm, setBpm] = useState(120);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n    \n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    \n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          const byteCharacters = atob(sound.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          return { ...sound, audioBlob: blob };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    \n    setSounds(soundsWithBlob);\n    \n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = (audioBlob, currentBpm = bpm) => {\n    return new Promise((resolve) => {\n      const audio = new Audio();\n      audio.addEventListener('loadedmetadata', () => {\n        const durationInSeconds = audio.duration;\n        console.log('音声ファイルの実際の長さ:', durationInSeconds, '秒');\n        // 有効な数値かチェック（NaN、Infinity、負の値を除外）\n        if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n          // BPMに基づいてピクセル幅を計算\n          // 1拍 = 100px, 1小節 = 4拍 = 400px\n          // 1秒あたりの拍数 = BPM / 60\n          // 1秒あたりのピクセル数 = (BPM / 60) * 100\n          const pixelsPerSecond = (currentBpm / 60) * 100;\n          const widthInPixels = durationInSeconds * pixelsPerSecond;\n          console.log('計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm/60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n          resolve(widthInPixels);\n        } else {\n          // デフォルト値（1小節 = 400px）\n          console.log('無効な音声長さのためデフォルト値を使用:', durationInSeconds);\n          resolve(400);\n        }\n        // URLを解放してメモリリークを防ぐ\n        URL.revokeObjectURL(audio.src);\n      });\n      audio.addEventListener('error', () => {\n        // エラーの場合はデフォルト値（1小節）\n        resolve(400);\n        // URLを解放してメモリリークを防ぐ\n        URL.revokeObjectURL(audio.src);\n      });\n      audio.src = URL.createObjectURL(audioBlob);\n    });\n  };\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = (bpm / 60) * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n        \n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n        \n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = (bpm / 60) * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - (timeInSeconds * 1000));\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = async (newBpm) => {\n    setBpm(newBpm);\n    \n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration更新に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  };\n\n  const addTrack = () => {\n    const newTrack = {\n      id: tracks.length + 1,\n      name: `トラック ${tracks.length + 1}`,\n      clips: []\n    };\n    setTracks([...tracks, newTrack]);\n  };\n\n  const removeTrack = (trackId) => {\n    if (tracks.length > 1) {\n      setTracks(tracks.filter(track => track.id !== trackId));\n    }\n  };\n\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    \n    console.log('ドロップ処理開始:', { trackId, timePosition, draggedClip });\n    \n    try {\n      // 拍に合わせて位置を調整\n      const beatWidth = 100; // 1拍の幅（px）\n      const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n      \n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n        \n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n\n        setTracks(tracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => \n                clip.id === draggedClip.id ? updatedClip : clip\n              )\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n      \n      // 新しい音素材の配置\n      const soundData = JSON.parse(e.dataTransfer.getData('application/json'));\n      \n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      \n      console.log('新しい音素材のドロップ:', { soundData, hasAudioBlob: !!soundData.audioBlob });\n      \n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n\n      const newClip = {\n        id: Date.now(),\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n\n      console.log('作成されたクリップ:', newClip);\n\n      setTracks(tracks.map(track => \n        track.id === trackId \n          ? { ...track, clips: [...track.clips, newClip] }\n          : track\n      ));\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    \n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n    \n    // ドラッグプレビューの更新\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    const beatWidth = 100;\n    const snappedPosition = Math.round(timePosition / beatWidth) * beatWidth;\n    \n    const trackElement = e.currentTarget;\n    const trackRect = trackElement.getBoundingClientRect();\n    const tracksAreaRect = timelineRef.current?.getBoundingClientRect();\n    \n    if (tracksAreaRect) {\n      const relativeTop = trackRect.top - tracksAreaRect.top;\n      const trackId = parseInt(trackElement.dataset.trackId);\n      \n      // プレビュー幅を決定\n      let previewWidth = 400; // デフォルト値（1小節）\n      \n      if (draggedClip) {\n        // 既存クリップの場合\n        previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 \n          ? draggedClip.duration \n          : 400;\n      } else {\n        // 新しい音素材の場合、概算のサイズを表示（実際のサイズは配置後に決定）\n        previewWidth = 400; // 1小節分として表示\n      }\n      \n      setDragPreview({\n        left: snappedPosition,\n        top: relativeTop + 10,\n        width: previewWidth,\n        trackId: trackId\n      });\n    }\n  };\n\n  const removeClip = (trackId, clipId) => {\n    setTracks(tracks.map(track => \n      track.id === trackId \n        ? { ...track, clips: track.clips.filter(clip => clip.id !== clipId) }\n        : track\n    ));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({ ...clip, originalTrackId });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = (e) => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n  };\n\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      setIsPlaying(true);\n      \n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = (bpm / 60) * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n      \n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      \n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          \n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + (clip.duration / pixelsPerSecond);\n          \n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', { clipStartTimeInSeconds, clipEndTimeInSeconds });\n            return;\n          }\n          \n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      \n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    console.log('scheduleClipPlayback:', { clip, hasAudioBlob: !!clip.soundData?.audioBlob });\n    \n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        \n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n        \n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        \n        playingAudiosMap.set(clip.id, { audio, timeoutId, audioUrl });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です:', clip.soundData);\n    }\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n    \n    // 再生中の音声を一時停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    \n    // 再生中の音声を停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    \n    setPlayingAudios(new Map());\n  };\n\n  return (\n    <div className=\"daw-page\">\n      <h2>🎹 音楽づくりページ</h2>\n      <p>音素材をドラッグ&ドロップして音楽を作りましょう！</p>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"daw-controls card\">\n        <div className=\"transport-controls\">\n          <button \n            className={`transport-btn play-btn ${isPlaying ? 'playing' : ''}`}\n            onClick={isPlaying ? pause : play}\n          >\n            {isPlaying ? '⏸️' : '▶️'}\n          </button>\n          <button className=\"transport-btn stop-btn\" onClick={stop}>\n            ⏹️\n          </button>\n        </div>\n\n        <div className=\"bpm-control\">\n          <label htmlFor=\"bpm\">🎵 BPM:</label>\n          <input\n            id=\"bpm\"\n            type=\"number\"\n            value={bpm}\n            onChange={(e) => handleBpmChange(parseInt(e.target.value))}\n            min=\"60\"\n            max=\"200\"\n            className=\"bpm-input\"\n          />\n        </div>\n\n        <div className=\"track-controls\">\n          <button className=\"button-primary\" onClick={addTrack}>\n            ➕ トラック追加\n          </button>\n          <button \n            className=\"button-secondary\" \n            onClick={() => setShowSoundPanel(!showSoundPanel)}\n          >\n            {showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"daw-main-area\">\n        {showSoundPanel && (\n          <div className=\"sound-panel\">\n            <h3>🎵 音素材</h3>\n            <div className=\"sound-list\">\n              {sounds.length > 0 ? (\n                sounds.map(sound => (\n                  <SoundItem key={sound.id} sound={sound} />\n                ))\n              ) : (\n                <div className=\"no-sounds\">\n                  <p>音素材がありません</p>\n                  <p>「音を集める」ページで音を録音してください</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div className=\"daw-workspace\">\n          <div className=\"track-headers\">\n            {tracks.map(track => (\n              <TrackHeader \n                key={track.id} \n                track={track} \n                onRemove={removeTrack}\n                trackHeight={trackHeight}\n              />\n            ))}\n          </div>\n\n          <div className=\"timeline-container\">\n            <Timeline bpm={bpm} />\n            <div className=\"tracks-area\" ref={timelineRef}>\n              <Playhead currentTime={currentTime} />\n              {dragPreview && (\n                <div \n                  className=\"drag-preview\"\n                  style={{\n                    left: dragPreview.left,\n                    top: dragPreview.top,\n                    width: dragPreview.width\n                  }}\n                />\n              )}\n              {tracks.map(track => (\n                <Track\n                  key={track.id}\n                  track={track}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onRemoveClip={removeClip}\n                  onClipDragStart={handleClipDragStart}\n                  onDragEnd={handleDragEnd}\n                  trackHeight={trackHeight}\n                  bpm={bpm}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"instructions card\">\n        <h3>📖 使い方</h3>\n        <ul>\n          <li>左側の音素材パネルから音素材をトラックにドラッグ&ドロップして配置</li>\n          <li>配置済みの音素材もドラッグして別の場所に移動できます</li>\n          <li>ドラッグ中は配置予定位置に青い影が表示されます</li>\n          <li>音素材は拍に合わせて自動的に配置されます</li>\n          <li>音素材パネルの▶️ボタンで個別に音を確認できます</li>\n          <li>▶️ボタンで再生、⏸️ボタンで一時停止、⏹️ボタンで停止</li>\n          <li>BPMを変更して音楽の速さを調整</li>\n          <li>トラックを追加して複数の音を重ねることができます</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst SoundItem = ({ sound }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const handleDragStart = (e) => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    \n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n    \n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n  };\n\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying) {\n      const audio = new Audio();\n      audio.src = URL.createObjectURL(sound.audioBlob);\n      audio.play()\n        .then(() => {\n          setIsPlaying(true);\n          audio.addEventListener('ended', () => {\n            setIsPlaying(false);\n          });\n        })\n        .catch(error => {\n          console.error('音声再生エラー:', error);\n        });\n    }\n  };\n\n  return (\n    <div\n      className=\"sound-item\"\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n    >\n      <div className=\"sound-info\">\n        <h4>{sound.name}</h4>\n        <div className=\"sound-tags\">\n          {sound.tags.map((tag, index) => (\n            <span key={index} className=\"sound-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"sound-actions\">\n        <button \n          className=\"play-sound-btn\"\n          onClick={playSound}\n          disabled={isPlaying}\n        >\n          {isPlaying ? '⏸️' : '▶️'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst TrackHeader = ({ track, onRemove, trackHeight }) => {\n  return (\n    <div className=\"track-header\" style={{ height: trackHeight }}>\n      <div className=\"track-info\">\n        <h4>{track.name}</h4>\n        <div className=\"track-actions\">\n          <button \n            className=\"remove-track-btn\"\n            onClick={() => onRemove(track.id)}\n            title=\"トラックを削除\"\n          >\n            🗑️\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Timeline = ({ bpm }) => {\n  const measures = 16; // 16小節表示\n  const beatsPerMeasure = 4; // 4/4拍子\n  const beatWidth = 100; // 1拍の幅\n\n  return (\n    <div className=\"timeline\">\n      {Array.from({ length: measures }, (_, measureIndex) => (\n        <div key={measureIndex} className=\"measure\">\n          <div className=\"measure-number\">{measureIndex + 1}</div>\n          <div className=\"beats\">\n            {Array.from({ length: beatsPerMeasure }, (_, beatIndex) => (\n              <div \n                key={beatIndex} \n                className=\"beat\"\n                style={{ width: beatWidth }}\n              >\n                {beatIndex + 1}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Track = ({ track, onDrop, onDragOver, onRemoveClip, onClipDragStart, onDragEnd, trackHeight, bpm }) => {\n  const handleDrop = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  return (\n    <div \n      className=\"track\"\n      style={{ height: trackHeight }}\n      data-track-id={track.id}\n      onDrop={handleDrop}\n      onDragOver={onDragOver}\n    >\n      <div className=\"track-grid\">\n        {/* 拍の境界線を表示 */}\n        {Array.from({ length: 64 }, (_, index) => (\n          <div key={index} className=\"beat-line\" style={{ left: index * 100 }} />\n        ))}\n      </div>\n      \n      {track.clips.map(clip => (\n        <AudioClip\n          key={clip.id}\n          clip={clip}\n          trackId={track.id}\n          onRemove={() => onRemoveClip(track.id, clip.id)}\n          onDragStart={onClipDragStart}\n          onDragEnd={onDragEnd}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AudioClip = ({ clip, trackId, onRemove, onDragStart, onDragEnd }) => {\n  const [waveformData, setWaveformData] = React.useState([]);\n\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n\n    generateWaveform();\n  }, [clip.soundData]);\n\n  const handleDragStart = (e) => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n    \n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  return (\n    <div \n      className=\"audio-clip\"\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={onDragEnd}\n      style={{\n        left: clip.startTime,\n        width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n      }}\n    >\n      <div className=\"clip-header\">\n        <span className=\"clip-name\">{clip.soundData.name}</span>\n        <button \n          className=\"remove-clip-btn\"\n          onClick={onRemove}\n          title=\"クリップを削除\"\n        >\n          ×\n        </button>\n      </div>\n      <div className=\"clip-waveform\">\n        {waveformData.length > 0 ? (\n          <svg className=\"waveform-svg\" width=\"100%\" height=\"30\">\n            {waveformData.map((height, index) => (\n              <rect\n                key={index}\n                x={`${(index / waveformData.length) * 100}%`}\n                y={`${(1 - height) * 15}`}\n                width={`${80 / waveformData.length}%`}\n                height={`${height * 30}`}\n                fill=\"rgba(255, 255, 255, 0.8)\"\n              />\n            ))}\n          </svg>\n        ) : (\n          <div className=\"waveform-placeholder\">🔊</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Playhead = ({ currentTime }) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  \n  return (\n    <div \n      className=\"playhead\"\n      style={{ left: safeCurrentTime }}\n    />\n  );\n};\n\nexport default DAWPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}