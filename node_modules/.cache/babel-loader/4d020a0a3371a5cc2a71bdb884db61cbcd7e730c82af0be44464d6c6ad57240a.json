{"ast":null,"code":"var _jsxFileName = \"/Users/nakataniyuutomo/Desktop/Programing/\\u30BB\\u3099\\u30DF\\u958B\\u767A/sound-library2/src/pages/DAWPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\nconst DAWPage = () => {\n  _s();\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n\n  // LocalStorageからの自動復元機能\n  const loadAutoSavedProject = () => {\n    try {\n      const autoSavedData = localStorage.getItem('dawProjectAutoSave');\n      if (autoSavedData) {\n        const projectData = JSON.parse(autoSavedData);\n        console.log('自動保存データを復元中...', projectData);\n\n        // トラックカウンターの復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        return {\n          tracks: projectData.tracks || [{\n            id: Date.now(),\n            name: 'トラック 1',\n            clips: []\n          }],\n          bpm: projectData.bpm || 120\n        };\n      }\n    } catch (error) {\n      console.error('自動保存データの復元に失敗:', error);\n    }\n    return {\n      tracks: [{\n        id: Date.now(),\n        name: 'トラック 1',\n        clips: []\n      }],\n      bpm: 120\n    };\n  };\n  const initialData = loadAutoSavedProject();\n  const [tracks, setTracks] = useState(initialData.tracks);\n  const [bpm, setBpm] = useState(initialData.bpm);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const dragOverTimeoutRef = useRef(null);\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n\n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    console.log('LocalStorageから読み込んだ音素材数:', savedSounds.length);\n\n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          console.log('音声データ復元中:', sound.name, 'データサイズ:', sound.audioData.length);\n\n          // Base64データの検証\n          if (!sound.audioData.includes(',')) {\n            console.error('無効なBase64フォーマット:', sound.name);\n            return sound;\n          }\n          const base64Data = sound.audioData.split(',')[1];\n          if (!base64Data || base64Data.length === 0) {\n            console.error('Base64データが空です:', sound.name);\n            return sound;\n          }\n          const byteCharacters = atob(base64Data);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n\n          // Blobサイズの検証\n          if (byteArray.length === 0) {\n            console.error('Blobデータが空です:', sound.name);\n            return sound;\n          }\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n          console.log('Blob復元成功:', sound.name, 'サイズ:', blob.size, 'タイプ:', blob.type);\n\n          // Blobの有効性を確認\n          if (blob.size === 0) {\n            console.error('作成されたBlobのサイズが0です:', sound.name);\n            return sound;\n          }\n          return {\n            ...sound,\n            audioBlob: blob\n          };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n\n    // 有効な音素材のみをフィルタリング\n    const validSounds = soundsWithBlob.filter(sound => {\n      if (!sound.audioBlob) {\n        console.warn('audioBlobが存在しない音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (!(sound.audioBlob instanceof Blob)) {\n        console.warn('無効なBlob形式の音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (sound.audioBlob.size === 0) {\n        console.warn('サイズが0のBlob音素材をスキップ:', sound.name);\n        return false;\n      }\n      return true;\n    });\n    console.log('有効な音素材数:', validSounds.length, '/ 総数:', soundsWithBlob.length);\n    setSounds(validSounds);\n\n    // 無効な音素材があった場合はLocalStorageを更新\n    if (validSounds.length !== soundsWithBlob.length) {\n      console.log('無効な音素材を除去してLocalStorageを更新');\n      const validSoundsForStorage = validSounds.map(sound => ({\n        ...sound,\n        audioBlob: undefined // Blobは保存しない\n      }));\n      localStorage.setItem('soundRecordings', JSON.stringify(validSoundsForStorage));\n    }\n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n      // 再生中の音声をすべて停止・クリーンアップ\n      // useEffect内でplayingAudiosの最新値を取得\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({\n          audio,\n          timeoutId,\n          audioUrl\n        }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map(); // 空のMapを返す\n      });\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n      if (window.currentDraggedSound) {\n        window.currentDraggedSound = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm) => {\n    return new Promise(async resolve => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          console.log('AudioContext方式で音声長さを取得中...');\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          console.log('AudioContext方式で取得した長さ:', durationInSeconds, '秒');\n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            const pixelsPerSecond = currentBpm / 60 * 100;\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            console.log('AudioContext計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm / 60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.log('AudioContext方式でエラー:', error);\n        }\n      }\n\n      // AudioContextが失敗した場合はデフォルト値を使用\n      console.log('AudioContextが利用できないため、デフォルト値を使用');\n      resolve(400);\n    });\n  }, [audioContext, bpm]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = bpm / 60 * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n\n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n\n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = bpm / 60 * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - timeInSeconds * 1000);\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async newBpm => {\n    setBpm(newBpm);\n\n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(tracks.map(async track => {\n      const updatedClips = await Promise.all(track.clips.map(async clip => {\n        if (clip.soundData && clip.soundData.audioBlob) {\n          try {\n            const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n            return {\n              ...clip,\n              duration: newDuration\n            };\n          } catch (error) {\n            console.warn('クリップのduration更新に失敗:', error);\n            return clip;\n          }\n        }\n        return clip;\n      }));\n      return {\n        ...track,\n        clips: updatedClips\n      };\n    }));\n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null,\n          // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current\n      };\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('プロジェクトを保存しました');\n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n\n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = soundData => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], {\n                type: 'audio/wav'\n              });\n              return {\n                ...soundData,\n                audioBlob: blob\n              };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n\n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips.map(clip => ({\n              ...clip,\n              soundData: restoreAudioBlob(clip.soundData)\n            }))\n          }));\n          setTracks(restoredTracks);\n          console.log('トラックデータを復元しました:', restoredTracks.length, 'トラック');\n        }\n\n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n\n        // 音素材を復元（既存の音素材に追加）\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n\n          // 既存の音素材と読み込んだ音素材を結合\n          setSounds(prevSounds => {\n            const maxId = prevSounds.length > 0 ? Math.max(...prevSounds.map(s => s.id)) : 0;\n            const existingNames = new Set(prevSounds.map(s => s.name));\n            const newSounds = restoredSounds.map((sound, index) => {\n              let newName = sound.name;\n              let counter = 1;\n\n              // 名前の重複をチェックして、重複する場合は番号を付ける\n              while (existingNames.has(newName)) {\n                newName = `${sound.name} (${counter})`;\n                counter++;\n              }\n              existingNames.add(newName);\n              return {\n                ...sound,\n                id: maxId + index + 1,\n                // 新しいIDを割り当て\n                name: newName // 重複しない名前を設定\n              };\n            });\n            console.log('音素材を追加しました:', newSounds.length, '個（既存:', prevSounds.length, '個）');\n            return [...prevSounds, ...newSounds];\n          });\n        }\n        console.log('プロジェクトを読み込みました');\n        setError(null);\n\n        // 読み込み後に自動保存データも更新\n        setTimeout(() => {\n          const autoSaveData = {\n            version: '1.0',\n            bpm: projectData.bpm || 120,\n            tracks: projectData.tracks || [],\n            timestamp: Date.now(),\n            trackNameCounter: projectData.trackNameCounter || 1,\n            trackIdCounter: projectData.trackIdCounter || 1\n          };\n          localStorage.setItem('dawProjectAutoSave', JSON.stringify(autoSaveData));\n          console.log('読み込み後の自動保存データを更新しました');\n        }, 100);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = bpm / 60 * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({\n        sampleRate: 44100\n      });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              const pixelsPerSecond = bpm / 60 * 100;\n              const startTimeInSamples = Math.floor(clip.startTime / pixelsPerSecond * exportContext.sampleRate);\n\n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                for (let i = 0; i < sourceData.length && startTimeInSamples + i < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n\n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && startTimeInSamples + i < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('音源を出力しました');\n      await exportContext.close();\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = buffer => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n\n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n\n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    return new Blob([arrayBuffer], {\n      type: 'audio/wav'\n    });\n  };\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n\n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n  const removeTrack = trackId => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    console.log('ドロップ処理開始:', {\n      trackId,\n      timePosition,\n      draggedClip\n    });\n    try {\n      // 8分音符に合わせて位置を調整（50px単位）\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n\n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n\n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => clip.id === draggedClip.id ? updatedClip : clip)\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n\n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n\n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n\n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      console.log('新しい音素材のドロップ:', {\n        soundData,\n        hasAudioBlob: !!soundData.audioBlob\n      });\n\n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n      const newClip = {\n        id: Date.now() + Math.random(),\n        // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n      console.log('作成されたクリップ:', newClip);\n      console.log('現在のトラック数:', tracks.length);\n      console.log('対象トラックID:', trackId);\n      console.log('対象トラック:', tracks.find(t => t.id === trackId));\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        console.log('更新前のトラック:', prevTracks.find(t => t.id === trackId));\n        const updatedTracks = prevTracks.map(track => track.id === trackId ? {\n          ...track,\n          clips: [...track.clips, newClip]\n        } : track);\n        console.log('更新後のトラック:', updatedTracks.find(t => t.id === trackId));\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n\n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n\n    // スロットリング - 16ms（60FPS）間隔で実行を制限\n    if (dragOverTimeoutRef.current) {\n      return;\n    }\n\n    // 必要な情報を事前に抽出\n    const clientX = e.clientX;\n    const currentTarget = e.currentTarget;\n    dragOverTimeoutRef.current = setTimeout(() => {\n      dragOverTimeoutRef.current = null;\n      updateDragPreview(clientX, currentTarget);\n    }, 16);\n  };\n  const updateDragPreview = (clientX, trackElement) => {\n    // null チェックを追加\n    if (!trackElement || !timelineRef.current) {\n      return;\n    }\n    try {\n      // ドラッグプレビューの更新\n      const rect = trackElement.getBoundingClientRect();\n      const timePosition = clientX - rect.left;\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      const trackRect = trackElement.getBoundingClientRect();\n      const tracksAreaRect = timelineRef.current.getBoundingClientRect();\n      if (tracksAreaRect && trackElement.dataset && trackElement.dataset.trackId) {\n        const relativeTop = trackRect.top - tracksAreaRect.top;\n        const trackId = parseInt(trackElement.dataset.trackId);\n\n        // trackIdが有効な数値かチェック\n        if (isNaN(trackId)) {\n          return;\n        }\n\n        // プレビュー幅を決定\n        let previewWidth = 400; // デフォルト値（1小節）\n\n        if (draggedClip) {\n          // 既存クリップの場合\n          previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 ? draggedClip.duration : 400;\n        } else {\n          // 新しい音素材の場合、事前に計算された長さを使用\n          previewWidth = draggedSoundDuration;\n        }\n        setDragPreview({\n          left: snappedPosition,\n          top: relativeTop + 10,\n          width: previewWidth,\n          trackId: trackId\n        });\n      }\n    } catch (error) {\n      console.warn('ドラッグプレビュー更新エラー:', error);\n      // エラーが発生した場合はプレビューをクリア\n      setDragPreview(null);\n    }\n  };\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => track.id === trackId ? {\n      ...track,\n      clips: track.clips.filter(clip => clip.id !== clipId)\n    } : track));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({\n      ...clip,\n      originalTrackId\n    });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = e => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e && e.dataTransfer && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n\n    // ドラッグオーバーのタイムアウトをクリア\n    if (dragOverTimeoutRef.current) {\n      clearTimeout(dragOverTimeoutRef.current);\n      dragOverTimeoutRef.current = null;\n    }\n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400); // リセット\n  };\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      setIsPlaying(true);\n\n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = bpm / 60 * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n\n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + clip.duration / pixelsPerSecond;\n\n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', {\n              clipStartTimeInSeconds,\n              clipEndTimeInSeconds\n            });\n            return;\n          }\n\n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    var _clip$soundData;\n    console.log('scheduleClipPlayback:', {\n      clip,\n      hasAudioBlob: !!((_clip$soundData = clip.soundData) !== null && _clip$soundData !== void 0 && _clip$soundData.audioBlob)\n    });\n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n\n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        playingAudiosMap.set(clip.id, {\n          audio,\n          timeoutId,\n          audioUrl\n        });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      var _clip$soundData2, _clip$soundData3, _clip$soundData4, _clip$soundData5, _clip$soundData6;\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: (_clip$soundData2 = clip.soundData) === null || _clip$soundData2 === void 0 ? void 0 : _clip$soundData2.name,\n        hasAudioData: !!((_clip$soundData3 = clip.soundData) !== null && _clip$soundData3 !== void 0 && _clip$soundData3.audioData),\n        hasAudioBlob: !!((_clip$soundData4 = clip.soundData) !== null && _clip$soundData4 !== void 0 && _clip$soundData4.audioBlob),\n        audioBlobType: typeof ((_clip$soundData5 = clip.soundData) === null || _clip$soundData5 === void 0 ? void 0 : _clip$soundData5.audioBlob),\n        isInstanceOfBlob: ((_clip$soundData6 = clip.soundData) === null || _clip$soundData6 === void 0 ? void 0 : _clip$soundData6.audioBlob) instanceof Blob\n      });\n\n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        console.log('audioDataからBlobを再作成中...');\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], {\n            type: 'audio/wav'\n          });\n\n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n\n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n  const pause = () => {\n    setIsPlaying(false);\n\n    // 再生中の音声を一時停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n\n    // 再生中の音声を停止\n    playingAudios.forEach(({\n      audio,\n      timeoutId,\n      audioUrl\n    }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    setPlayingAudios(new Map());\n  };\n\n  // タイムラインデータの自動保存機能\n  useEffect(() => {\n    const autoSaveProject = () => {\n      try {\n        const projectData = {\n          version: '1.0',\n          bpm: bpm,\n          tracks: tracks,\n          timestamp: Date.now(),\n          trackNameCounter: trackNameCounterRef.current,\n          trackIdCounter: trackIdCounterRef.current\n        };\n        localStorage.setItem('dawProjectAutoSave', JSON.stringify(projectData));\n        console.log('プロジェクトを自動保存しました:', {\n          tracksCount: tracks.length,\n          bpm: bpm,\n          totalClips: tracks.reduce((total, track) => total + track.clips.length, 0)\n        });\n      } catch (error) {\n        console.error('プロジェクトの自動保存に失敗:', error);\n      }\n    };\n\n    // 初期化後の自動保存（tracksやbpmが変更された時）\n    if (tracks.length > 0) {\n      autoSaveProject();\n    }\n  }, [tracks, bpm]);\n\n  // 音素材の更新監視（他のページで音が追加された場合の対応）\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        // ページが表示されたときに音素材を再読み込み\n        const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n        console.log('ページ表示時の音素材再読み込み - 件数:', savedSounds.length);\n\n        // 音声データ復元処理（既存のロジックを再利用）\n        const soundsWithBlob = savedSounds.map(sound => {\n          if (sound.audioData) {\n            try {\n              const base64Data = sound.audioData.split(',')[1];\n              if (!base64Data || base64Data.length === 0) {\n                return sound;\n              }\n              const byteCharacters = atob(base64Data);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], {\n                type: 'audio/wav'\n              });\n              return {\n                ...sound,\n                audioBlob: blob\n              };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', sound.name, error);\n              return sound;\n            }\n          }\n          return sound;\n        });\n        const validSounds = soundsWithBlob.filter(sound => sound.audioBlob && sound.audioBlob instanceof Blob && sound.audioBlob.size > 0);\n        setSounds(validSounds);\n        console.log('音素材更新完了 - 有効件数:', validSounds.length);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  // 自動保存データをクリアする機能\n  const clearAutoSave = () => {\n    try {\n      localStorage.removeItem('dawProjectAutoSave');\n      console.log('自動保存データをクリアしました');\n\n      // 初期状態にリセット\n      setTracks([{\n        id: Date.now(),\n        name: 'トラック 1',\n        clips: []\n      }]);\n      setBpm(120);\n      trackNameCounterRef.current = 1;\n      trackIdCounterRef.current = 1;\n      setError(null);\n      alert('✅ プロジェクトをリセットしました');\n    } catch (error) {\n      console.error('自動保存データのクリアに失敗:', error);\n      setError('プロジェクトのリセットに失敗しました');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daw-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB9 \\u97F3\\u697D\\u3065\\u304F\\u308A\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u97F3\\u7D20\\u6750\\u3092\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u97F3\\u697D\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u3087\\u3046\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-controls card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transport-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `transport-btn play-btn ${isPlaying ? 'playing' : ''}`,\n          onClick: isPlaying ? pause : play,\n          children: isPlaying ? '⏸️' : '▶️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transport-btn stop-btn\",\n          onClick: stop,\n          children: \"\\u23F9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bpm-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bpm\",\n          children: \"\\uD83C\\uDFB5 BPM:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bpm\",\n          type: \"number\",\n          value: bpm,\n          onChange: e => handleBpmChange(parseInt(e.target.value)),\n          min: \"60\",\n          max: \"200\",\n          className: \"bpm-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: addTrack,\n          children: \"\\u2795 \\u30C8\\u30E9\\u30C3\\u30AF\\u8FFD\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: () => setShowSoundPanel(!showSoundPanel),\n          children: showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-secondary\",\n          onClick: saveProject,\n          children: \"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"button-secondary file-input-label\",\n          children: [\"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: loadProject,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-warning\",\n          onClick: () => {\n            if (window.confirm('🗑️ プロジェクトをリセットしますか？\\n\\n現在の作業内容がすべて削除されます。')) {\n              clearAutoSave();\n            }\n          },\n          title: \"\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\uFF08\\u81EA\\u52D5\\u4FDD\\u5B58\\u30C7\\u30FC\\u30BF\\u3082\\u30AF\\u30EA\\u30A2\\uFF09\",\n          children: \"\\uD83D\\uDDD1\\uFE0F \\u30EA\\u30BB\\u30C3\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-primary\",\n          onClick: exportAudio,\n          disabled: isExporting,\n          children: isExporting ? '🔄 出力中...' : '🎧 音源出力'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daw-main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sound-panel ${!showSoundPanel ? 'panel-hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDFB5 \\u97F3\\u7D20\\u6750\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sound-panel-close\",\n            onClick: () => setShowSoundPanel(false),\n            title: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u3092\\u9589\\u3058\\u308B\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sound-list\",\n          children: sounds.length > 0 ? sounds.map(sound => /*#__PURE__*/_jsxDEV(SoundItem, {\n            sound: sound,\n            onDragStart: async sound => {\n              // ドラッグ開始時に音声の長さを計算\n              console.log('ドラッグ開始 - 音声長さ計算中:', sound.name);\n              if (sound.audioBlob) {\n                try {\n                  const duration = await getAudioDuration(sound.audioBlob, bpm);\n                  console.log('計算された音声長さ:', duration, 'px');\n                  setDraggedSoundDuration(duration);\n                } catch (error) {\n                  console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                  setDraggedSoundDuration(400);\n                }\n              } else {\n                console.log('audioBlob が存在しません - デフォルト値使用');\n                setDraggedSoundDuration(400);\n              }\n            }\n          }, sound.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1244,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sounds\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u97F3\\u7D20\\u6750\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u97F3\\u3092\\u9332\\u97F3\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `daw-workspace ${!showSoundPanel ? 'panel-hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-headers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-header-spacer\",\n            children: \"\\u30BF\\u30A4\\u30E0\\u30E9\\u30A4\\u30F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 13\n          }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(TrackHeader, {\n            track: track,\n            onRemove: removeTrack,\n            trackHeight: trackHeight\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(Timeline, {\n            bpm: bpm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tracks-area\",\n            ref: timelineRef,\n            style: {\n              minWidth: TOTAL_MEASURES * MEASURE_WIDTH\n            },\n            children: [/*#__PURE__*/_jsxDEV(Playhead, {\n              currentTime: currentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1293,\n              columnNumber: 15\n            }, this), dragPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drag-preview\",\n              style: {\n                left: dragPreview.left,\n                top: dragPreview.top,\n                width: dragPreview.width\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1295,\n              columnNumber: 17\n            }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n              track: track,\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onRemoveClip: removeClip,\n              onClipDragStart: handleClipDragStart,\n              onDragEnd: handleDragEnd,\n              trackHeight: trackHeight,\n              bpm: bpm\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1305,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCD6 \\u4F7F\\u3044\\u65B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDDA5\\uFE0F PC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 15\n          }, this), \" \\u5DE6\\u5074\\u306E\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u304B\\u3089\\u97F3\\u7D20\\u6750\\u3092\\u30C8\\u30E9\\u30C3\\u30AF\\u306B\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u914D\\u7F6E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30DB/\\u30BF\\u30D6\\u30EC\\u30C3\\u30C8:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 15\n          }, this), \" \\u97F3\\u7D20\\u6750\\u3092\\u9577\\u62BC\\u3057\\u3057\\u3066\\u304B\\u3089\\u30C8\\u30E9\\u30C3\\u30AF\\u307E\\u3067\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u914D\\u7F6E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u914D\\u7F6E\\u6E08\\u307F\\u306E\\u97F3\\u7D20\\u6750\\u3082\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u5225\\u306E\\u5834\\u6240\\u306B\\u79FB\\u52D5\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u914D\\u7F6E\\u4E88\\u5B9A\\u4F4D\\u7F6E\\u306B\\u9752\\u3044\\u5F71\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u306F8\\u5206\\u97F3\\u7B26\\uFF08\\u88CF\\u62CD\\u542B\\u3080\\uFF09\\u306B\\u5408\\u308F\\u305B\\u3066\\u81EA\\u52D5\\u7684\\u306B\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u306E\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u500B\\u5225\\u306B\\u97F3\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u518D\\u751F\\u3001\\u23F8\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u4E00\\u6642\\u505C\\u6B62\\u3001\\u23F9\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u505C\\u6B62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"BPM\\u3092\\u5909\\u66F4\\u3057\\u3066\\u97F3\\u697D\\u306E\\u901F\\u3055\\u3092\\u8ABF\\u6574\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u8FFD\\u52A0\\u3057\\u3066\\u8907\\u6570\\u306E\\u97F3\\u3092\\u91CD\\u306D\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1334,\n            columnNumber: 15\n          }, this), \" \\u7DE8\\u96C6\\u4E2D\\u306E\\u30C7\\u30FC\\u30BF\\u3092JSON\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u4FDD\\u5B58\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1335,\n            columnNumber: 15\n          }, this), \" \\u4FDD\\u5B58\\u3057\\u305F\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u7DE8\\u96C6\\u3092\\u518D\\u958B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFA7 \\u97F3\\u6E90\\u51FA\\u529B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1336,\n            columnNumber: 15\n          }, this), \" \\u5B8C\\u6210\\u3057\\u305F\\u697D\\u66F2\\u3092WAV\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u51FA\\u529B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDDD1\\uFE0F \\u30EA\\u30BB\\u30C3\\u30C8:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 15\n          }, this), \" \\u73FE\\u5728\\u306E\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\u3057\\u3066\\u65B0\\u3057\\u304F\\u59CB\\u3081\\u308B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-save-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCBE \\u81EA\\u52D5\\u4FDD\\u5B58\\u6A5F\\u80FD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u81EA\\u52D5\\u4FDD\\u5B58:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1342,\n              columnNumber: 17\n            }, this), \" \\u30C8\\u30E9\\u30C3\\u30AF\\u3084BPM\\u306E\\u5909\\u66F4\\u306F\\u81EA\\u52D5\\u7684\\u306B\\u4FDD\\u5B58\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u4ED6\\u30DA\\u30FC\\u30B8\\u3068\\u306E\\u9023\\u643A:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1343,\n              columnNumber: 17\n            }, this), \" \\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u9332\\u97F3\\u3057\\u305F\\u97F3\\u306F\\u81EA\\u52D5\\u7684\\u306B\\u53CD\\u6620\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u5FA9\\u5143\\u6A5F\\u80FD:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1344,\n              columnNumber: 17\n            }, this), \" \\u30DA\\u30FC\\u30B8\\u3092\\u30EA\\u30ED\\u30FC\\u30C9\\u3057\\u3066\\u3082\\u4F5C\\u696D\\u5185\\u5BB9\\u304C\\u81EA\\u52D5\\u7684\\u306B\\u5FA9\\u5143\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u5B89\\u5FC3\\u3057\\u3066\\u79FB\\u52D5:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1345,\n              columnNumber: 17\n            }, this), \" \\u4ED6\\u306E\\u30DA\\u30FC\\u30B8\\u306B\\u79FB\\u52D5\\u3057\\u3066\\u3082\\u4F5C\\u696D\\u5185\\u5BB9\\u306F\\u4FDD\\u6301\\u3055\\u308C\\u307E\\u3059\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30FC\\u30C8\\u30D5\\u30A9\\u30F3\\u5229\\u7528\\u306E\\u30B3\\u30C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u97F3\\u7D20\\u6750\\u3092\\u8EFD\\u304F\\u9577\\u62BC\\u3057\\u3059\\u308B\\u3068\\u30C9\\u30E9\\u30C3\\u30B0\\u30E2\\u30FC\\u30C9\\u306B\\u306A\\u308A\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u753B\\u9762\\u304C\\u30B9\\u30AF\\u30ED\\u30FC\\u30EB\\u3057\\u306A\\u3044\\u3088\\u3046\\u5236\\u5FA1\\u3055\\u308C\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u9752\\u304F\\u30CF\\u30A4\\u30E9\\u30A4\\u30C8\\u3055\\u308C\\u305F\\u30C8\\u30E9\\u30C3\\u30AF\\u3067\\u6307\\u3092\\u96E2\\u3059\\u3068\\u97F3\\u7D20\\u6750\\u304C\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u6A2A\\u753B\\u9762\\u8868\\u793A\\u306B\\u3059\\u308B\\u3068\\u3088\\u308A\\u4F7F\\u3044\\u3084\\u3059\\u304F\\u306A\\u308A\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1146,\n    columnNumber: 5\n  }, this);\n};\n_s(DAWPage, \"3MPTeu/cnhcGC0VD448zbulaHeo=\");\n_c = DAWPage;\nconst SoundItem = ({\n  sound,\n  onDragStart\n}) => {\n  _s2();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n  const handleDragStart = e => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n\n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n\n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setIsDragging(false);\n\n    // 長押し判定用のタイマーは設定せず、移動検知でのみドラッグを開始\n  };\n  const handleTouchMove = e => {\n    if (!touchStart) return;\n    const touch = e.touches[0];\n    const currentPos = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    setTouchMove(currentPos);\n\n    // ドラッグ開始の判定（15px以上移動）- 閾値を上げてより意図的な移動のみドラッグ扱い\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    if (!isDragging && (deltaX > 15 || deltaY > 15)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n\n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n\n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n\n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n\n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n\n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n  const handleTouchEnd = e => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n\n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n\n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n\n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n\n    // ドラッグプレビューを削除\n    const dragPreview = document.querySelector('.mobile-drag-preview');\n    if (dragPreview) {\n      dragPreview.remove();\n    }\n\n    // グローバル変数をクリア\n    window.currentDraggedSoundBlob = null;\n    window.currentDraggedSound = null;\n  };\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      // Blobの有効性をチェック\n      if (!(sound.audioBlob instanceof Blob) || sound.audioBlob.size === 0) {\n        var _sound$audioBlob;\n        console.error('無効なaudioBlob:', {\n          name: sound.name,\n          isBlob: sound.audioBlob instanceof Blob,\n          size: (_sound$audioBlob = sound.audioBlob) === null || _sound$audioBlob === void 0 ? void 0 : _sound$audioBlob.size\n        });\n        return;\n      }\n      const audio = new Audio();\n      let audioUrl;\n      try {\n        audioUrl = URL.createObjectURL(sound.audioBlob);\n        audio.src = audioUrl;\n        audio.play().then(() => {\n          setIsPlaying(true);\n          const handleEnded = () => {\n            setIsPlaying(false);\n            if (audioUrl) {\n              URL.revokeObjectURL(audioUrl); // URLをクリーンアップ\n            }\n            audio.removeEventListener('ended', handleEnded);\n          };\n          audio.addEventListener('ended', handleEnded);\n\n          // 音声の読み込みエラーもハンドリング\n          audio.addEventListener('error', error => {\n            console.error('音声読み込みエラー:', error);\n            setIsPlaying(false);\n            if (audioUrl) {\n              URL.revokeObjectURL(audioUrl);\n            }\n          });\n        }).catch(error => {\n          console.error('音声再生エラー:', error);\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl); // エラー時もクリーンアップ\n          }\n          setIsPlaying(false);\n        });\n      } catch (error) {\n        console.error('createObjectURLエラー:', error);\n        setIsPlaying(false);\n      }\n    } else {\n      console.log('再生条件不満足:', {\n        hasAudioBlob: !!sound.audioBlob,\n        isPlaying,\n        isDragging\n      });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = useCallback(() => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  }, [isDragging, touchMove, sound.name]);\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove, createDragPreview]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sound-item ${isDragging ? 'dragging' : ''}`,\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: sound.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-tags\",\n        children: sound.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-tag\",\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1599,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1597,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1595,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-sound-btn\",\n        onClick: playSound,\n        disabled: isPlaying,\n        children: isPlaying ? '⏸️' : '▶️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1603,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1587,\n    columnNumber: 5\n  }, this);\n};\n_s2(SoundItem, \"RkxO1xburwD1wlHDqN3nCO+JHik=\");\n_c2 = SoundItem;\nconst TrackHeader = ({\n  track,\n  onRemove,\n  trackHeight\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track-header\",\n    style: {\n      height: trackHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-track-btn\",\n          onClick: () => onRemove(track.id),\n          title: \"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u524A\\u9664\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1622,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1621,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1619,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1618,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TrackHeader;\nconst Timeline = ({\n  bpm\n}) => {\n  const measures = TOTAL_MEASURES; // 16小節表示\n  const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    style: {\n      minWidth: TOTAL_MEASURES * MEASURE_WIDTH\n    },\n    children: Array.from({\n      length: measures\n    }, (_, measureIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"measure\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measure-number\",\n        children: measureIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beats\",\n        children: Array.from({\n          length: beatsPerMeasure\n        }, (_, beatIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"beat\",\n          style: {\n            width: BEAT_WIDTH\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"beat-main\",\n            children: beatIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1651,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"beat-sub\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-beat-marker\",\n              children: \"\\u30FB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1655,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1654,\n            columnNumber: 17\n          }, this)]\n        }, beatIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1646,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1644,\n        columnNumber: 11\n      }, this)]\n    }, measureIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1642,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1640,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Timeline;\nconst Track = ({\n  track,\n  onDrop,\n  onDragOver,\n  onRemoveClip,\n  onClipDragStart,\n  onDragEnd,\n  trackHeight,\n  bpm\n}) => {\n  _s3();\n  const handleDrop = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = useCallback(e => {\n    const {\n      trackId,\n      timePosition,\n      sound\n    } = e.detail;\n\n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: type => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    onDrop(mockDropEvent, trackId, timePosition);\n  }, [onDrop]);\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = useCallback(e => {\n    const {\n      clip,\n      newTrackId,\n      timePosition\n    } = e.detail;\n\n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: type => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    onDrop(mockDropEvent, newTrackId, timePosition);\n  }, [onDrop]);\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n      };\n    }\n  }, [track.id, handleMobileDrop, handleMobileClipMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track\",\n    style: {\n      height: trackHeight\n    },\n    \"data-track-id\": track.id,\n    onDrop: handleDrop,\n    onDragOver: onDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-grid\",\n      children: [Array.from({\n        length: TOTAL_BEATS\n      }, (_, index) => {\n        const isFirstBeat = index === 0;\n        const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n        const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className,\n          style: {\n            left: index * BEAT_WIDTH\n          }\n        }, `main-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1740,\n          columnNumber: 13\n        }, this);\n      }), Array.from({\n        length: TOTAL_BEATS\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beat-line beat-line-sub\",\n        style: {\n          left: index * BEAT_WIDTH + SUB_BEAT_WIDTH\n        }\n      }, `sub-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1745,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1733,\n      columnNumber: 7\n    }, this), track.clips.map(clip => /*#__PURE__*/_jsxDEV(AudioClip, {\n      clip: clip,\n      trackId: track.id,\n      onRemove: () => onRemoveClip(track.id, clip.id),\n      onDragStart: onClipDragStart,\n      onDragEnd: onDragEnd\n    }, clip.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1750,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1726,\n    columnNumber: 5\n  }, this);\n};\n_s3(Track, \"+PNnKtwbfdVN4ND8buII9hSRziA=\");\n_c5 = Track;\nconst AudioClip = ({\n  clip,\n  trackId,\n  onRemove,\n  onDragStart,\n  onDragEnd\n}) => {\n  _s4();\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n\n  // clip.soundData の安全性をチェック\n  if (!clip || !clip.soundData) {\n    console.warn('無効なクリップデータ:', clip);\n    return null; // 無効なクリップは表示しない\n  }\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n    generateWaveform();\n  }, [clip.soundData]);\n  const handleDragStart = e => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n\n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n\n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = e => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setIsDragging(false);\n\n    // ドラッグモードは移動が確定してから有効化\n  };\n  const handleTouchMove = e => {\n    if (!touchStart) return;\n    const touch = e.touches[0];\n    const currentPos = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    setTouchMove(currentPos);\n\n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      onDragStart(clip, trackId);\n    }\n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n\n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n\n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n\n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n  const handleTouchEnd = e => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow === null || elementBelow === void 0 ? void 0 : elementBelow.closest('.track');\n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n\n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n\n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n\n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    if (onDragEnd) {\n      onDragEnd(null); // nullを渡してガード条件を満たす\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `audio-clip ${isDragging ? 'dragging' : ''}`,\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onDragEnd: onDragEnd,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    style: {\n      left: clip.startTime,\n      width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clip-name\",\n        children: clip.soundData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1902,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-clip-btn\",\n        onClick: onRemove,\n        title: \"\\u30AF\\u30EA\\u30C3\\u30D7\\u3092\\u524A\\u9664\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1903,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1901,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clip-waveform\",\n      children: waveformData.length > 0 ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"waveform-svg\",\n        width: \"100%\",\n        height: \"30\",\n        children: waveformData.map((height, index) => /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: `${index / waveformData.length * 100}%`,\n          y: `${(1 - height) * 15}`,\n          width: `${80 / waveformData.length}%`,\n          height: `${height * 30}`,\n          fill: \"rgba(255, 255, 255, 0.8)\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1915,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1913,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform-placeholder\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1926,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1911,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1888,\n    columnNumber: 5\n  }, this);\n};\n_s4(AudioClip, \"NeAysvgdzDwGIytG3p5NplFZv3M=\");\n_c6 = AudioClip;\nconst Playhead = ({\n  currentTime\n}) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playhead\",\n    style: {\n      left: safeCurrentTime\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1938,\n    columnNumber: 5\n  }, this);\n};\n_c7 = Playhead;\nexport default DAWPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DAWPage\");\n$RefreshReg$(_c2, \"SoundItem\");\n$RefreshReg$(_c3, \"TrackHeader\");\n$RefreshReg$(_c4, \"Timeline\");\n$RefreshReg$(_c5, \"Track\");\n$RefreshReg$(_c6, \"AudioClip\");\n$RefreshReg$(_c7, \"Playhead\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","BEAT_WIDTH","BEATS_PER_MEASURE","MEASURE_WIDTH","SUB_BEAT_WIDTH","TOTAL_MEASURES","TOTAL_BEATS","DAWPage","_s","trackIdCounterRef","trackNameCounterRef","loadAutoSavedProject","autoSavedData","localStorage","getItem","projectData","JSON","parse","console","log","trackNameCounter","current","trackIdCounter","tracks","id","Date","now","name","clips","bpm","error","initialData","setTracks","setBpm","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioContext","setAudioContext","trackHeight","playingAudios","setPlayingAudios","Map","startPlayTime","setStartPlayTime","setError","sounds","setSounds","showSoundPanel","setShowSoundPanel","draggedClip","setDraggedClip","dragPreview","setDragPreview","draggedSoundDuration","setDraggedSoundDuration","isExporting","setIsExporting","timelineRef","animationFrameRef","dragOverTimeoutRef","ctx","window","AudioContext","webkitAudioContext","savedSounds","length","soundsWithBlob","map","sound","audioData","includes","base64Data","split","byteCharacters","atob","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","size","audioBlob","validSounds","filter","warn","validSoundsForStorage","undefined","setItem","stringify","close","cancelAnimationFrame","clearTimeout","currentPlayingAudios","forEach","audio","timeoutId","audioUrl","pause","src","URL","revokeObjectURL","currentDraggedSoundBlob","currentDraggedSound","getAudioDuration","currentBpm","Promise","resolve","arrayBuffer","audioBuffer","decodeAudioData","durationInSeconds","duration","isFinite","pixelsPerSecond","widthInPixels","updatePlayhead","animate","elapsed","newCurrentTime","requestAnimationFrame","timeInSeconds","handleBpmChange","newBpm","updatedTracks","all","track","updatedClips","clip","soundData","newDuration","saveProject","version","timestamp","projectJson","url","createObjectURL","link","document","createElement","href","download","toISOString","slice","replace","body","appendChild","click","removeChild","loadProject","event","file","target","files","reader","FileReader","onload","e","result","Error","restoreAudioBlob","restoredTracks","restoredSounds","prevSounds","maxId","Math","max","s","existingNames","Set","newSounds","index","newName","counter","has","add","setTimeout","autoSaveData","readAsText","value","exportAudio","maxDuration","clipStartTimeInSeconds","startTime","clipDurationInSeconds","clipEndTime","exportContext","sampleRate","bufferLength","ceil","outputBuffer","createBuffer","leftChannel","getChannelData","rightChannel","startTimeInSamples","floor","channel","min","numberOfChannels","sourceData","targetData","wavBlob","audioBufferToWav","buffer","bytesPerSample","blockAlign","byteRate","dataSize","bufferSize","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","sample","intSample","setInt16","addTrack","uniqueId","trackName","newTrack","prevTracks","removeTrack","trackId","handleDrop","timePosition","preventDefault","snappedPosition","round","originalTrackId","updatedClip","jsonData","dataTransfer","getData","hasAudioBlob","newClip","random","find","t","handleDragOver","dropEffect","clientX","currentTarget","updateDragPreview","trackElement","rect","getBoundingClientRect","left","trackRect","tracksAreaRect","dataset","relativeTop","top","parseInt","isNaN","previewWidth","width","removeClip","clipId","handleClipDragStart","handleDragEnd","play","state","resume","currentTimeInSeconds","newPlayingAudios","clipEndTimeInSeconds","delay","scheduleClipPlayback","delayMs","playingAudiosMap","_clip$soundData","Audio","catch","addEventListener","set","_clip$soundData2","_clip$soundData3","_clip$soundData4","_clip$soundData5","_clip$soundData6","soundDataName","hasAudioData","audioBlobType","isInstanceOfBlob","restoreError","paused","stop","autoSaveProject","tracksCount","totalClips","reduce","total","handleVisibilityChange","hidden","removeEventListener","clearAutoSave","removeItem","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","onChange","accept","style","display","confirm","title","disabled","SoundItem","onDragStart","TrackHeader","onRemove","Timeline","ref","minWidth","Playhead","Track","onDrop","onDragOver","onRemoveClip","onClipDragStart","onDragEnd","_c","_s2","isDragging","setIsDragging","touchStart","setTouchStart","touchMove","setTouchMove","handleDragStart","soundDataForTransfer","setData","effectAllowed","handleTouchStart","touch","touches","x","y","clientY","handleTouchMove","currentPos","deltaX","abs","deltaY","classList","querySelector","elementBelow","elementFromPoint","closest","querySelectorAll","remove","handleTouchEnd","dropEvent","CustomEvent","detail","dispatchEvent","playSound","_sound$audioBlob","isBlob","then","handleEnded","createDragPreview","textContent","cssText","draggable","onTouchStart","onTouchMove","onTouchEnd","tags","tag","_c2","height","_c3","measures","beatsPerMeasure","from","_","measureIndex","beatIndex","_c4","_s3","handleMobileDrop","mockDropEvent","handleMobileClipMove","newTrackId","isFirstBeat","isMeasureStart","AudioClip","_c5","_s4","waveformData","setWaveformData","generateWaveform","points","data","push","stopPropagation","moveEvent","fill","_c6","safeCurrentTime","_c7","$RefreshReg$"],"sources":["/Users/nakataniyuutomo/Desktop/Programing/ゼミ開発/sound-library2/src/pages/DAWPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\nconst DAWPage = () => {\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n  \n  // LocalStorageからの自動復元機能\n  const loadAutoSavedProject = () => {\n    try {\n      const autoSavedData = localStorage.getItem('dawProjectAutoSave');\n      if (autoSavedData) {\n        const projectData = JSON.parse(autoSavedData);\n        console.log('自動保存データを復元中...', projectData);\n        \n        // トラックカウンターの復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        return {\n          tracks: projectData.tracks || [{ \n            id: Date.now(), \n            name: 'トラック 1', \n            clips: [] \n          }],\n          bpm: projectData.bpm || 120\n        };\n      }\n    } catch (error) {\n      console.error('自動保存データの復元に失敗:', error);\n    }\n    \n    return {\n      tracks: [{ \n        id: Date.now(), \n        name: 'トラック 1', \n        clips: [] \n      }],\n      bpm: 120\n    };\n  };\n\n  const initialData = loadAutoSavedProject();\n  const [tracks, setTracks] = useState(initialData.tracks);\n  const [bpm, setBpm] = useState(initialData.bpm);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const dragOverTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n    \n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    console.log('LocalStorageから読み込んだ音素材数:', savedSounds.length);\n    \n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          console.log('音声データ復元中:', sound.name, 'データサイズ:', sound.audioData.length);\n          \n          // Base64データの検証\n          if (!sound.audioData.includes(',')) {\n            console.error('無効なBase64フォーマット:', sound.name);\n            return sound;\n          }\n          \n          const base64Data = sound.audioData.split(',')[1];\n          if (!base64Data || base64Data.length === 0) {\n            console.error('Base64データが空です:', sound.name);\n            return sound;\n          }\n          \n          const byteCharacters = atob(base64Data);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          \n          // Blobサイズの検証\n          if (byteArray.length === 0) {\n            console.error('Blobデータが空です:', sound.name);\n            return sound;\n          }\n          \n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          console.log('Blob復元成功:', sound.name, 'サイズ:', blob.size, 'タイプ:', blob.type);\n          \n          // Blobの有効性を確認\n          if (blob.size === 0) {\n            console.error('作成されたBlobのサイズが0です:', sound.name);\n            return sound;\n          }\n          \n          return { ...sound, audioBlob: blob };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    \n    // 有効な音素材のみをフィルタリング\n    const validSounds = soundsWithBlob.filter(sound => {\n      if (!sound.audioBlob) {\n        console.warn('audioBlobが存在しない音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (!(sound.audioBlob instanceof Blob)) {\n        console.warn('無効なBlob形式の音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (sound.audioBlob.size === 0) {\n        console.warn('サイズが0のBlob音素材をスキップ:', sound.name);\n        return false;\n      }\n      return true;\n    });\n    \n    console.log('有効な音素材数:', validSounds.length, '/ 総数:', soundsWithBlob.length);\n    setSounds(validSounds);\n    \n    // 無効な音素材があった場合はLocalStorageを更新\n    if (validSounds.length !== soundsWithBlob.length) {\n      console.log('無効な音素材を除去してLocalStorageを更新');\n      const validSoundsForStorage = validSounds.map(sound => ({\n        ...sound,\n        audioBlob: undefined // Blobは保存しない\n      }));\n      localStorage.setItem('soundRecordings', JSON.stringify(validSoundsForStorage));\n    }\n    \n    return () => {\n      if (ctx) {\n        ctx.close();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n      // 再生中の音声をすべて停止・クリーンアップ\n      // useEffect内でplayingAudiosの最新値を取得\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map(); // 空のMapを返す\n      });\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n      if (window.currentDraggedSound) {\n        window.currentDraggedSound = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm) => {\n    return new Promise(async (resolve) => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        console.log('無効なaudioBlob - デフォルト値を使用');\n        resolve(400);\n        return;\n      }\n\n      console.log('audioBlob詳細:', {\n        size: audioBlob.size,\n        type: audioBlob.type,\n        bpm: currentBpm\n      });\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          console.log('AudioContext方式で音声長さを取得中...');\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          \n          console.log('AudioContext方式で取得した長さ:', durationInSeconds, '秒');\n          \n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            const pixelsPerSecond = (currentBpm / 60) * 100;\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            console.log('AudioContext計算結果 - BPM:', currentBpm, '拍/秒:', currentBpm/60, 'ピクセル/秒:', pixelsPerSecond, '最終幅:', widthInPixels, 'px');\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.log('AudioContext方式でエラー:', error);\n        }\n      }\n\n      // AudioContextが失敗した場合はデフォルト値を使用\n      console.log('AudioContextが利用できないため、デフォルト値を使用');\n      resolve(400);\n    });\n  }, [audioContext, bpm]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        const pixelsPerSecond = (bpm / 60) * 100; // BPMに基づいたピクセル/秒\n        const newCurrentTime = elapsed * pixelsPerSecond;\n        \n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n        \n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        const pixelsPerSecond = (bpm / 60) * 100;\n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - (timeInSeconds * 1000));\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async (newBpm) => {\n    setBpm(newBpm);\n    \n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration更新に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null, // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current\n      };\n\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('プロジェクトを保存しました');\n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n        \n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = (soundData) => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              return { ...soundData, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n        \n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips.map(clip => ({\n              ...clip,\n              soundData: restoreAudioBlob(clip.soundData)\n            }))\n          }));\n          setTracks(restoredTracks);\n          console.log('トラックデータを復元しました:', restoredTracks.length, 'トラック');\n        }\n        \n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        // 音素材を復元（既存の音素材に追加）\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n          \n          // 既存の音素材と読み込んだ音素材を結合\n          setSounds(prevSounds => {\n            const maxId = prevSounds.length > 0 ? Math.max(...prevSounds.map(s => s.id)) : 0;\n            const existingNames = new Set(prevSounds.map(s => s.name));\n            \n            const newSounds = restoredSounds.map((sound, index) => {\n              let newName = sound.name;\n              let counter = 1;\n              \n              // 名前の重複をチェックして、重複する場合は番号を付ける\n              while (existingNames.has(newName)) {\n                newName = `${sound.name} (${counter})`;\n                counter++;\n              }\n              existingNames.add(newName);\n              \n              return {\n                ...sound,\n                id: maxId + index + 1, // 新しいIDを割り当て\n                name: newName // 重複しない名前を設定\n              };\n            });\n            \n            console.log('音素材を追加しました:', newSounds.length, '個（既存:', prevSounds.length, '個）');\n            return [...prevSounds, ...newSounds];\n          });\n        }\n        \n        console.log('プロジェクトを読み込みました');\n        setError(null);\n        \n        // 読み込み後に自動保存データも更新\n        setTimeout(() => {\n          const autoSaveData = {\n            version: '1.0',\n            bpm: projectData.bpm || 120,\n            tracks: projectData.tracks || [],\n            timestamp: Date.now(),\n            trackNameCounter: projectData.trackNameCounter || 1,\n            trackIdCounter: projectData.trackIdCounter || 1\n          };\n          localStorage.setItem('dawProjectAutoSave', JSON.stringify(autoSaveData));\n          console.log('読み込み後の自動保存データを更新しました');\n        }, 100);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    \n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = (bpm / 60) * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({ sampleRate: 44100 });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      \n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              \n              const pixelsPerSecond = (bpm / 60) * 100;\n              const startTimeInSamples = Math.floor((clip.startTime / pixelsPerSecond) * exportContext.sampleRate);\n              \n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                \n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n              \n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log('音源を出力しました');\n      await exportContext.close();\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = (buffer) => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    \n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n    \n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n    \n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    \n    return new Blob([arrayBuffer], { type: 'audio/wav' });\n  };\n\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n    \n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    \n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n\n  const removeTrack = (trackId) => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    \n    console.log('ドロップ処理開始:', { trackId, timePosition, draggedClip });\n    \n    try {\n      // 8分音符に合わせて位置を調整（50px単位）\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      \n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        console.log('既存クリップの移動:', draggedClip.id, '元トラック:', draggedClip.originalTrackId, '新トラック:', trackId);\n        \n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            console.log('同じトラック内での移動');\n            return {\n              ...track,\n              clips: track.clips.map(clip => \n                clip.id === draggedClip.id ? updatedClip : clip\n              )\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            console.log('元のトラックからクリップを削除');\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            console.log('新しいトラックにクリップを追加');\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        return;\n      }\n      \n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      \n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n      \n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      \n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      \n      console.log('新しい音素材のドロップ:', { soundData, hasAudioBlob: !!soundData.audioBlob });\n      \n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n          console.log('取得したduration:', duration, 'pixels (BPM:', bpm, ')');\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n\n      const newClip = {\n        id: Date.now() + Math.random(), // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n\n      console.log('作成されたクリップ:', newClip);\n      console.log('現在のトラック数:', tracks.length);\n      console.log('対象トラックID:', trackId);\n      console.log('対象トラック:', tracks.find(t => t.id === trackId));\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        console.log('更新前のトラック:', prevTracks.find(t => t.id === trackId));\n        const updatedTracks = prevTracks.map(track => \n          track.id === trackId \n            ? { ...track, clips: [...track.clips, newClip] }\n            : track\n        );\n        console.log('更新後のトラック:', updatedTracks.find(t => t.id === trackId));\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    \n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n    \n    // スロットリング - 16ms（60FPS）間隔で実行を制限\n    if (dragOverTimeoutRef.current) {\n      return;\n    }\n    \n    // 必要な情報を事前に抽出\n    const clientX = e.clientX;\n    const currentTarget = e.currentTarget;\n    \n    dragOverTimeoutRef.current = setTimeout(() => {\n      dragOverTimeoutRef.current = null;\n      updateDragPreview(clientX, currentTarget);\n    }, 16);\n  };\n  \n  const updateDragPreview = (clientX, trackElement) => {\n    // null チェックを追加\n    if (!trackElement || !timelineRef.current) {\n      return;\n    }\n    \n    try {\n      // ドラッグプレビューの更新\n      const rect = trackElement.getBoundingClientRect();\n      const timePosition = clientX - rect.left;\n      const snappedPosition = Math.round(timePosition / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n      \n      const trackRect = trackElement.getBoundingClientRect();\n      const tracksAreaRect = timelineRef.current.getBoundingClientRect();\n      \n      if (tracksAreaRect && trackElement.dataset && trackElement.dataset.trackId) {\n        const relativeTop = trackRect.top - tracksAreaRect.top;\n        const trackId = parseInt(trackElement.dataset.trackId);\n        \n        // trackIdが有効な数値かチェック\n        if (isNaN(trackId)) {\n          return;\n        }\n        \n        // プレビュー幅を決定\n        let previewWidth = 400; // デフォルト値（1小節）\n        \n        if (draggedClip) {\n          // 既存クリップの場合\n          previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 \n            ? draggedClip.duration \n            : 400;\n        } else {\n          // 新しい音素材の場合、事前に計算された長さを使用\n          previewWidth = draggedSoundDuration;\n        }\n        \n        setDragPreview({\n          left: snappedPosition,\n          top: relativeTop + 10,\n          width: previewWidth,\n          trackId: trackId\n        });\n      }\n    } catch (error) {\n      console.warn('ドラッグプレビュー更新エラー:', error);\n      // エラーが発生した場合はプレビューをクリア\n      setDragPreview(null);\n    }\n  };\n\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => \n      track.id === trackId \n        ? { ...track, clips: track.clips.filter(clip => clip.id !== clipId) }\n        : track\n    ));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId) => {\n    console.log('クリップドラッグ開始:', clip.id, 'トラック:', originalTrackId);\n    setDraggedClip({ ...clip, originalTrackId });\n  };\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = (e) => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e && e.dataTransfer && e.dataTransfer.dropEffect === 'none') {\n      console.log('ドラッグがキャンセルされました。元の位置を保持します。');\n    }\n    \n    // ドラッグオーバーのタイムアウトをクリア\n    if (dragOverTimeoutRef.current) {\n      clearTimeout(dragOverTimeoutRef.current);\n      dragOverTimeoutRef.current = null;\n    }\n    \n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400); // リセット\n  };\n\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      setIsPlaying(true);\n      \n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      const pixelsPerSecond = (bpm / 60) * 100;\n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n      \n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      \n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          \n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + (clip.duration / pixelsPerSecond);\n          \n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', { clipStartTimeInSeconds, clipEndTimeInSeconds });\n            return;\n          }\n          \n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      \n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    console.log('scheduleClipPlayback:', { clip, hasAudioBlob: !!clip.soundData?.audioBlob });\n    \n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        \n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n        \n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        \n        playingAudiosMap.set(clip.id, { audio, timeoutId, audioUrl });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: clip.soundData?.name,\n        hasAudioData: !!clip.soundData?.audioData,\n        hasAudioBlob: !!clip.soundData?.audioBlob,\n        audioBlobType: typeof clip.soundData?.audioBlob,\n        isInstanceOfBlob: clip.soundData?.audioBlob instanceof Blob\n      });\n      \n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        console.log('audioDataからBlobを再作成中...');\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          \n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n          \n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n    \n    // 再生中の音声を一時停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    \n    // 再生中の音声を停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    \n    setPlayingAudios(new Map());\n  };\n\n  // タイムラインデータの自動保存機能\n  useEffect(() => {\n    const autoSaveProject = () => {\n      try {\n        const projectData = {\n          version: '1.0',\n          bpm: bpm,\n          tracks: tracks,\n          timestamp: Date.now(),\n          trackNameCounter: trackNameCounterRef.current,\n          trackIdCounter: trackIdCounterRef.current\n        };\n\n        localStorage.setItem('dawProjectAutoSave', JSON.stringify(projectData));\n        console.log('プロジェクトを自動保存しました:', {\n          tracksCount: tracks.length,\n          bpm: bpm,\n          totalClips: tracks.reduce((total, track) => total + track.clips.length, 0)\n        });\n      } catch (error) {\n        console.error('プロジェクトの自動保存に失敗:', error);\n      }\n    };\n\n    // 初期化後の自動保存（tracksやbpmが変更された時）\n    if (tracks.length > 0) {\n      autoSaveProject();\n    }\n  }, [tracks, bpm]);\n\n  // 音素材の更新監視（他のページで音が追加された場合の対応）\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        // ページが表示されたときに音素材を再読み込み\n        const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n        console.log('ページ表示時の音素材再読み込み - 件数:', savedSounds.length);\n        \n        // 音声データ復元処理（既存のロジックを再利用）\n        const soundsWithBlob = savedSounds.map(sound => {\n          if (sound.audioData) {\n            try {\n              const base64Data = sound.audioData.split(',')[1];\n              if (!base64Data || base64Data.length === 0) {\n                return sound;\n              }\n              \n              const byteCharacters = atob(base64Data);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              \n              return { ...sound, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', sound.name, error);\n              return sound;\n            }\n          }\n          return sound;\n        });\n        \n        const validSounds = soundsWithBlob.filter(sound => \n          sound.audioBlob && sound.audioBlob instanceof Blob && sound.audioBlob.size > 0\n        );\n        \n        setSounds(validSounds);\n        console.log('音素材更新完了 - 有効件数:', validSounds.length);\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  // 自動保存データをクリアする機能\n  const clearAutoSave = () => {\n    try {\n      localStorage.removeItem('dawProjectAutoSave');\n      console.log('自動保存データをクリアしました');\n      \n      // 初期状態にリセット\n      setTracks([{ \n        id: Date.now(), \n        name: 'トラック 1', \n        clips: [] \n      }]);\n      setBpm(120);\n      trackNameCounterRef.current = 1;\n      trackIdCounterRef.current = 1;\n      \n      setError(null);\n      alert('✅ プロジェクトをリセットしました');\n    } catch (error) {\n      console.error('自動保存データのクリアに失敗:', error);\n      setError('プロジェクトのリセットに失敗しました');\n    }\n  };\n\n  return (\n    <div className=\"daw-page\">\n      <h2>🎹 音楽づくりページ</h2>\n      <p>音素材をドラッグ&ドロップして音楽を作りましょう！</p>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"daw-controls card\">\n        <div className=\"transport-controls\">\n          <button \n            className={`transport-btn play-btn ${isPlaying ? 'playing' : ''}`}\n            onClick={isPlaying ? pause : play}\n          >\n            {isPlaying ? '⏸️' : '▶️'}\n          </button>\n          <button className=\"transport-btn stop-btn\" onClick={stop}>\n            ⏹️\n          </button>\n        </div>\n\n        <div className=\"bpm-control\">\n          <label htmlFor=\"bpm\">🎵 BPM:</label>\n          <input\n            id=\"bpm\"\n            type=\"number\"\n            value={bpm}\n            onChange={(e) => handleBpmChange(parseInt(e.target.value))}\n            min=\"60\"\n            max=\"200\"\n            className=\"bpm-input\"\n          />\n        </div>\n\n        <div className=\"track-controls\">\n          <button className=\"button-primary\" onClick={addTrack}>\n            ➕ トラック追加\n          </button>\n          <button \n            className=\"button-secondary\" \n            onClick={() => setShowSoundPanel(!showSoundPanel)}\n          >\n            {showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'}\n          </button>\n        </div>\n\n        <div className=\"project-controls\">\n          <button className=\"button-secondary\" onClick={saveProject}>\n            💾 プロジェクト保存\n          </button>\n          <label className=\"button-secondary file-input-label\">\n            📁 プロジェクト読み込み\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={loadProject}\n              style={{ display: 'none' }}\n            />\n          </label>\n          <button \n            className=\"button-warning\" \n            onClick={() => {\n              if (window.confirm('🗑️ プロジェクトをリセットしますか？\\n\\n現在の作業内容がすべて削除されます。')) {\n                clearAutoSave();\n              }\n            }}\n            title=\"プロジェクトをリセット（自動保存データもクリア）\"\n          >\n            🗑️ リセット\n          </button>\n          <button \n            className=\"button-primary\" \n            onClick={exportAudio}\n            disabled={isExporting}\n          >\n            {isExporting ? '🔄 出力中...' : '🎧 音源出力'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"daw-main-area\">\n        <div className={`sound-panel ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"sound-panel-header\">\n            <h3>🎵 音素材</h3>\n            <button \n              className=\"sound-panel-close\"\n              onClick={() => setShowSoundPanel(false)}\n              title=\"音素材パネルを閉じる\"\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"sound-list\">\n            {sounds.length > 0 ? (\n              sounds.map(sound => (\n                <SoundItem \n                  key={sound.id} \n                  sound={sound} \n                  onDragStart={async (sound) => {\n                    // ドラッグ開始時に音声の長さを計算\n                    console.log('ドラッグ開始 - 音声長さ計算中:', sound.name);\n                    if (sound.audioBlob) {\n                      try {\n                        const duration = await getAudioDuration(sound.audioBlob, bpm);\n                        console.log('計算された音声長さ:', duration, 'px');\n                        setDraggedSoundDuration(duration);\n                      } catch (error) {\n                        console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                        setDraggedSoundDuration(400);\n                      }\n                    } else {\n                      console.log('audioBlob が存在しません - デフォルト値使用');\n                      setDraggedSoundDuration(400);\n                    }\n                  }}\n                />\n              ))\n            ) : (\n              <div className=\"no-sounds\">\n                <p>音素材がありません</p>\n                <p>「音あつめ」ページで音を録音してください</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={`daw-workspace ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"track-headers\">\n            <div className=\"timeline-header-spacer\">\n              タイムライン\n            </div>\n            {tracks.map(track => (\n              <TrackHeader \n                key={track.id} \n                track={track} \n                onRemove={removeTrack}\n                trackHeight={trackHeight}\n              />\n            ))}\n          </div>\n\n          <div className=\"timeline-container\">\n            <Timeline bpm={bpm} />\n            <div className=\"tracks-area\" ref={timelineRef} style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n              <Playhead currentTime={currentTime} />\n              {dragPreview && (\n                <div \n                  className=\"drag-preview\"\n                  style={{\n                    left: dragPreview.left,\n                    top: dragPreview.top,\n                    width: dragPreview.width\n                  }}\n                />\n              )}\n              {tracks.map(track => (\n                <Track\n                  key={track.id}\n                  track={track}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onRemoveClip={removeClip}\n                  onClipDragStart={handleClipDragStart}\n                  onDragEnd={handleDragEnd}\n                  trackHeight={trackHeight}\n                  bpm={bpm}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"instructions card\">\n        <h3>📖 使い方</h3>\n        <ul>\n          <li><strong>🖥️ PC:</strong> 左側の音素材パネルから音素材をトラックにドラッグ&ドロップして配置</li>\n          <li><strong>📱 スマホ/タブレット:</strong> 音素材を長押ししてからトラックまでドラッグして配置</li>\n          <li>配置済みの音素材もドラッグして別の場所に移動できます</li>\n          <li>ドラッグ中は配置予定位置に青い影が表示されます</li>\n          <li>音素材は8分音符（裏拍含む）に合わせて自動的に配置されます</li>\n          <li>音素材パネルの▶️ボタンで個別に音を確認できます</li>\n          <li>▶️ボタンで再生、⏸️ボタンで一時停止、⏹️ボタンで停止</li>\n          <li>BPMを変更して音楽の速さを調整</li>\n          <li>トラックを追加して複数の音を重ねることができます</li>\n          <li><strong>💾 プロジェクト保存:</strong> 編集中のデータをJSONファイルとして保存</li>\n          <li><strong>📁 プロジェクト読み込み:</strong> 保存したプロジェクトファイルを読み込んで編集を再開</li>\n          <li><strong>🎧 音源出力:</strong> 完成した楽曲をWAVファイルとして出力</li>\n          <li><strong>🗑️ リセット:</strong> 現在のプロジェクトをリセットして新しく始める</li>\n        </ul>\n        <div className=\"auto-save-info\">\n          <h4>💾 自動保存機能</h4>\n          <ul>\n            <li><strong>自動保存:</strong> トラックやBPMの変更は自動的に保存されます</li>\n            <li><strong>他ページとの連携:</strong> 「音あつめ」ページで録音した音は自動的に反映されます</li>\n            <li><strong>復元機能:</strong> ページをリロードしても作業内容が自動的に復元されます</li>\n            <li><strong>安心して移動:</strong> 他のページに移動しても作業内容は保持されます</li>\n          </ul>\n        </div>\n        <div className=\"mobile-tips\">\n          <h4>📱 スマートフォン利用のコツ</h4>\n          <ul>\n            <li>音素材を軽く長押しするとドラッグモードになります</li>\n            <li>ドラッグ中は画面がスクロールしないよう制御されます</li>\n            <li>青くハイライトされたトラックで指を離すと音素材が配置されます</li>\n            <li>横画面表示にするとより使いやすくなります</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SoundItem = ({ sound, onDragStart }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n\n  const handleDragStart = (e) => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    \n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n    \n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n    \n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = (e) => {\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // 長押し判定用のタイマーは設定せず、移動検知でのみドラッグを開始\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（15px以上移動）- 閾値を上げてより意図的な移動のみドラッグ扱い\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 15 || deltaY > 15)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      \n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n      \n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // ドラッグプレビューを削除\n    const dragPreview = document.querySelector('.mobile-drag-preview');\n    if (dragPreview) {\n      dragPreview.remove();\n    }\n    \n    // グローバル変数をクリア\n    window.currentDraggedSoundBlob = null;\n    window.currentDraggedSound = null;\n  };\n\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      // Blobの有効性をチェック\n      if (!(sound.audioBlob instanceof Blob) || sound.audioBlob.size === 0) {\n        console.error('無効なaudioBlob:', {\n          name: sound.name,\n          isBlob: sound.audioBlob instanceof Blob,\n          size: sound.audioBlob?.size\n        });\n        return;\n      }\n      \n      const audio = new Audio();\n      let audioUrl;\n      \n      try {\n        audioUrl = URL.createObjectURL(sound.audioBlob);\n        audio.src = audioUrl;\n        \n        audio.play()\n          .then(() => {\n            setIsPlaying(true);\n            \n            const handleEnded = () => {\n              setIsPlaying(false);\n              if (audioUrl) {\n                URL.revokeObjectURL(audioUrl); // URLをクリーンアップ\n              }\n              audio.removeEventListener('ended', handleEnded);\n            };\n            \n            audio.addEventListener('ended', handleEnded);\n            \n            // 音声の読み込みエラーもハンドリング\n            audio.addEventListener('error', (error) => {\n              console.error('音声読み込みエラー:', error);\n              setIsPlaying(false);\n              if (audioUrl) {\n                URL.revokeObjectURL(audioUrl);\n              }\n            });\n          })\n          .catch(error => {\n            console.error('音声再生エラー:', error);\n            if (audioUrl) {\n              URL.revokeObjectURL(audioUrl); // エラー時もクリーンアップ\n            }\n            setIsPlaying(false);\n          });\n      } catch (error) {\n        console.error('createObjectURLエラー:', error);\n        setIsPlaying(false);\n      }\n    } else {\n      console.log('再生条件不満足:', {\n        hasAudioBlob: !!sound.audioBlob,\n        isPlaying,\n        isDragging\n      });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = useCallback(() => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  }, [isDragging, touchMove, sound.name]);\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove, createDragPreview]);\n\n  return (\n    <div\n      className={`sound-item ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <div className=\"sound-info\">\n        <h4>{sound.name}</h4>\n        <div className=\"sound-tags\">\n          {sound.tags.map((tag, index) => (\n            <span key={index} className=\"sound-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"sound-actions\">\n        <button \n          className=\"play-sound-btn\"\n          onClick={playSound}\n          disabled={isPlaying}\n        >\n          {isPlaying ? '⏸️' : '▶️'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst TrackHeader = ({ track, onRemove, trackHeight }) => {\n  return (\n    <div className=\"track-header\" style={{ height: trackHeight }}>\n      <div className=\"track-info\">\n        <h4>{track.name}</h4>\n        <div className=\"track-actions\">\n          <button \n            className=\"remove-track-btn\"\n            onClick={() => onRemove(track.id)}\n            title=\"トラックを削除\"\n          >\n            🗑️\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Timeline = ({ bpm }) => {\n  const measures = TOTAL_MEASURES; // 16小節表示\n  const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n  return (\n    <div className=\"timeline\" style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n      {Array.from({ length: measures }, (_, measureIndex) => (\n        <div key={measureIndex} className=\"measure\">\n          <div className=\"measure-number\">{measureIndex + 1}</div>\n          <div className=\"beats\">\n            {Array.from({ length: beatsPerMeasure }, (_, beatIndex) => (\n              <div \n                key={beatIndex} \n                className=\"beat\"\n                style={{ width: BEAT_WIDTH }}\n              >\n                <div className=\"beat-main\">\n                  {beatIndex + 1}\n                </div>\n                <div className=\"beat-sub\">\n                  <div className=\"sub-beat-marker\">・</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Track = ({ track, onDrop, onDragOver, onRemoveClip, onClipDragStart, onDragEnd, trackHeight, bpm }) => {\n  const handleDrop = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = useCallback((e) => {\n    const { trackId, timePosition, sound } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, trackId, timePosition);\n  }, [onDrop]);\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = useCallback((e) => {\n    const { clip, newTrackId, timePosition } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, newTrackId, timePosition);\n  }, [onDrop]);\n\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n      };\n    }\n  }, [track.id, handleMobileDrop, handleMobileClipMove]);\n\n  return (\n    <div \n      className=\"track\"\n      style={{ height: trackHeight }}\n      data-track-id={track.id}\n      onDrop={handleDrop}\n      onDragOver={onDragOver}\n    >\n      <div className=\"track-grid\">\n        {/* 表拍（主要な拍）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => {\n          const isFirstBeat = index === 0;\n          const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n          const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n          return (\n            <div key={`main-${index}`} className={className} style={{ left: index * BEAT_WIDTH }} />\n          );\n        })}\n        {/* 裏拍（8分音符）の境界線を表示 */}\n        {Array.from({ length: TOTAL_BEATS }, (_, index) => (\n          <div key={`sub-${index}`} className=\"beat-line beat-line-sub\" style={{ left: index * BEAT_WIDTH + SUB_BEAT_WIDTH }} />\n        ))}\n      </div>\n      \n      {track.clips.map(clip => (\n        <AudioClip\n          key={clip.id}\n          clip={clip}\n          trackId={track.id}\n          onRemove={() => onRemoveClip(track.id, clip.id)}\n          onDragStart={onClipDragStart}\n          onDragEnd={onDragEnd}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AudioClip = ({ clip, trackId, onRemove, onDragStart, onDragEnd }) => {\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n\n  // clip.soundData の安全性をチェック\n  if (!clip || !clip.soundData) {\n    console.warn('無効なクリップデータ:', clip);\n    return null; // 無効なクリップは表示しない\n  }\n\n  React.useEffect(() => {\n    // 簡単な波形データ生成（実際の実装では音声解析が必要）\n    const generateWaveform = () => {\n      const points = 20; // 波形のポイント数\n      const data = [];\n      for (let i = 0; i < points; i++) {\n        data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n      }\n      setWaveformData(data);\n    };\n\n    generateWaveform();\n  }, [clip.soundData]);\n\n  const handleDragStart = (e) => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n    \n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // onDragStartコールバックを呼び出し\n    onDragStart(clip, trackId);\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = (e) => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // ドラッグモードは移動が確定してから有効化\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      onDragStart(clip, trackId);\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    if (onDragEnd) {\n      onDragEnd(null); // nullを渡してガード条件を満たす\n    }\n  };\n\n  return (\n    <div \n      className={`audio-clip ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={onDragEnd}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n      style={{\n        left: clip.startTime,\n        width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n      }}\n    >\n      <div className=\"clip-header\">\n        <span className=\"clip-name\">{clip.soundData.name}</span>\n        <button \n          className=\"remove-clip-btn\"\n          onClick={onRemove}\n          title=\"クリップを削除\"\n        >\n          ×\n        </button>\n      </div>\n      <div className=\"clip-waveform\">\n        {waveformData.length > 0 ? (\n          <svg className=\"waveform-svg\" width=\"100%\" height=\"30\">\n            {waveformData.map((height, index) => (\n              <rect\n                key={index}\n                x={`${(index / waveformData.length) * 100}%`}\n                y={`${(1 - height) * 15}`}\n                width={`${80 / waveformData.length}%`}\n                height={`${height * 30}`}\n                fill=\"rgba(255, 255, 255, 0.8)\"\n              />\n            ))}\n          </svg>\n        ) : (\n          <div className=\"waveform-placeholder\">🔊</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Playhead = ({ currentTime }) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  \n  return (\n    <div \n      className=\"playhead\"\n      style={{ left: safeCurrentTime }}\n    />\n  );\n};\n\nexport default DAWPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}