{"ast":null,"code":"import _objectSpread from\"/Users/nakataniyuutomo/Desktop/Programing/\\u30BB\\u3099\\u30DF\\u958B\\u767A/sound-library2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef,useEffect,useCallback}from'react';import'./DAWPage.css';// DAWの定数\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BEAT_WIDTH=100;// 1拍の幅（px）\nconst BEATS_PER_MEASURE=4;// 1小節あたりの拍数\nconst MEASURE_WIDTH=BEAT_WIDTH*BEATS_PER_MEASURE;// 1小節の幅（400px）\nconst SUB_BEAT_WIDTH=BEAT_WIDTH/2;// 8分音符の幅（50px）\nconst TOTAL_MEASURES=16;// 表示する小節数\nconst TOTAL_BEATS=TOTAL_MEASURES*BEATS_PER_MEASURE;// 総拍数\n// 時間モードの定数\nconst TIME_MODE_TOTAL_SECONDS=60;// 表示する総秒数\nconst PIXELS_PER_SECOND=100;// 1秒あたりのピクセル数\nconst DAWPage=()=>{// ユニークID生成用のカウンター\nconst trackIdCounterRef=useRef(1);// トラック名の番号管理用カウンター\nconst trackNameCounterRef=useRef(1);// LocalStorageからの自動復元機能\nconst loadAutoSavedProject=()=>{try{const autoSavedData=localStorage.getItem('dawProjectAutoSave');if(autoSavedData){const projectData=JSON.parse(autoSavedData);// トラックカウンターの復元\nif(projectData.trackNameCounter){trackNameCounterRef.current=projectData.trackNameCounter;}if(projectData.trackIdCounter){trackIdCounterRef.current=projectData.trackIdCounter;}// 無効なクリップをフィルタリング\nconst validTracks=(projectData.tracks||[]).map(track=>_objectSpread(_objectSpread({},track),{},{clips:(track.clips||[]).filter(clip=>{if(!clip.soundData||!clip.soundData.name){console.warn('自動保存データから無効なクリップを除外:',clip);return false;}return true;})}));return{tracks:validTracks.length>0?validTracks:[{id:Date.now(),name:'トラック 1',clips:[]}],bpm:projectData.bpm||120,isTimeMode:projectData.isTimeMode||false,secondsPerBeat:projectData.secondsPerBeat||0.5};}}catch(error){console.error('自動保存データの復元に失敗:',error);}return{tracks:[{id:Date.now(),name:'トラック 1',clips:[]}],bpm:120,isTimeMode:false,secondsPerBeat:0.5};};const initialData=loadAutoSavedProject();const[tracks,setTracks]=useState(initialData.tracks);const[bpm,setBpm]=useState(initialData.bpm);const[isPlaying,setIsPlaying]=useState(false);const[currentTime,setCurrentTime]=useState(0);const[audioContext,setAudioContext]=useState(null);const[trackHeight]=useState(80);const[playingAudios,setPlayingAudios]=useState(new Map());const[startPlayTime,setStartPlayTime]=useState(null);const[error,setError]=useState(null);const[sounds,setSounds]=useState([]);const[showSoundPanel,setShowSoundPanel]=useState(true);const[draggedClip,setDraggedClip]=useState(null);const[dragPreview,setDragPreview]=useState(null);const[draggedSoundDuration,setDraggedSoundDuration]=useState(400);// ドラッグ中の音素材の長さ\nconst[dragOffset,setDragOffset]=useState(0);// ドラッグ開始時のクリップ内オフセット\n// 時間モード関連の状態\nconst[isTimeMode,setIsTimeMode]=useState(initialData.isTimeMode);// false: 拍子モード, true: 秒数モード\nconst[secondsPerBeat,setSecondsPerBeat]=useState(initialData.secondsPerBeat);// 秒数モード時の1拍あたりの秒数\nconst[isExporting,setIsExporting]=useState(false);// 音源出力中フラグ\nconst timelineRef=useRef(null);const animationFrameRef=useRef(null);const dragOverTimeoutRef=useRef(null);useEffect(()=>{// Web Audio API の初期化\nconst ctx=new(window.AudioContext||window.webkitAudioContext)();setAudioContext(ctx);// LocalStorageから音素材を読み込み\nconst savedSounds=JSON.parse(localStorage.getItem('soundRecordings')||'[]');// audioDataからBlobを復元\nconst soundsWithBlob=savedSounds.map(sound=>{if(sound.audioData){try{// Base64データの検証\nif(!sound.audioData.includes(',')){console.error('無効なBase64フォーマット:',sound.name);return sound;}const base64Data=sound.audioData.split(',')[1];if(!base64Data||base64Data.length===0){console.error('Base64データが空です:',sound.name);return sound;}const byteCharacters=atob(base64Data);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);// Blobサイズの検証\nif(byteArray.length===0){console.error('Blobデータが空です:',sound.name);return sound;}const blob=new Blob([byteArray],{type:'audio/wav'});// Blobの有効性を確認\nif(blob.size===0){console.error('作成されたBlobのサイズが0です:',sound.name);return sound;}return _objectSpread(_objectSpread({},sound),{},{audioBlob:blob});}catch(error){console.error('音声データの復元に失敗:',sound.name,error);return sound;}}return sound;});// 有効な音素材のみをフィルタリング\nconst validSounds=soundsWithBlob.filter(sound=>{if(!sound.audioBlob){console.warn('audioBlobが存在しない音素材をスキップ:',sound.name);return false;}if(!(sound.audioBlob instanceof Blob)){console.warn('無効なBlob形式の音素材をスキップ:',sound.name);return false;}if(sound.audioBlob.size===0){console.warn('サイズが0のBlob音素材をスキップ:',sound.name);return false;}return true;});setSounds(validSounds);// 無効な音素材があった場合はLocalStorageを更新\nif(validSounds.length!==soundsWithBlob.length){const validSoundsForStorage=validSounds.map(sound=>_objectSpread(_objectSpread({},sound),{},{audioBlob:undefined// Blobは保存しない\n}));localStorage.setItem('soundRecordings',JSON.stringify(validSoundsForStorage));}return()=>{if(ctx&&ctx.state!=='closed'){ctx.close().catch(error=>{console.warn('初期AudioContext のクローズに失敗:',error);});}if(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);}if(dragOverTimeoutRef.current){clearTimeout(dragOverTimeoutRef.current);}// 再生中の音声をすべて停止・クリーンアップ\n// useEffect内でplayingAudiosの最新値を取得\nsetPlayingAudios(currentPlayingAudios=>{currentPlayingAudios.forEach(_ref=>{let{audio,timeoutId,audioUrl}=_ref;if(timeoutId){clearTimeout(timeoutId);}if(audio){audio.pause();audio.src='';}if(audioUrl){URL.revokeObjectURL(audioUrl);}});return new Map();// 空のMapを返す\n});// グローバル変数をクリーンアップ\nif(window.currentDraggedSoundBlob){window.currentDraggedSoundBlob=null;}if(window.currentDraggedSound){window.currentDraggedSound=null;}};},[]);// 音声ファイルの継続時間を取得してピクセル幅に変換\nconst getAudioDuration=useCallback(function(audioBlob){let currentBpm=arguments.length>1&&arguments[1]!==undefined?arguments[1]:bpm;let currentSecondsPerBeat=arguments.length>2&&arguments[2]!==undefined?arguments[2]:secondsPerBeat;return new Promise(async resolve=>{if(!audioBlob||!(audioBlob instanceof Blob)){resolve(400);return;}// AudioContextを使用した方法を優先\nif(audioContext){try{const arrayBuffer=await audioBlob.arrayBuffer();const audioBuffer=await audioContext.decodeAudioData(arrayBuffer);const durationInSeconds=audioBuffer.duration;if(isFinite(durationInSeconds)&&durationInSeconds>0){let pixelsPerSecond;if(isTimeMode){// 秒数モード：1拍の秒数に基づいてピクセル/秒を計算\nconst beatWidthInPixels=currentSecondsPerBeat*PIXELS_PER_SECOND;pixelsPerSecond=PIXELS_PER_SECOND;}else{// 拍子モード：BPMベース\npixelsPerSecond=currentBpm/60*100;}const widthInPixels=durationInSeconds*pixelsPerSecond;resolve(widthInPixels);return;}}catch(error){console.error('AudioContext方式でエラー:',error);}}resolve(400);});},[audioContext,bpm,isTimeMode,secondsPerBeat]);// 時間モードとBPMモードを切り替える関数\nconst toggleTimeMode=useCallback(async()=>{const newTimeMode=!isTimeMode;setIsTimeMode(newTimeMode);// 既存のクリップのdurationを新しいモードで再計算\nconst updatedTracks=await Promise.all(tracks.map(async track=>{const updatedClips=await Promise.all(track.clips.map(async clip=>{if(clip.soundData&&clip.soundData.audioBlob){try{const arrayBuffer=await clip.soundData.audioBlob.arrayBuffer();const audioBuffer=await audioContext.decodeAudioData(arrayBuffer);const durationInSeconds=audioBuffer.duration;let pixelsPerSecond;if(newTimeMode){pixelsPerSecond=PIXELS_PER_SECOND;}else{pixelsPerSecond=bpm/60*100;}const newDuration=durationInSeconds*pixelsPerSecond;return _objectSpread(_objectSpread({},clip),{},{duration:newDuration});}catch(error){console.warn('クリップのduration再計算に失敗:',error);return clip;}}return clip;}));return _objectSpread(_objectSpread({},track),{},{clips:updatedClips});}));setTracks(updatedTracks);},[isTimeMode,tracks,audioContext,bpm]);// 秒数モードでの1拍あたりの秒数を変更する関数\nconst handleSecondsPerBeatChange=useCallback(async newSecondsPerBeat=>{setSecondsPerBeat(newSecondsPerBeat);// 秒数モードの場合、既存のクリップのdurationを再計算\nif(isTimeMode){const updatedTracks=await Promise.all(tracks.map(async track=>{const updatedClips=await Promise.all(track.clips.map(async clip=>{if(clip.soundData&&clip.soundData.audioBlob){try{const newDuration=await getAudioDuration(clip.soundData.audioBlob,bpm,newSecondsPerBeat);return _objectSpread(_objectSpread({},clip),{},{duration:newDuration});}catch(error){console.warn('クリップのduration再計算に失敗:',error);return clip;}}return clip;}));return _objectSpread(_objectSpread({},track),{},{clips:updatedClips});}));setTracks(updatedTracks);}},[isTimeMode,tracks,getAudioDuration,bpm]);// スナップ処理（拍子モード vs 秒数モード）\nconst getSnapPosition=useCallback(position=>{if(isTimeMode){// 秒数モード：1拍（秒数）単位でスナップ\nconst beatWidthInPixels=secondsPerBeat*PIXELS_PER_SECOND;const subBeatWidth=beatWidthInPixels/2;// 半拍でスナップ\nreturn Math.round(position/subBeatWidth)*subBeatWidth;}else{// 拍子モード：8分音符単位でスナップ\nreturn Math.round(position/SUB_BEAT_WIDTH)*SUB_BEAT_WIDTH;}},[isTimeMode,secondsPerBeat]);// プレイヘッドのアニメーション更新\nconst updatePlayhead=useCallback(()=>{const animate=()=>{if(isPlaying&&startPlayTime){const elapsed=(Date.now()-startPlayTime)/1000;// 経過時間（秒）\nlet pixelsPerSecond;if(isTimeMode){// 秒数モード：直接1秒 = PIXELS_PER_SECONDピクセル\npixelsPerSecond=PIXELS_PER_SECOND;}else{// 拍子モード：BPMに基づいたピクセル/秒\npixelsPerSecond=bpm/60*100;}const newCurrentTime=elapsed*pixelsPerSecond;// 有効な数値かチェック\nif(isFinite(newCurrentTime)&&newCurrentTime>=0){setCurrentTime(newCurrentTime);}else{console.warn('無効なcurrentTime:',newCurrentTime,'elapsed:',elapsed,'pixelsPerSecond:',pixelsPerSecond);}// 次のフレームを要求\nanimationFrameRef.current=requestAnimationFrame(animate);}};if(isPlaying&&startPlayTime){animate();}},[isPlaying,startPlayTime,bpm,isTimeMode]);useEffect(()=>{if(isPlaying){if(!startPlayTime){// 再生開始時にstartPlayTimeを設定\nlet pixelsPerSecond;if(isTimeMode){pixelsPerSecond=PIXELS_PER_SECOND;}else{pixelsPerSecond=bpm/60*100;}if(isFinite(pixelsPerSecond)&&pixelsPerSecond>0){const timeInSeconds=currentTime/pixelsPerSecond;if(isFinite(timeInSeconds)&&timeInSeconds>=0){setStartPlayTime(Date.now()-timeInSeconds*1000);}else{setStartPlayTime(Date.now());}}else{setStartPlayTime(Date.now());}}}else{// 再生停止時にアニメーションをクリア\nif(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);animationFrameRef.current=null;}setStartPlayTime(null);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isPlaying,bpm,currentTime,isTimeMode]);// startPlayTimeが設定されたときにアニメーションを開始\nuseEffect(()=>{if(isPlaying&&startPlayTime){updatePlayhead();}},[isPlaying,startPlayTime,updatePlayhead]);// BPM変更時のハンドラー\nconst handleBpmChange=useCallback(async newBpm=>{setBpm(newBpm);// 既存のクリップのdurationを新しいBPMで再計算\nconst updatedTracks=await Promise.all(tracks.map(async track=>{const updatedClips=await Promise.all(track.clips.map(async clip=>{if(clip.soundData&&clip.soundData.audioBlob){try{const newDuration=await getAudioDuration(clip.soundData.audioBlob,newBpm);return _objectSpread(_objectSpread({},clip),{},{duration:newDuration});}catch(error){console.warn('クリップのduration更新に失敗:',error);return clip;}}return clip;}));return _objectSpread(_objectSpread({},track),{},{clips:updatedClips});}));setTracks(updatedTracks);},[tracks,getAudioDuration]);// プロジェクト保存機能\nconst saveProject=()=>{try{const projectData={version:'1.0',bpm:bpm,tracks:tracks,sounds:sounds.map(sound=>_objectSpread(_objectSpread({},sound),{},{audioBlob:null,// Blobは別途保存\naudioData:sound.audioData// base64データを保持\n})),timestamp:Date.now(),trackNameCounter:trackNameCounterRef.current,trackIdCounter:trackIdCounterRef.current,isTimeMode:isTimeMode,secondsPerBeat:secondsPerBeat};const projectJson=JSON.stringify(projectData,null,2);const blob=new Blob([projectJson],{type:'application/json'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=\"music-project-\".concat(new Date().toISOString().slice(0,19).replace(/:/g,'-'),\".json\");document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);}catch(error){console.error('プロジェクト保存エラー:',error);setError('プロジェクトの保存に失敗しました。');}};// プロジェクト読み込み機能\nconst loadProject=event=>{const file=event.target.files[0];if(!file)return;const reader=new FileReader();reader.onload=e=>{try{const projectData=JSON.parse(e.target.result);// バージョンチェック\nif(!projectData.version){throw new Error('不正なプロジェクトファイルです');}// 音声データ復元用のヘルパー関数\nconst restoreAudioBlob=soundData=>{if(soundData&&soundData.audioData){try{const byteCharacters=atob(soundData.audioData.split(',')[1]);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'audio/wav'});return _objectSpread(_objectSpread({},soundData),{},{audioBlob:blob});}catch(error){console.error('音声データの復元に失敗:',soundData.name||'unknown',error);return soundData;}}return soundData;};// BPMを復元\nsetBpm(projectData.bpm||120);// 時間モード設定を復元\nsetIsTimeMode(projectData.isTimeMode||false);setSecondsPerBeat(projectData.secondsPerBeat||0.5);// トラックを復元（クリップ内の音声データも復元）\nif(projectData.tracks){const restoredTracks=projectData.tracks.map(track=>_objectSpread(_objectSpread({},track),{},{clips:track.clips.map(clip=>_objectSpread(_objectSpread({},clip),{},{soundData:restoreAudioBlob(clip.soundData)})).filter(clip=>{// 無効なクリップを除外\nif(!clip.soundData||!clip.soundData.name){console.warn('無効なクリップを除外:',clip);return false;}return true;})}));setTracks(restoredTracks);}// カウンターを復元\nif(projectData.trackNameCounter){trackNameCounterRef.current=projectData.trackNameCounter;}if(projectData.trackIdCounter){trackIdCounterRef.current=projectData.trackIdCounter;}// 音素材を復元（既存の音素材に追加）\nif(projectData.sounds){const restoredSounds=projectData.sounds.map(sound=>restoreAudioBlob(sound));// 既存の音素材と読み込んだ音素材を結合\nsetSounds(prevSounds=>{const maxId=prevSounds.length>0?Math.max(...prevSounds.map(s=>s.id)):0;const existingNames=new Set(prevSounds.map(s=>s.name));const newSounds=restoredSounds.map((sound,index)=>{let newName=sound.name;let counter=1;// 名前の重複をチェックして、重複する場合は番号を付ける\nwhile(existingNames.has(newName)){newName=\"\".concat(sound.name,\" (\").concat(counter,\")\");counter++;}existingNames.add(newName);return _objectSpread(_objectSpread({},sound),{},{id:maxId+index+1,// 新しいIDを割り当て\nname:newName// 重複しない名前を設定\n});});return[...prevSounds,...newSounds];});}setError(null);// 読み込み後に自動保存データも更新\nsetTimeout(()=>{const autoSaveData={version:'1.0',bpm:projectData.bpm||120,tracks:projectData.tracks||[],timestamp:Date.now(),trackNameCounter:projectData.trackNameCounter||1,trackIdCounter:projectData.trackIdCounter||1};localStorage.setItem('dawProjectAutoSave',JSON.stringify(autoSaveData));},100);}catch(error){console.error('プロジェクト読み込みエラー:',error);setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');}};reader.readAsText(file);// ファイル選択をリセット\nevent.target.value='';};// 音源出力機能\nconst exportAudio=async()=>{if(!audioContext){setError('AudioContextが初期化されていません。');return;}setIsExporting(true);try{// 全トラックの全クリップの最大終了時間を計算\nlet maxDuration=0;tracks.forEach(track=>{track.clips.forEach(clip=>{const pixelsPerSecond=bpm/60*100;const clipStartTimeInSeconds=clip.startTime/pixelsPerSecond;const clipDurationInSeconds=clip.duration/pixelsPerSecond;const clipEndTime=clipStartTimeInSeconds+clipDurationInSeconds;maxDuration=Math.max(maxDuration,clipEndTime);});});if(maxDuration===0){setError('出力する音声がありません。音素材を配置してください。');setIsExporting(false);return;}// 出力用AudioContextを作成（44.1kHz）\nconst exportContext=new AudioContext({sampleRate:44100});const bufferLength=Math.ceil(maxDuration*exportContext.sampleRate);const outputBuffer=exportContext.createBuffer(2,bufferLength,exportContext.sampleRate);const leftChannel=outputBuffer.getChannelData(0);const rightChannel=outputBuffer.getChannelData(1);// 各トラックの各クリップを処理\nfor(const track of tracks){for(const clip of track.clips){if(clip.soundData&&clip.soundData.audioBlob){try{const arrayBuffer=await clip.soundData.audioBlob.arrayBuffer();const audioBuffer=await exportContext.decodeAudioData(arrayBuffer);const pixelsPerSecond=bpm/60*100;const startTimeInSamples=Math.floor(clip.startTime/pixelsPerSecond*exportContext.sampleRate);// 音声をミックス\nfor(let channel=0;channel<Math.min(audioBuffer.numberOfChannels,2);channel++){const sourceData=audioBuffer.getChannelData(channel);const targetData=channel===0?leftChannel:rightChannel;for(let i=0;i<sourceData.length&&startTimeInSamples+i<targetData.length;i++){targetData[startTimeInSamples+i]+=sourceData[i];}}// モノラル音源の場合は両チャンネルにコピー\nif(audioBuffer.numberOfChannels===1){const sourceData=audioBuffer.getChannelData(0);for(let i=0;i<sourceData.length&&startTimeInSamples+i<rightChannel.length;i++){rightChannel[startTimeInSamples+i]+=sourceData[i];}}}catch(error){console.error('クリップの処理エラー:',error);}}}}// WAVファイルとして出力\nconst wavBlob=audioBufferToWav(outputBuffer);const url=URL.createObjectURL(wavBlob);const link=document.createElement('a');link.href=url;link.download=\"exported-music-\".concat(new Date().toISOString().slice(0,19).replace(/:/g,'-'),\".wav\");document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);if(exportContext&&exportContext.state!=='closed'){await exportContext.close().catch(error=>{console.warn('Export AudioContext のクローズに失敗:',error);});}}catch(error){console.error('音源出力エラー:',error);setError('音源の出力に失敗しました。');}finally{setIsExporting(false);}};// AudioBufferをWAVファイルに変換\nconst audioBufferToWav=buffer=>{const length=buffer.length;const numberOfChannels=buffer.numberOfChannels;const sampleRate=buffer.sampleRate;const bytesPerSample=2;const blockAlign=numberOfChannels*bytesPerSample;const byteRate=sampleRate*blockAlign;const dataSize=length*blockAlign;const bufferSize=44+dataSize;const arrayBuffer=new ArrayBuffer(bufferSize);const view=new DataView(arrayBuffer);// WAVファイルヘッダー\nconst writeString=(offset,string)=>{for(let i=0;i<string.length;i++){view.setUint8(offset+i,string.charCodeAt(i));}};writeString(0,'RIFF');view.setUint32(4,bufferSize-8,true);writeString(8,'WAVE');writeString(12,'fmt ');view.setUint32(16,16,true);view.setUint16(20,1,true);view.setUint16(22,numberOfChannels,true);view.setUint32(24,sampleRate,true);view.setUint32(28,byteRate,true);view.setUint16(32,blockAlign,true);view.setUint16(34,bytesPerSample*8,true);writeString(36,'data');view.setUint32(40,dataSize,true);// 音声データ\nlet offset=44;for(let i=0;i<length;i++){for(let channel=0;channel<numberOfChannels;channel++){const sample=buffer.getChannelData(channel)[i];const intSample=Math.max(-1,Math.min(1,sample))*0x7FFF;view.setInt16(offset,intSample,true);offset+=2;}}return new Blob([arrayBuffer],{type:'audio/wav'});};const addTrack=()=>{// より確実にユニークなIDを生成\ntrackIdCounterRef.current+=1;const uniqueId=Date.now()+trackIdCounterRef.current;// トラック名の番号を増加（削除されても番号は戻らない）\ntrackNameCounterRef.current+=1;const trackName=\"\\u30C8\\u30E9\\u30C3\\u30AF \".concat(trackNameCounterRef.current);const newTrack={id:uniqueId,name:trackName,clips:[]};setTracks(prevTracks=>[...prevTracks,newTrack]);};const removeTrack=trackId=>{setTracks(prevTracks=>{if(prevTracks.length>1){return prevTracks.filter(track=>track.id!==trackId);}return prevTracks;});};const handleDrop=async(e,trackId,timePosition)=>{e.preventDefault();setDragPreview(null);try{// 既存のクリップの移動かどうかチェック\nif(draggedClip){// ドラッグオフセットを考慮した新しい開始位置を計算\nconst adjustedPosition=timePosition-dragOffset;// 拍または秒に合わせて位置を調整\nconst snappedPosition=Math.max(0,getSnapPosition(adjustedPosition));// 既存クリップの移動\nconst updatedClip=_objectSpread(_objectSpread({},draggedClip),{},{startTime:snappedPosition,trackId:trackId});setTracks(prevTracks=>prevTracks.map(track=>{if(track.id===draggedClip.originalTrackId&&track.id===trackId){// 同じトラック内での移動\nreturn _objectSpread(_objectSpread({},track),{},{clips:track.clips.map(clip=>clip.id===draggedClip.id?updatedClip:clip)});}else if(track.id===draggedClip.originalTrackId){// 元のトラックからクリップを削除\nreturn _objectSpread(_objectSpread({},track),{},{clips:track.clips.filter(clip=>clip.id!==draggedClip.id)});}else if(track.id===trackId){// 新しいトラックにクリップを追加\nreturn _objectSpread(_objectSpread({},track),{},{clips:[...track.clips,updatedClip]});}return track;}));setDraggedClip(null);setDragOffset(0);return;}// 新しい音素材の配置\nlet soundData;try{// dataTransferからデータを取得\nconst jsonData=e.dataTransfer?e.dataTransfer.getData('application/json'):'';if(jsonData){soundData=JSON.parse(jsonData);}else{// モバイルの場合はグローバル変数から取得\nsoundData=window.currentDraggedSound;}}catch(error){console.error('ドラッグデータの取得に失敗:',error);soundData=window.currentDraggedSound;// フォールバック\n}if(!soundData){console.error('音素材データが見つかりません');setError('音素材データが見つかりません。再度お試しください。');return;}// soundDataの必要なプロパティをチェック\nif(!soundData.name){console.error('音素材の名前が見つかりません:',soundData);setError('音素材の名前が不正です。再度お試しください。');return;}// グローバル変数からaudioBlobを復元\nif(window.currentDraggedSoundBlob){soundData.audioBlob=window.currentDraggedSoundBlob;window.currentDraggedSoundBlob=null;// クリーンアップ\n}// グローバル変数をクリア\nwindow.currentDraggedSound=null;// 音声の実際の継続時間を取得（現在のBPMに基づいて）\nlet duration=400;// デフォルト値（1小節）\nif(soundData.audioBlob){try{duration=await getAudioDuration(soundData.audioBlob,bpm);}catch(error){console.warn('音声継続時間の取得に失敗しました:',error);}}// durationが有効な値かチェック\nif(!isFinite(duration)||duration<=0){console.warn('無効なduration:',duration,'デフォルト値を使用');duration=400;// 1小節分\n}// 新しい音素材の場合は通常のスナップ処理\nconst snappedPosition=getSnapPosition(timePosition);const newClip={id:Date.now()+Math.random(),// より確実にユニークなIDを生成\nsoundData:soundData,startTime:snappedPosition,duration:duration,trackId:trackId};// 関数型更新を使用して最新の状態を確実に取得\nsetTracks(prevTracks=>{const updatedTracks=prevTracks.map(track=>track.id===trackId?_objectSpread(_objectSpread({},track),{},{clips:[...track.clips,newClip]}):track);return updatedTracks;});}catch(error){console.error('ドロップエラー:',error);setError('音素材の配置に失敗しました。再度お試しください。');}};const handleDragOver=e=>{e.preventDefault();// ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\nif(draggedClip){e.dataTransfer.dropEffect='move';}else{e.dataTransfer.dropEffect='copy';}// スロットリング - 16ms（60FPS）間隔で実行を制限\nif(dragOverTimeoutRef.current){return;}// 必要な情報を事前に抽出\nconst clientX=e.clientX;const currentTarget=e.currentTarget;dragOverTimeoutRef.current=setTimeout(()=>{dragOverTimeoutRef.current=null;updateDragPreview(clientX,currentTarget);},16);};const updateDragPreview=(clientX,trackElement)=>{// null チェックを追加\nif(!trackElement||!timelineRef.current){return;}// 初回ドラッグプレビュー表示時に強制クリーンアップタイマーを設定\nif(!window.dragCleanupTimer){window.dragCleanupTimer=setTimeout(()=>{cleanupDragState();},10000);// 10秒後に強制クリーンアップ\n}try{// ドラッグプレビューの更新\nconst rect=trackElement.getBoundingClientRect();const timePosition=clientX-rect.left;let snappedPosition;if(draggedClip){// 既存クリップの場合：ドラッグオフセットを考慮\nconst adjustedPosition=timePosition-dragOffset;snappedPosition=Math.max(0,getSnapPosition(adjustedPosition));}else{// 新しい音素材の場合：通常の処理\nsnappedPosition=getSnapPosition(timePosition);}const trackRect=trackElement.getBoundingClientRect();const tracksAreaRect=timelineRef.current.getBoundingClientRect();if(tracksAreaRect&&trackElement.dataset&&trackElement.dataset.trackId){const relativeTop=trackRect.top-tracksAreaRect.top;const trackId=parseInt(trackElement.dataset.trackId);// trackIdが有効な数値かチェック\nif(isNaN(trackId)){return;}// プレビュー幅を決定\nlet previewWidth=400;// デフォルト値（1小節）\nif(draggedClip){// 既存クリップの場合\npreviewWidth=isFinite(draggedClip.duration)&&draggedClip.duration>0?draggedClip.duration:400;}else{// 新しい音素材の場合、事前に計算された長さを使用\npreviewWidth=draggedSoundDuration;}setDragPreview({left:snappedPosition,top:relativeTop+10,width:previewWidth,trackId:trackId});}}catch(error){console.warn('ドラッグプレビュー更新エラー:',error);// エラーが発生した場合はプレビューをクリア\nsetDragPreview(null);}};const removeClip=(trackId,clipId)=>{setTracks(prevTracks=>prevTracks.map(track=>track.id===trackId?_objectSpread(_objectSpread({},track),{},{clips:track.clips.filter(clip=>clip.id!==clipId)}):track));};// クリップのドラッグ開始\nconst handleClipDragStart=(clip,originalTrackId,mouseX,clipElement)=>{// クリップ内でのマウス位置のオフセットを計算\nconst clipRect=clipElement.getBoundingClientRect();const offsetInClip=mouseX-clipRect.left;setDraggedClip(_objectSpread(_objectSpread({},clip),{},{originalTrackId}));setDragOffset(offsetInClip);};// ドラッグ状態の完全なクリーンアップ\nconst cleanupDragState=useCallback(()=>{// ドラッグオーバーのタイムアウトをクリア\nif(dragOverTimeoutRef.current){clearTimeout(dragOverTimeoutRef.current);dragOverTimeoutRef.current=null;}// 強制クリーンアップタイマーをクリア\nif(window.dragCleanupTimer){clearTimeout(window.dragCleanupTimer);window.dragCleanupTimer=null;}// すべてのドラッグ関連の状態をリセット\nsetDraggedClip(null);setDragPreview(null);setDraggedSoundDuration(400);setDragOffset(0);// DOM要素のクリーンアップ\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// モバイル用のドラッグプレビューを削除\nconst mobileDragPreview=document.querySelector('.mobile-drag-preview');if(mobileDragPreview){mobileDragPreview.remove();}// グローバル変数のクリーンアップ\nif(window.currentDraggedSoundBlob){window.currentDraggedSoundBlob=null;}if(window.currentDraggedSound){window.currentDraggedSound=null;}// ボディクラスのクリーンアップ\ndocument.body.classList.remove('dragging');},[]);// コンポーネントマウント時にグローバルコールバックを設定\nuseEffect(()=>{window.cleanupDragStateCallback=cleanupDragState;// グローバルなドラッグ終了イベントリスナーを追加\nconst handleGlobalDragEnd=()=>{cleanupDragState();};const handleGlobalDragLeave=e=>{// ドキュメント外にドラッグが出た場合\nif(!e.relatedTarget||e.relatedTarget.nodeName==='HTML'){cleanupDragState();}};// ドキュメントレベルでイベントリスナーを設定\ndocument.addEventListener('dragend',handleGlobalDragEnd);document.addEventListener('dragleave',handleGlobalDragLeave);// クリーンアップ関数\nreturn()=>{if(window.cleanupDragStateCallback===cleanupDragState){window.cleanupDragStateCallback=null;}document.removeEventListener('dragend',handleGlobalDragEnd);document.removeEventListener('dragleave',handleGlobalDragLeave);};},[cleanupDragState]);// ドラッグ終了時のクリーンアップ\nconst handleDragEnd=e=>{// ドロップが正常に処理されなかった場合、元の状態を保持\nif(draggedClip&&e&&e.dataTransfer&&e.dataTransfer.dropEffect==='none'){}// 完全なクリーンアップ\ncleanupDragState();};const play=async()=>{try{// AudioContextが中断されている場合は再開\nif(audioContext&&audioContext.state==='suspended'){await audioContext.resume();}setIsPlaying(true);// 現在の時間位置に基づいて、再生すべきクリップを見つける\nlet pixelsPerSecond;if(isTimeMode){pixelsPerSecond=PIXELS_PER_SECOND;}else{pixelsPerSecond=bpm/60*100;}const currentTimeInSeconds=currentTime/pixelsPerSecond;// 各トラックのクリップを再生\nconst newPlayingAudios=new Map();tracks.forEach(track=>{track.clips.forEach(clip=>{// clip.durationが有効な値かチェック\nif(!isFinite(clip.duration)||clip.duration<=0){console.warn('無効なclip.duration:',clip.duration,'クリップをスキップします');return;}const clipStartTimeInSeconds=clip.startTime/pixelsPerSecond;const clipEndTimeInSeconds=clipStartTimeInSeconds+clip.duration/pixelsPerSecond;// 計算結果が有効かチェック\nif(!isFinite(clipStartTimeInSeconds)||!isFinite(clipEndTimeInSeconds)){console.warn('無効な時間計算:',{clipStartTimeInSeconds,clipEndTimeInSeconds});return;}// 現在の時間位置がクリップの範囲内または今後再生される場合\nif(clipEndTimeInSeconds>currentTimeInSeconds){const delay=Math.max(0,clipStartTimeInSeconds-currentTimeInSeconds);if(isFinite(delay)&&delay>=0){scheduleClipPlayback(clip,delay*1000,newPlayingAudios);}}});});setPlayingAudios(newPlayingAudios);}catch(error){console.error('再生エラー:',error);setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');}};const scheduleClipPlayback=(clip,delayMs,playingAudiosMap)=>{if(clip.soundData&&clip.soundData.audioBlob&&clip.soundData.audioBlob instanceof Blob){try{const audio=new Audio();const audioUrl=URL.createObjectURL(clip.soundData.audioBlob);audio.src=audioUrl;const timeoutId=setTimeout(()=>{audio.play().catch(error=>{console.error('音声再生エラー:',error);URL.revokeObjectURL(audioUrl);// メモリリークを防ぐ\n});},delayMs);// 音声終了時にURLを解放\naudio.addEventListener('ended',()=>{URL.revokeObjectURL(audioUrl);});playingAudiosMap.set(clip.id,{audio,timeoutId,audioUrl});}catch(error){console.error('createObjectURL エラー:',error,'audioBlob:',clip.soundData.audioBlob);}}else{var _clip$soundData,_clip$soundData2,_clip$soundData3,_clip$soundData4,_clip$soundData5;console.warn('audioBlobが無効です。クリップ情報:',{clipId:clip.id,soundDataName:(_clip$soundData=clip.soundData)===null||_clip$soundData===void 0?void 0:_clip$soundData.name,hasAudioData:!!((_clip$soundData2=clip.soundData)!==null&&_clip$soundData2!==void 0&&_clip$soundData2.audioData),hasAudioBlob:!!((_clip$soundData3=clip.soundData)!==null&&_clip$soundData3!==void 0&&_clip$soundData3.audioBlob),audioBlobType:typeof((_clip$soundData4=clip.soundData)===null||_clip$soundData4===void 0?void 0:_clip$soundData4.audioBlob),isInstanceOfBlob:((_clip$soundData5=clip.soundData)===null||_clip$soundData5===void 0?void 0:_clip$soundData5.audioBlob)instanceof Blob});// AudioBlobが無効な場合、audioDataから復元を試行\nif(clip.soundData&&clip.soundData.audioData&&!clip.soundData.audioBlob){try{const byteCharacters=atob(clip.soundData.audioData.split(',')[1]);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'audio/wav'});// クリップのsoundDataを更新\nclip.soundData.audioBlob=blob;// 再帰的に再試行\nscheduleClipPlayback(clip,delayMs,playingAudiosMap);return;}catch(restoreError){console.error('audioDataからのBlob復元に失敗:',restoreError);}}}};const pause=()=>{setIsPlaying(false);// 再生中の音声を一時停止\nplayingAudios.forEach(_ref2=>{let{audio,timeoutId,audioUrl}=_ref2;if(timeoutId){clearTimeout(timeoutId);}if(!audio.paused){audio.pause();}// URLを解放\nif(audioUrl){URL.revokeObjectURL(audioUrl);}});};const stop=()=>{setIsPlaying(false);setCurrentTime(0);// 再生中の音声を停止\nplayingAudios.forEach(_ref3=>{let{audio,timeoutId,audioUrl}=_ref3;if(timeoutId){clearTimeout(timeoutId);}audio.pause();audio.currentTime=0;// URLを解放\nif(audioUrl){URL.revokeObjectURL(audioUrl);}});setPlayingAudios(new Map());};// タイムラインデータの自動保存機能\nuseEffect(()=>{const autoSaveProject=()=>{try{const projectData={version:'1.0',bpm:bpm,tracks:tracks,timestamp:Date.now(),trackNameCounter:trackNameCounterRef.current,trackIdCounter:trackIdCounterRef.current,isTimeMode:isTimeMode,secondsPerBeat:secondsPerBeat};localStorage.setItem('dawProjectAutoSave',JSON.stringify(projectData));}catch(error){console.error('プロジェクトの自動保存に失敗:',error);}};// 初期化後の自動保存（tracksやbpmが変更された時）\nif(tracks.length>0){autoSaveProject();}},[tracks,bpm,isTimeMode,secondsPerBeat]);// 音素材の更新監視（他のページで音が追加された場合の対応）\nuseEffect(()=>{const handleVisibilityChange=()=>{if(!document.hidden){// ページが表示されたときに音素材を再読み込み\nconst savedSounds=JSON.parse(localStorage.getItem('soundRecordings')||'[]');// 音声データ復元処理（既存のロジックを再利用）\nconst soundsWithBlob=savedSounds.map(sound=>{if(sound.audioData){try{const base64Data=sound.audioData.split(',')[1];if(!base64Data||base64Data.length===0){return sound;}const byteCharacters=atob(base64Data);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'audio/wav'});return _objectSpread(_objectSpread({},sound),{},{audioBlob:blob});}catch(error){console.error('音声データの復元に失敗:',sound.name,error);return sound;}}return sound;});const validSounds=soundsWithBlob.filter(sound=>sound.audioBlob&&sound.audioBlob instanceof Blob&&sound.audioBlob.size>0);setSounds(validSounds);}};document.addEventListener('visibilitychange',handleVisibilityChange);return()=>{document.removeEventListener('visibilitychange',handleVisibilityChange);};},[]);// 自動保存データをクリアする機能\nconst clearAutoSave=()=>{try{localStorage.removeItem('dawProjectAutoSave');// 初期状態にリセット\nsetTracks([{id:Date.now(),name:'トラック 1',clips:[]}]);setBpm(120);trackNameCounterRef.current=1;trackIdCounterRef.current=1;setError(null);alert('✅ プロジェクトをリセットしました');}catch(error){console.error('自動保存データのクリアに失敗:',error);setError('プロジェクトのリセットに失敗しました');}};// 無効なクリップを除外する関数\nconst cleanupInvalidClips=()=>{setTracks(prevTracks=>{const cleanedTracks=prevTracks.map(track=>_objectSpread(_objectSpread({},track),{},{clips:track.clips.filter(clip=>{if(!clip.soundData||!clip.soundData.name){console.warn('無効なクリップを除外:',clip);return false;}return true;})}));const removedCount=prevTracks.reduce((total,track)=>total+track.clips.length,0)-cleanedTracks.reduce((total,track)=>total+track.clips.length,0);if(removedCount>0){}return cleanedTracks;});};// 初期化時に無効なクリップをクリーンアップ\nuseEffect(()=>{const timer=setTimeout(()=>{cleanupInvalidClips();},1000);// 1秒後に実行\nreturn()=>clearTimeout(timer);},[]);// コンポーネントアンマウント時の包括的クリーンアップ\nuseEffect(()=>{return()=>{// ドラッグ状態のクリーンアップ\ncleanupDragState();// 再生中の音声をすべて停止\nsetPlayingAudios(currentPlayingAudios=>{currentPlayingAudios.forEach(_ref4=>{let{audio,timeoutId,audioUrl}=_ref4;if(timeoutId){clearTimeout(timeoutId);}if(audio){audio.pause();audio.src='';}if(audioUrl){URL.revokeObjectURL(audioUrl);}});return new Map();});// AudioContextをクリーンアップ\nif(audioContext&&audioContext.state!=='closed'){audioContext.close().catch(error=>{console.warn('AudioContext のクローズに失敗:',error);});}// アニメーションフレームをクリア\nif(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);}// タイムアウトをクリア\nif(dragOverTimeoutRef.current){clearTimeout(dragOverTimeoutRef.current);}};},[cleanupDragState,audioContext]);return/*#__PURE__*/_jsxs(\"div\",{className:\"daw-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFB9 \\u97F3\\u697D\\u3065\\u304F\\u308A\\u30DA\\u30FC\\u30B8\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u97F3\\u7D20\\u6750\\u3092\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u97F3\\u697D\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u3087\\u3046\\uFF01\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u26A0\\uFE0F \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"daw-controls card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-controls-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-controls\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button-secondary\",onClick:()=>setShowSoundPanel(!showSoundPanel),children:showSoundPanel?'🎵 音素材を隠す':'🎵 音素材を表示'})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-controls\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"project-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button-secondary\",onClick:saveProject,children:\"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"button-secondary file-input-label\",children:[\"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".json\",onChange:loadProject,style:{display:'none'}})]}),/*#__PURE__*/_jsx(\"button\",{className:\"button-warning\",onClick:()=>{if(window.confirm('🗑️ プロジェクトをリセットしますか？\\n\\n現在の作業内容がすべて削除されます。')){clearAutoSave();}},title:\"\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\uFF08\\u81EA\\u52D5\\u4FDD\\u5B58\\u30C7\\u30FC\\u30BF\\u3082\\u30AF\\u30EA\\u30A2\\uFF09\",children:\"\\uD83D\\uDDD1\\uFE0F \\u30EA\\u30BB\\u30C3\\u30C8\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button-primary\",onClick:exportAudio,disabled:isExporting,children:isExporting?'🔄 出力中...':'🎧 音源出力'})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-controls-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"transport-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"transport-btn play-btn \".concat(isPlaying?'playing':''),onClick:isPlaying?pause:play,children:isPlaying?'⏸️':'▶️'}),/*#__PURE__*/_jsx(\"button\",{className:\"transport-btn stop-btn\",onClick:stop,children:\"\\u23F9\\uFE0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timing-controls\",children:[!isTimeMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"bpm-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bpm\",children:\"\\uD83C\\uDFB5 BPM:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"bpm\",type:\"number\",value:bpm,onChange:e=>handleBpmChange(parseInt(e.target.value)),min:\"60\",max:\"200\",className:\"bpm-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-mode-control\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"time-mode-toggle \".concat(isTimeMode?'active':''),onClick:toggleTimeMode,title:isTimeMode?'拍子モードに切り替え':'秒数モードに切り替え',children:[\"\\u23F0 \",isTimeMode?'秒数モード':'拍子モード']}),isTimeMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"seconds-per-beat-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"secondsPerBeat\",children:\"1\\u62CD:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"secondsPerBeat\",type:\"number\",value:secondsPerBeat,onChange:e=>handleSecondsPerBeatChange(parseFloat(e.target.value)),min:\"0.1\",max:\"5.0\",step:\"0.1\",className:\"seconds-input\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u79D2\"})]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"daw-main-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sound-panel \".concat(!showSoundPanel?'panel-hidden':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sound-panel-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFB5 \\u97F3\\u7D20\\u6750\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sound-panel-close\",onClick:()=>setShowSoundPanel(false),title:\"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u3092\\u9589\\u3058\\u308B\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sound-list\",children:sounds.length>0?sounds.map(sound=>/*#__PURE__*/_jsx(SoundItem,{sound:sound,onDragStart:async sound=>{// ドラッグ開始時に音声の長さを計算\nif(sound.audioBlob){try{const duration=await getAudioDuration(sound.audioBlob,bpm,secondsPerBeat);setDraggedSoundDuration(duration);}catch(error){console.warn('ドラッグ時の音声長さ計算に失敗:',error);setDraggedSoundDuration(400);}}else{setDraggedSoundDuration(400);}}},sound.id)):/*#__PURE__*/_jsxs(\"div\",{className:\"no-sounds\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u97F3\\u7D20\\u6750\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u97F3\\u3092\\u9332\\u97F3\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"daw-workspace \".concat(!showSoundPanel?'panel-hidden':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"track-headers\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"timeline-header-spacer\",children:\"\\u30BF\\u30A4\\u30E0\\u30E9\\u30A4\\u30F3\"}),tracks.map((track,index)=>/*#__PURE__*/_jsx(TrackHeader,{track:track,trackIndex:index,onRemove:removeTrack,trackHeight:trackHeight},track.id)),/*#__PURE__*/_jsx(\"div\",{className:\"track-add-button-container\",style:{height:trackHeight},children:/*#__PURE__*/_jsx(\"button\",{className:\"button-primary track-add-btn\",onClick:addTrack,children:\"\\u2795 \\u30C8\\u30E9\\u30C3\\u30AF\\u8FFD\\u52A0\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-container\",children:[/*#__PURE__*/_jsx(Timeline,{bpm:bpm,isTimeMode:isTimeMode,secondsPerBeat:secondsPerBeat}),/*#__PURE__*/_jsxs(\"div\",{className:\"tracks-area\",ref:timelineRef,style:{minWidth:isTimeMode?Math.ceil(TIME_MODE_TOTAL_SECONDS/secondsPerBeat)*(secondsPerBeat*PIXELS_PER_SECOND):TOTAL_MEASURES*MEASURE_WIDTH},children:[/*#__PURE__*/_jsx(Playhead,{currentTime:currentTime}),dragPreview&&/*#__PURE__*/_jsx(\"div\",{className:\"drag-preview\",style:{left:dragPreview.left,top:dragPreview.top,width:dragPreview.width}}),tracks.map(track=>/*#__PURE__*/_jsx(Track,{track:track,onDrop:handleDrop,onDragOver:handleDragOver,onRemoveClip:removeClip,onClipDragStart:handleClipDragStart,onDragEnd:handleDragEnd,trackHeight:trackHeight,updateDragPreview:updateDragPreview,isTimeMode:isTimeMode,secondsPerBeat:secondsPerBeat},track.id))]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCD6 \\u4F7F\\u3044\\u65B9\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDDA5\\uFE0F PC:\"}),\" \\u5DE6\\u5074\\u306E\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u304B\\u3089\\u97F3\\u7D20\\u6750\\u3092\\u30C8\\u30E9\\u30C3\\u30AF\\u306B\\u30C9\\u30E9\\u30C3\\u30B0&\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u914D\\u7F6E\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30DB/\\u30BF\\u30D6\\u30EC\\u30C3\\u30C8:\"}),\" \\u97F3\\u7D20\\u6750\\u3092\\u9577\\u62BC\\u3057\\u3057\\u3066\\u304B\\u3089\\u30C8\\u30E9\\u30C3\\u30AF\\u307E\\u3067\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u914D\\u7F6E\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u914D\\u7F6E\\u6E08\\u307F\\u306E\\u97F3\\u7D20\\u6750\\u3082\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066\\u5225\\u306E\\u5834\\u6240\\u306B\\u79FB\\u52D5\\u3067\\u304D\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u914D\\u7F6E\\u4E88\\u5B9A\\u4F4D\\u7F6E\\u306B\\u9752\\u3044\\u5F71\\u304C\\u8868\\u793A\\u3055\\u308C\\u307E\\u3059\"}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u23F0 \\u6642\\u9593\\u30E2\\u30FC\\u30C9\\u5207\\u308A\\u66FF\\u3048:\"}),\" \\u300C\\u62CD\\u5B50\\u30E2\\u30FC\\u30C9\\u300D\\u3068\\u300C\\u79D2\\u6570\\u30E2\\u30FC\\u30C9\\u300D\\u3092\\u5207\\u308A\\u66FF\\u3048\\u3067\\u304D\\u307E\\u3059\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u62CD\\u5B50\\u30E2\\u30FC\\u30C9:\"}),\" 8\\u5206\\u97F3\\u7B26\\uFF08\\u88CF\\u62CD\\u542B\\u3080\\uFF09\\u306B\\u5408\\u308F\\u305B\\u3066\\u97F3\\u7D20\\u6750\\u304C\\u81EA\\u52D5\\u914D\\u7F6E\\u3055\\u308C\\u3001BPM\\u3067\\u901F\\u3055\\u3092\\u8ABF\\u6574\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u79D2\\u6570\\u30E2\\u30FC\\u30C9:\"}),\" \\u5C0F\\u7BC0\\u3084\\u62CD\\u5B50\\u306E\\u6982\\u5FF5\\u3092\\u306A\\u304F\\u3057\\u3001\\u300C\\u4F55\\u79D2\\u30671\\u62CD\\u300D\\u3068\\u3044\\u3046\\u5358\\u4F4D\\u3067\\u97F3\\u7D20\\u6750\\u3092\\u914D\\u7F6E\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u97F3\\u7D20\\u6750\\u30D1\\u30CD\\u30EB\\u306E\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u500B\\u5225\\u306B\\u97F3\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u25B6\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u518D\\u751F\\u3001\\u23F8\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u4E00\\u6642\\u505C\\u6B62\\u3001\\u23F9\\uFE0F\\u30DC\\u30BF\\u30F3\\u3067\\u505C\\u6B62\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30C8\\u30E9\\u30C3\\u30AF\\u3092\\u8FFD\\u52A0\\u3057\\u3066\\u8907\\u6570\\u306E\\u97F3\\u3092\\u91CD\\u306D\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCBE \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u4FDD\\u5B58:\"}),\" \\u7DE8\\u96C6\\u4E2D\\u306E\\u30C7\\u30FC\\u30BF\\u3092JSON\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u4FDD\\u5B58\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCC1 \\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u8AAD\\u307F\\u8FBC\\u307F:\"}),\" \\u4FDD\\u5B58\\u3057\\u305F\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u7DE8\\u96C6\\u3092\\u518D\\u958B\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFA7 \\u97F3\\u6E90\\u51FA\\u529B:\"}),\" \\u5B8C\\u6210\\u3057\\u305F\\u697D\\u66F2\\u3092WAV\\u30D5\\u30A1\\u30A4\\u30EB\\u3068\\u3057\\u3066\\u51FA\\u529B\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDDD1\\uFE0F \\u30EA\\u30BB\\u30C3\\u30C8:\"}),\" \\u73FE\\u5728\\u306E\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\u3057\\u3066\\u65B0\\u3057\\u304F\\u59CB\\u3081\\u308B\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auto-save-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCBE \\u81EA\\u52D5\\u4FDD\\u5B58\\u6A5F\\u80FD\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u81EA\\u52D5\\u4FDD\\u5B58:\"}),\" \\u30C8\\u30E9\\u30C3\\u30AF\\u3001BPM\\u3001\\u6642\\u9593\\u30E2\\u30FC\\u30C9\\u8A2D\\u5B9A\\u306E\\u5909\\u66F4\\u306F\\u81EA\\u52D5\\u7684\\u306B\\u4FDD\\u5B58\\u3055\\u308C\\u307E\\u3059\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4ED6\\u30DA\\u30FC\\u30B8\\u3068\\u306E\\u9023\\u643A:\"}),\" \\u300C\\u97F3\\u3042\\u3064\\u3081\\u300D\\u30DA\\u30FC\\u30B8\\u3067\\u9332\\u97F3\\u3057\\u305F\\u97F3\\u306F\\u81EA\\u52D5\\u7684\\u306B\\u53CD\\u6620\\u3055\\u308C\\u307E\\u3059\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5FA9\\u5143\\u6A5F\\u80FD:\"}),\" \\u30DA\\u30FC\\u30B8\\u3092\\u30EA\\u30ED\\u30FC\\u30C9\\u3057\\u3066\\u3082\\u4F5C\\u696D\\u5185\\u5BB9\\u304C\\u81EA\\u52D5\\u7684\\u306B\\u5FA9\\u5143\\u3055\\u308C\\u307E\\u3059\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B89\\u5FC3\\u3057\\u3066\\u79FB\\u52D5:\"}),\" \\u4ED6\\u306E\\u30DA\\u30FC\\u30B8\\u306B\\u79FB\\u52D5\\u3057\\u3066\\u3082\\u4F5C\\u696D\\u5185\\u5BB9\\u306F\\u4FDD\\u6301\\u3055\\u308C\\u307E\\u3059\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-tips\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCF1 \\u30B9\\u30DE\\u30FC\\u30C8\\u30D5\\u30A9\\u30F3\\u5229\\u7528\\u306E\\u30B3\\u30C4\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u97F3\\u7D20\\u6750\\u3092\\u8EFD\\u304F\\u9577\\u62BC\\u3057\\u3059\\u308B\\u3068\\u30C9\\u30E9\\u30C3\\u30B0\\u30E2\\u30FC\\u30C9\\u306B\\u306A\\u308A\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30C9\\u30E9\\u30C3\\u30B0\\u4E2D\\u306F\\u753B\\u9762\\u304C\\u30B9\\u30AF\\u30ED\\u30FC\\u30EB\\u3057\\u306A\\u3044\\u3088\\u3046\\u5236\\u5FA1\\u3055\\u308C\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u9752\\u304F\\u30CF\\u30A4\\u30E9\\u30A4\\u30C8\\u3055\\u308C\\u305F\\u30C8\\u30E9\\u30C3\\u30AF\\u3067\\u6307\\u3092\\u96E2\\u3059\\u3068\\u97F3\\u7D20\\u6750\\u304C\\u914D\\u7F6E\\u3055\\u308C\\u307E\\u3059\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u6A2A\\u753B\\u9762\\u8868\\u793A\\u306B\\u3059\\u308B\\u3068\\u3088\\u308A\\u4F7F\\u3044\\u3084\\u3059\\u304F\\u306A\\u308A\\u307E\\u3059\"})]})]})]})]});};const SoundItem=_ref5=>{let{sound,onDragStart}=_ref5;const[isPlaying,setIsPlaying]=useState(false);const[isDragging,setIsDragging]=useState(false);const[touchStart,setTouchStart]=useState(null);const[touchMove,setTouchMove]=useState(null);const handleDragStart=e=>{// audioBlob以外のデータをJSON文字列として設定\nconst soundDataForTransfer=_objectSpread(_objectSpread({},sound),{},{audioBlob:null// Blobは直接シリアライズできないため一時的にnullに\n});e.dataTransfer.setData('application/json',JSON.stringify(soundDataForTransfer));e.dataTransfer.effectAllowed='copy';// 実際のaudioBlobは別途グローバル変数で保持\nwindow.currentDraggedSoundBlob=sound.audioBlob;// 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\nif(onDragStart){onDragStart(sound);}};// タッチイベント対応\nconst handleTouchStart=e=>{const touch=e.touches[0];setTouchStart({x:touch.clientX,y:touch.clientY});setIsDragging(false);// 長押し判定用のタイマーは設定せず、移動検知でのみドラッグを開始\n};const handleTouchMove=e=>{if(!touchStart)return;const touch=e.touches[0];const currentPos={x:touch.clientX,y:touch.clientY};setTouchMove(currentPos);// ドラッグ開始の判定（15px以上移動）- 閾値を上げてより意図的な移動のみドラッグ扱い\nconst deltaX=Math.abs(currentPos.x-touchStart.x);const deltaY=Math.abs(currentPos.y-touchStart.y);if(!isDragging&&(deltaX>15||deltaY>15)){setIsDragging(true);// スクロールを一時的に無効化（移動が確定してから）\ndocument.body.classList.add('dragging');// 親コンポーネントのonDragStart関数を呼び出し\nif(onDragStart){onDragStart(sound);}// グローバル変数に設定\nwindow.currentDraggedSoundBlob=sound.audioBlob;window.currentDraggedSound=sound;}if(isDragging){// passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n// ドラッグプレビューの位置を更新\nconst dragPreview=document.querySelector('.mobile-drag-preview');if(dragPreview){dragPreview.style.left=\"\".concat(currentPos.x-50,\"px\");dragPreview.style.top=\"\".concat(currentPos.y-20,\"px\");}// ドロップターゲットのハイライト\nconst elementBelow=document.elementFromPoint(currentPos.x,currentPos.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');// 既存のハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// 新しいハイライトを追加\nif(trackElement){trackElement.classList.add('drag-over');}}};const handleTouchEnd=e=>{if(isDragging&&touchMove){// ドロップ処理\nconst elementBelow=document.elementFromPoint(touchMove.x,touchMove.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');if(trackElement){const trackId=parseInt(trackElement.dataset.trackId);const rect=trackElement.getBoundingClientRect();const timePosition=touchMove.x-rect.left;// ドロップイベントを発火\nconst dropEvent=new CustomEvent('mobileDrop',{detail:{trackId,timePosition,sound:sound}});trackElement.dispatchEvent(dropEvent);}}// クリーンアップ\nsetTouchStart(null);setTouchMove(null);setIsDragging(false);// SoundItem 内での直接クリーンアップ\ndocument.body.classList.remove('dragging');// ハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// モバイル用のドラッグプレビューを削除\nconst mobileDragPreview=document.querySelector('.mobile-drag-preview');if(mobileDragPreview){mobileDragPreview.remove();}// グローバル変数をクリア\nif(window.currentDraggedSoundBlob){window.currentDraggedSoundBlob=null;}if(window.currentDraggedSound){window.currentDraggedSound=null;}};const playSound=()=>{if(sound.audioBlob&&!isPlaying&&!isDragging){// Blobの有効性をチェック\nif(!(sound.audioBlob instanceof Blob)||sound.audioBlob.size===0){var _sound$audioBlob;console.error('無効なaudioBlob:',{name:sound.name,isBlob:sound.audioBlob instanceof Blob,size:(_sound$audioBlob=sound.audioBlob)===null||_sound$audioBlob===void 0?void 0:_sound$audioBlob.size});return;}const audio=new Audio();let audioUrl;try{audioUrl=URL.createObjectURL(sound.audioBlob);audio.src=audioUrl;audio.play().then(()=>{setIsPlaying(true);const handleEnded=()=>{setIsPlaying(false);if(audioUrl){URL.revokeObjectURL(audioUrl);// URLをクリーンアップ\n}audio.removeEventListener('ended',handleEnded);};audio.addEventListener('ended',handleEnded);// 音声の読み込みエラーもハンドリング\naudio.addEventListener('error',error=>{console.error('音声読み込みエラー:',error);setIsPlaying(false);if(audioUrl){URL.revokeObjectURL(audioUrl);}});}).catch(error=>{console.error('音声再生エラー:',error);if(audioUrl){URL.revokeObjectURL(audioUrl);// エラー時もクリーンアップ\n}setIsPlaying(false);});}catch(error){console.error('createObjectURLエラー:',error);setIsPlaying(false);}}else{console.error('再生条件不満足:',{hasAudioBlob:!!sound.audioBlob,isPlaying,isDragging});}};// ドラッグプレビューを作成\nconst createDragPreview=useCallback(()=>{if(isDragging&&touchMove){let dragPreview=document.querySelector('.mobile-drag-preview');if(!dragPreview){dragPreview=document.createElement('div');dragPreview.className='mobile-drag-preview';dragPreview.textContent=sound.name;dragPreview.style.cssText=\"\\n          position: fixed;\\n          background: rgba(0, 123, 255, 0.8);\\n          color: white;\\n          padding: 5px 10px;\\n          border-radius: 4px;\\n          font-size: 12px;\\n          pointer-events: none;\\n          z-index: 1000;\\n          left: \".concat(touchMove.x-50,\"px;\\n          top: \").concat(touchMove.y-20,\"px;\\n        \");document.body.appendChild(dragPreview);}}},[isDragging,touchMove,sound.name]);// ドラッグプレビューの更新\nReact.useEffect(()=>{if(isDragging){createDragPreview();}},[isDragging,touchMove,createDragPreview]);return/*#__PURE__*/_jsxs(\"div\",{className:\"sound-item \".concat(isDragging?'dragging':''),draggable:\"true\",onDragStart:handleDragStart,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sound-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:sound.name}),/*#__PURE__*/_jsx(\"div\",{className:\"sound-tags\",children:sound.tags.map((tag,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"sound-tag\",children:tag},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sound-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"play-sound-btn\",onClick:playSound,disabled:isPlaying,children:isPlaying?'⏸️':'▶️'})})]});};const TrackHeader=_ref6=>{let{track,onRemove,trackHeight,trackIndex}=_ref6;// トラック名を表示番号と元の名前で構成\nconst displayName=\"\\u30C8\\u30E9\\u30C3\\u30AF \".concat(trackIndex+1);return/*#__PURE__*/_jsx(\"div\",{className:\"track-header\",style:{height:trackHeight},children:/*#__PURE__*/_jsxs(\"div\",{className:\"track-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:displayName}),/*#__PURE__*/_jsx(\"div\",{className:\"track-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"remove-track-btn\",onClick:()=>onRemove(track.id),title:\"\".concat(displayName,\"\\u3092\\u524A\\u9664\"),\"aria-label\":\"\".concat(displayName,\"\\u3092\\u524A\\u9664\"),children:\"\\uD83D\\uDDD1\\uFE0F\"})})]})});};const Timeline=_ref7=>{let{bpm,isTimeMode,secondsPerBeat}=_ref7;if(isTimeMode){// 秒数モード: 1拍の秒数に基づいて表示\nconst totalBeats=Math.ceil(TIME_MODE_TOTAL_SECONDS/secondsPerBeat);const beatWidthInPixels=secondsPerBeat*PIXELS_PER_SECOND;return/*#__PURE__*/_jsx(\"div\",{className:\"timeline\",style:{minWidth:totalBeats*beatWidthInPixels},children:Array.from({length:Math.ceil(totalBeats/4)},(_,intervalIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"time-interval\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-number\",children:[(intervalIndex*4*secondsPerBeat).toFixed(1),\"\\u79D2\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"time-marks\",children:Array.from({length:Math.min(4,totalBeats-intervalIndex*4)},(_,beatIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"time-mark\",style:{width:beatWidthInPixels},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-main\",children:[((intervalIndex*4+beatIndex+1)*secondsPerBeat).toFixed(1),\"s\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"time-sub\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sub-time-marker\",children:\"\\u30FB\"})})]},beatIndex))})]},intervalIndex))});}else{// 拍子モード: 従来の小節・拍表示\nconst measures=TOTAL_MEASURES;// 16小節表示\nconst beatsPerMeasure=BEATS_PER_MEASURE;// 4/4拍子\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"timeline\",style:{minWidth:TOTAL_MEASURES*MEASURE_WIDTH},children:Array.from({length:measures},(_,measureIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"measure\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"measure-number\",children:measureIndex+1}),/*#__PURE__*/_jsx(\"div\",{className:\"beats\",children:Array.from({length:beatsPerMeasure},(_,beatIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"beat\",style:{width:BEAT_WIDTH},children:[/*#__PURE__*/_jsx(\"div\",{className:\"beat-main\",children:beatIndex+1}),/*#__PURE__*/_jsx(\"div\",{className:\"beat-sub\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sub-beat-marker\",children:\"\\u30FB\"})})]},beatIndex))})]},measureIndex))});}};const Track=_ref8=>{let{track,onDrop,onDragOver,onRemoveClip,onClipDragStart,onDragEnd,trackHeight,updateDragPreview,isTimeMode,secondsPerBeat}=_ref8;const handleDrop=e=>{const rect=e.currentTarget.getBoundingClientRect();const timePosition=e.clientX-rect.left;onDrop(e,track.id,timePosition);};// モバイルドロップイベントの処理\nconst handleMobileDrop=useCallback(e=>{const{trackId,timePosition,sound}=e.detail;// 模擬的なドロップイベントを作成\nconst mockDropEvent={preventDefault:()=>{},dataTransfer:{getData:type=>{if(type==='application/json'){return JSON.stringify(sound);}return'';}}};onDrop(mockDropEvent,trackId,timePosition);},[onDrop]);// モバイルクリップ移動イベントの処理\nconst handleMobileClipMove=useCallback(e=>{const{clip,newTrackId,timePosition}=e.detail;// 模擬的なドロップイベントを作成\nconst mockDropEvent={preventDefault:()=>{},dataTransfer:{getData:type=>{if(type==='text/plain'){return\"existing-clip-\".concat(clip.id);}return'';}}};onDrop(mockDropEvent,newTrackId,timePosition);},[onDrop]);const handleUpdateDragPreview=useCallback(e=>{const{clientX,trackElement}=e.detail;// 親コンポーネントのupdateDragPreview関数を呼び出し\nif(typeof updateDragPreview==='function'){updateDragPreview(clientX,trackElement);}},[updateDragPreview]);React.useEffect(()=>{const trackElement=document.querySelector(\"[data-track-id=\\\"\".concat(track.id,\"\\\"]\"));if(trackElement){trackElement.addEventListener('mobileDrop',handleMobileDrop);trackElement.addEventListener('mobileClipMove',handleMobileClipMove);trackElement.addEventListener('updateDragPreview',handleUpdateDragPreview);return()=>{trackElement.removeEventListener('mobileDrop',handleMobileDrop);trackElement.removeEventListener('mobileClipMove',handleMobileClipMove);trackElement.removeEventListener('updateDragPreview',handleUpdateDragPreview);};}},[track.id,handleMobileDrop,handleMobileClipMove,handleUpdateDragPreview]);return/*#__PURE__*/_jsxs(\"div\",{className:\"track\",style:{height:trackHeight},\"data-track-id\":track.id,onDrop:handleDrop,onDragOver:onDragOver,children:[/*#__PURE__*/_jsx(\"div\",{className:\"track-grid\",children:isTimeMode?/*#__PURE__*/// 秒数モード: 秒単位でグリッド線を表示\n_jsxs(_Fragment,{children:[Array.from({length:TIME_MODE_TOTAL_SECONDS},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"beat-line beat-line-main \".concat(index===0?'first-beat':'',\" \").concat(index%5===0?'measure-start':''),style:{left:index*PIXELS_PER_SECOND}},\"time-main-\".concat(index))),Array.from({length:TIME_MODE_TOTAL_SECONDS*2},(_,index)=>{if(index%2===1){// 奇数のインデックス（0.5秒、1.5秒など）\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"beat-line beat-line-sub\",style:{left:index*PIXELS_PER_SECOND/2}},\"time-sub-\".concat(index));}return null;})]}):/*#__PURE__*/// 拍子モード: 従来の拍・小節グリッド\n_jsxs(_Fragment,{children:[Array.from({length:TOTAL_BEATS},(_,index)=>{const isFirstBeat=index===0;const isMeasureStart=index%BEATS_PER_MEASURE===0;const className=\"beat-line beat-line-main \".concat(isFirstBeat?'first-beat':'',\" \").concat(isMeasureStart?'measure-start':'');return/*#__PURE__*/_jsx(\"div\",{className:className,style:{left:index*BEAT_WIDTH}},\"main-\".concat(index));}),Array.from({length:TOTAL_BEATS},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"beat-line beat-line-sub\",style:{left:index*BEAT_WIDTH+SUB_BEAT_WIDTH}},\"sub-\".concat(index)))]})}),track.clips.map(clip=>/*#__PURE__*/_jsx(AudioClip,{clip:clip,trackId:track.id,onRemove:()=>onRemoveClip(track.id,clip.id),onDragStart:onClipDragStart,onDragEnd:onDragEnd},clip.id))]});};const AudioClip=_ref9=>{var _clip$soundData6;let{clip,trackId,onRemove,onDragStart,onDragEnd}=_ref9;const[waveformData,setWaveformData]=React.useState([]);const[isDragging,setIsDragging]=React.useState(false);const[touchStart,setTouchStart]=React.useState(null);const[touchMove,setTouchMove]=React.useState(null);React.useEffect(()=>{// clip.soundData が存在する場合のみ波形データを生成\nif(clip&&clip.soundData){// 簡単な波形データ生成（実際の実装では音声解析が必要）\nconst generateWaveform=()=>{const points=20;// 波形のポイント数\nconst data=[];for(let i=0;i<points;i++){data.push(Math.random()*0.8+0.2);// 0.2-1.0の間のランダム値\n}setWaveformData(data);};generateWaveform();}},[clip,clip===null||clip===void 0?void 0:clip.soundData]);// clip.soundData の安全性をチェック（Hooksの後で）\nif(!clip||!clip.soundData){console.warn('無効なクリップデータ:',clip);return null;// 無効なクリップは表示しない\n}const handleDragStart=e=>{e.stopPropagation();// イベントバブリングを防ぐ\n// ドラッグデータに既存クリップの情報を設定\ne.dataTransfer.setData('text/plain',\"existing-clip-\".concat(clip.id));e.dataTransfer.effectAllowed='move';// onDragStartコールバックを呼び出し（マウス位置とクリップ要素を渡す）\nonDragStart(clip,trackId,e.clientX,e.currentTarget);};const handleDragEnd=e=>{// ドラッグ終了時にクリーンアップを呼び出し\nif(onDragEnd){onDragEnd(e);}};// タッチイベント対応（クリップの移動）\nconst handleTouchStart=e=>{e.stopPropagation();const touch=e.touches[0];setTouchStart({x:touch.clientX,y:touch.clientY});setIsDragging(false);// ドラッグモードは移動が確定してから有効化\n};const handleTouchMove=e=>{if(!touchStart)return;const touch=e.touches[0];const currentPos={x:touch.clientX,y:touch.clientY};setTouchMove(currentPos);// ドラッグ開始の判定（10px以上移動）\nconst deltaX=Math.abs(currentPos.x-touchStart.x);const deltaY=Math.abs(currentPos.y-touchStart.y);if(!isDragging&&(deltaX>10||deltaY>10)){setIsDragging(true);// スクロールを一時的に無効化（移動が確定してから）\ndocument.body.classList.add('dragging');onDragStart(clip,trackId,touchStart.x,e.currentTarget);}if(isDragging){// passiveイベントではpreventDefaultが使えないので、touchActionで制御\n// ドロップターゲットのハイライト\nconst elementBelow=document.elementFromPoint(currentPos.x,currentPos.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');// 既存のハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// 新しいハイライトを追加（自分のトラック以外も含む）\nif(trackElement){trackElement.classList.add('drag-over');// ドラッグプレビューも更新（onDragStart時と同様のロジック）\nif(onDragStart){// 親コンポーネントのupdateDragPreview関数を呼び出すためのカスタムイベント\nconst dragPreviewEvent=new CustomEvent('updateDragPreview',{detail:{clientX:currentPos.x,trackElement:trackElement}});trackElement.dispatchEvent(dragPreviewEvent);}}}};const handleTouchEnd=e=>{if(isDragging&&touchMove){// ドロップ処理\nconst elementBelow=document.elementFromPoint(touchMove.x,touchMove.y);const trackElement=elementBelow===null||elementBelow===void 0?void 0:elementBelow.closest('.track');if(trackElement){const newTrackId=parseInt(trackElement.dataset.trackId);const rect=trackElement.getBoundingClientRect();const timePosition=touchMove.x-rect.left;// 既存クリップの移動イベントを発火\nconst moveEvent=new CustomEvent('mobileClipMove',{detail:{clip,originalTrackId:trackId,newTrackId,timePosition}});trackElement.dispatchEvent(moveEvent);}}// クリーンアップ\nsetTouchStart(null);setTouchMove(null);setIsDragging(false);document.body.classList.remove('dragging');// ハイライトを削除\ndocument.querySelectorAll('.track').forEach(track=>{track.classList.remove('drag-over');});// ドラッグプレビューをクリア（親コンポーネントの状態もリセット）\nif(onDragEnd){onDragEnd(null);// nullを渡してガード条件を満たす\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"audio-clip \".concat(isDragging?'dragging':''),draggable:\"true\",onDragStart:handleDragStart,onDragEnd:handleDragEnd,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,style:{left:clip.startTime,width:isFinite(clip.duration)&&clip.duration>0?clip.duration:400// デフォルト1小節\n},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"clip-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"clip-name\",children:((_clip$soundData6=clip.soundData)===null||_clip$soundData6===void 0?void 0:_clip$soundData6.name)||'不明な音素材'}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-clip-btn\",onClick:onRemove,title:\"\\u30AF\\u30EA\\u30C3\\u30D7\\u3092\\u524A\\u9664\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"clip-waveform\",children:waveformData.length>0?/*#__PURE__*/_jsx(\"svg\",{className:\"waveform-svg\",width:\"100%\",height:\"30\",children:waveformData.map((height,index)=>/*#__PURE__*/_jsx(\"rect\",{x:\"\".concat(index/waveformData.length*100,\"%\"),y:\"\".concat((1-height)*15),width:\"\".concat(80/waveformData.length,\"%\"),height:\"\".concat(height*30),fill:\"rgba(255, 255, 255, 0.8)\"},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"waveform-placeholder\",children:\"\\uD83D\\uDD0A\"})})]});};const Playhead=_ref0=>{let{currentTime}=_ref0;// currentTimeが有効な数値かチェック\nconst safeCurrentTime=isFinite(currentTime)&&currentTime>=0?currentTime:0;return/*#__PURE__*/_jsx(\"div\",{className:\"playhead\",style:{left:safeCurrentTime}});};export default DAWPage;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BEAT_WIDTH","BEATS_PER_MEASURE","MEASURE_WIDTH","SUB_BEAT_WIDTH","TOTAL_MEASURES","TOTAL_BEATS","TIME_MODE_TOTAL_SECONDS","PIXELS_PER_SECOND","DAWPage","trackIdCounterRef","trackNameCounterRef","loadAutoSavedProject","autoSavedData","localStorage","getItem","projectData","JSON","parse","trackNameCounter","current","trackIdCounter","validTracks","tracks","map","track","_objectSpread","clips","filter","clip","soundData","name","console","warn","length","id","Date","now","bpm","isTimeMode","secondsPerBeat","error","initialData","setTracks","setBpm","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioContext","setAudioContext","trackHeight","playingAudios","setPlayingAudios","Map","startPlayTime","setStartPlayTime","setError","sounds","setSounds","showSoundPanel","setShowSoundPanel","draggedClip","setDraggedClip","dragPreview","setDragPreview","draggedSoundDuration","setDraggedSoundDuration","dragOffset","setDragOffset","setIsTimeMode","setSecondsPerBeat","isExporting","setIsExporting","timelineRef","animationFrameRef","dragOverTimeoutRef","ctx","window","AudioContext","webkitAudioContext","savedSounds","soundsWithBlob","sound","audioData","includes","base64Data","split","byteCharacters","atob","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","size","audioBlob","validSounds","validSoundsForStorage","undefined","setItem","stringify","state","close","catch","cancelAnimationFrame","clearTimeout","currentPlayingAudios","forEach","_ref","audio","timeoutId","audioUrl","pause","src","URL","revokeObjectURL","currentDraggedSoundBlob","currentDraggedSound","getAudioDuration","currentBpm","arguments","currentSecondsPerBeat","Promise","resolve","arrayBuffer","audioBuffer","decodeAudioData","durationInSeconds","duration","isFinite","pixelsPerSecond","beatWidthInPixels","widthInPixels","toggleTimeMode","newTimeMode","updatedTracks","all","updatedClips","newDuration","handleSecondsPerBeatChange","newSecondsPerBeat","getSnapPosition","position","subBeatWidth","Math","round","updatePlayhead","animate","elapsed","newCurrentTime","requestAnimationFrame","timeInSeconds","handleBpmChange","newBpm","saveProject","version","timestamp","projectJson","url","createObjectURL","link","document","createElement","href","download","concat","toISOString","slice","replace","body","appendChild","click","removeChild","loadProject","event","file","target","files","reader","FileReader","onload","e","result","Error","restoreAudioBlob","restoredTracks","restoredSounds","prevSounds","maxId","max","s","existingNames","Set","newSounds","index","newName","counter","has","add","setTimeout","autoSaveData","readAsText","value","exportAudio","maxDuration","clipStartTimeInSeconds","startTime","clipDurationInSeconds","clipEndTime","exportContext","sampleRate","bufferLength","ceil","outputBuffer","createBuffer","leftChannel","getChannelData","rightChannel","startTimeInSamples","floor","channel","min","numberOfChannels","sourceData","targetData","wavBlob","audioBufferToWav","buffer","bytesPerSample","blockAlign","byteRate","dataSize","bufferSize","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","sample","intSample","setInt16","addTrack","uniqueId","trackName","newTrack","prevTracks","removeTrack","trackId","handleDrop","timePosition","preventDefault","adjustedPosition","snappedPosition","updatedClip","originalTrackId","jsonData","dataTransfer","getData","newClip","random","handleDragOver","dropEffect","clientX","currentTarget","updateDragPreview","trackElement","dragCleanupTimer","cleanupDragState","rect","getBoundingClientRect","left","trackRect","tracksAreaRect","dataset","relativeTop","top","parseInt","isNaN","previewWidth","width","removeClip","clipId","handleClipDragStart","mouseX","clipElement","clipRect","offsetInClip","querySelectorAll","classList","remove","mobileDragPreview","querySelector","cleanupDragStateCallback","handleGlobalDragEnd","handleGlobalDragLeave","relatedTarget","nodeName","addEventListener","removeEventListener","handleDragEnd","play","resume","currentTimeInSeconds","newPlayingAudios","clipEndTimeInSeconds","delay","scheduleClipPlayback","delayMs","playingAudiosMap","Audio","set","_clip$soundData","_clip$soundData2","_clip$soundData3","_clip$soundData4","_clip$soundData5","soundDataName","hasAudioData","hasAudioBlob","audioBlobType","isInstanceOfBlob","restoreError","_ref2","paused","stop","_ref3","autoSaveProject","handleVisibilityChange","hidden","clearAutoSave","removeItem","alert","cleanupInvalidClips","cleanedTracks","removedCount","reduce","total","timer","_ref4","className","children","onClick","accept","onChange","style","display","confirm","title","disabled","htmlFor","parseFloat","step","SoundItem","onDragStart","TrackHeader","trackIndex","onRemove","height","Timeline","ref","minWidth","Playhead","Track","onDrop","onDragOver","onRemoveClip","onClipDragStart","onDragEnd","_ref5","isDragging","setIsDragging","touchStart","setTouchStart","touchMove","setTouchMove","handleDragStart","soundDataForTransfer","setData","effectAllowed","handleTouchStart","touch","touches","x","y","clientY","handleTouchMove","currentPos","deltaX","abs","deltaY","elementBelow","elementFromPoint","closest","handleTouchEnd","dropEvent","CustomEvent","detail","dispatchEvent","playSound","_sound$audioBlob","isBlob","then","handleEnded","createDragPreview","textContent","cssText","draggable","onTouchStart","onTouchMove","onTouchEnd","tags","tag","_ref6","displayName","_ref7","totalBeats","from","_","intervalIndex","toFixed","beatIndex","measures","beatsPerMeasure","measureIndex","_ref8","handleMobileDrop","mockDropEvent","handleMobileClipMove","newTrackId","handleUpdateDragPreview","isFirstBeat","isMeasureStart","AudioClip","_ref9","_clip$soundData6","waveformData","setWaveformData","generateWaveform","points","data","push","stopPropagation","dragPreviewEvent","moveEvent","fill","_ref0","safeCurrentTime"],"sources":["/Users/nakataniyuutomo/Desktop/Programing/ゼミ開発/sound-library2/src/pages/DAWPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './DAWPage.css';\n\n// DAWの定数\nconst BEAT_WIDTH = 100; // 1拍の幅（px）\nconst BEATS_PER_MEASURE = 4; // 1小節あたりの拍数\nconst MEASURE_WIDTH = BEAT_WIDTH * BEATS_PER_MEASURE; // 1小節の幅（400px）\nconst SUB_BEAT_WIDTH = BEAT_WIDTH / 2; // 8分音符の幅（50px）\nconst TOTAL_MEASURES = 16; // 表示する小節数\nconst TOTAL_BEATS = TOTAL_MEASURES * BEATS_PER_MEASURE; // 総拍数\n\n// 時間モードの定数\nconst TIME_MODE_TOTAL_SECONDS = 60; // 表示する総秒数\nconst PIXELS_PER_SECOND = 100; // 1秒あたりのピクセル数\n\nconst DAWPage = () => {\n  // ユニークID生成用のカウンター\n  const trackIdCounterRef = useRef(1);\n  // トラック名の番号管理用カウンター\n  const trackNameCounterRef = useRef(1);\n  \n  // LocalStorageからの自動復元機能\n  const loadAutoSavedProject = () => {\n    try {\n      const autoSavedData = localStorage.getItem('dawProjectAutoSave');\n      if (autoSavedData) {\n        const projectData = JSON.parse(autoSavedData);\n        \n        // トラックカウンターの復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        // 無効なクリップをフィルタリング\n        const validTracks = (projectData.tracks || []).map(track => ({\n          ...track,\n          clips: (track.clips || []).filter(clip => {\n            if (!clip.soundData || !clip.soundData.name) {\n              console.warn('自動保存データから無効なクリップを除外:', clip);\n              return false;\n            }\n            return true;\n          })\n        }));\n        \n        return {\n          tracks: validTracks.length > 0 ? validTracks : [{ \n            id: Date.now(), \n            name: 'トラック 1', \n            clips: [] \n          }],\n          bpm: projectData.bpm || 120,\n          isTimeMode: projectData.isTimeMode || false,\n          secondsPerBeat: projectData.secondsPerBeat || 0.5\n        };\n      }\n    } catch (error) {\n      console.error('自動保存データの復元に失敗:', error);\n    }\n    \n    return {\n      tracks: [{ \n        id: Date.now(), \n        name: 'トラック 1', \n        clips: [] \n      }],\n      bpm: 120,\n      isTimeMode: false,\n      secondsPerBeat: 0.5\n    };\n  };\n\n  const initialData = loadAutoSavedProject();\n  const [tracks, setTracks] = useState(initialData.tracks);\n  const [bpm, setBpm] = useState(initialData.bpm);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioContext, setAudioContext] = useState(null);\n  const [trackHeight] = useState(80);\n  const [playingAudios, setPlayingAudios] = useState(new Map());\n  const [startPlayTime, setStartPlayTime] = useState(null);\n  const [error, setError] = useState(null);\n  const [sounds, setSounds] = useState([]);\n  const [showSoundPanel, setShowSoundPanel] = useState(true);\n  const [draggedClip, setDraggedClip] = useState(null);\n  const [dragPreview, setDragPreview] = useState(null);\n  const [draggedSoundDuration, setDraggedSoundDuration] = useState(400); // ドラッグ中の音素材の長さ\n  const [dragOffset, setDragOffset] = useState(0); // ドラッグ開始時のクリップ内オフセット\n  \n  // 時間モード関連の状態\n  const [isTimeMode, setIsTimeMode] = useState(initialData.isTimeMode); // false: 拍子モード, true: 秒数モード\n  const [secondsPerBeat, setSecondsPerBeat] = useState(initialData.secondsPerBeat); // 秒数モード時の1拍あたりの秒数\n  const [isExporting, setIsExporting] = useState(false); // 音源出力中フラグ\n  const timelineRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const dragOverTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    // Web Audio API の初期化\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(ctx);\n    \n    // LocalStorageから音素材を読み込み\n    const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n    \n    // audioDataからBlobを復元\n    const soundsWithBlob = savedSounds.map(sound => {\n      if (sound.audioData) {\n        try {\n          // Base64データの検証\n          if (!sound.audioData.includes(',')) {\n            console.error('無効なBase64フォーマット:', sound.name);\n            return sound;\n          }\n          \n          const base64Data = sound.audioData.split(',')[1];\n          if (!base64Data || base64Data.length === 0) {\n            console.error('Base64データが空です:', sound.name);\n            return sound;\n          }\n          \n          const byteCharacters = atob(base64Data);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          \n          // Blobサイズの検証\n          if (byteArray.length === 0) {\n            console.error('Blobデータが空です:', sound.name);\n            return sound;\n          }\n          \n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          \n          // Blobの有効性を確認\n          if (blob.size === 0) {\n            console.error('作成されたBlobのサイズが0です:', sound.name);\n            return sound;\n          }\n          \n          return { ...sound, audioBlob: blob };\n        } catch (error) {\n          console.error('音声データの復元に失敗:', sound.name, error);\n          return sound;\n        }\n      }\n      return sound;\n    });\n    \n    // 有効な音素材のみをフィルタリング\n    const validSounds = soundsWithBlob.filter(sound => {\n      if (!sound.audioBlob) {\n        console.warn('audioBlobが存在しない音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (!(sound.audioBlob instanceof Blob)) {\n        console.warn('無効なBlob形式の音素材をスキップ:', sound.name);\n        return false;\n      }\n      if (sound.audioBlob.size === 0) {\n        console.warn('サイズが0のBlob音素材をスキップ:', sound.name);\n        return false;\n      }\n      return true;\n    });\n    \n    setSounds(validSounds);\n    \n    // 無効な音素材があった場合はLocalStorageを更新\n    if (validSounds.length !== soundsWithBlob.length) {\n      const validSoundsForStorage = validSounds.map(sound => ({\n        ...sound,\n        audioBlob: undefined // Blobは保存しない\n      }));\n      localStorage.setItem('soundRecordings', JSON.stringify(validSoundsForStorage));\n    }\n    \n    return () => {\n      if (ctx && ctx.state !== 'closed') {\n        ctx.close().catch(error => {\n          console.warn('初期AudioContext のクローズに失敗:', error);\n        });\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n      // 再生中の音声をすべて停止・クリーンアップ\n      // useEffect内でplayingAudiosの最新値を取得\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map(); // 空のMapを返す\n      });\n      // グローバル変数をクリーンアップ\n      if (window.currentDraggedSoundBlob) {\n        window.currentDraggedSoundBlob = null;\n      }\n      if (window.currentDraggedSound) {\n        window.currentDraggedSound = null;\n      }\n    };\n  }, []);\n\n  // 音声ファイルの継続時間を取得してピクセル幅に変換\n  const getAudioDuration = useCallback((audioBlob, currentBpm = bpm, currentSecondsPerBeat = secondsPerBeat) => {\n    return new Promise(async (resolve) => {\n      if (!audioBlob || !(audioBlob instanceof Blob)) {\n        resolve(400);\n        return;\n      }\n\n\n      // AudioContextを使用した方法を優先\n      if (audioContext) {\n        try {\n          const arrayBuffer = await audioBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          const durationInSeconds = audioBuffer.duration;\n          \n          \n          if (isFinite(durationInSeconds) && durationInSeconds > 0) {\n            let pixelsPerSecond;\n            if (isTimeMode) {\n              // 秒数モード：1拍の秒数に基づいてピクセル/秒を計算\n              const beatWidthInPixels = currentSecondsPerBeat * PIXELS_PER_SECOND;\n              pixelsPerSecond = PIXELS_PER_SECOND;\n            } else {\n              // 拍子モード：BPMベース\n              pixelsPerSecond = (currentBpm / 60) * 100;\n            }\n            const widthInPixels = durationInSeconds * pixelsPerSecond;\n            resolve(widthInPixels);\n            return;\n          }\n        } catch (error) {\n          console.error('AudioContext方式でエラー:', error);\n        }\n      }\n      resolve(400);\n    });\n  }, [audioContext, bpm, isTimeMode, secondsPerBeat]);\n\n  // 時間モードとBPMモードを切り替える関数\n  const toggleTimeMode = useCallback(async () => {\n    const newTimeMode = !isTimeMode;\n    setIsTimeMode(newTimeMode);\n    \n    // 既存のクリップのdurationを新しいモードで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n                const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n                const durationInSeconds = audioBuffer.duration;\n                \n                let pixelsPerSecond;\n                if (newTimeMode) {\n                  pixelsPerSecond = PIXELS_PER_SECOND;\n                } else {\n                  pixelsPerSecond = (bpm / 60) * 100;\n                }\n                const newDuration = durationInSeconds * pixelsPerSecond;\n                \n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration再計算に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  }, [isTimeMode, tracks, audioContext, bpm]);\n\n  // 秒数モードでの1拍あたりの秒数を変更する関数\n  const handleSecondsPerBeatChange = useCallback(async (newSecondsPerBeat) => {\n    setSecondsPerBeat(newSecondsPerBeat);\n    \n    // 秒数モードの場合、既存のクリップのdurationを再計算\n    if (isTimeMode) {\n      const updatedTracks = await Promise.all(\n        tracks.map(async (track) => {\n          const updatedClips = await Promise.all(\n            track.clips.map(async (clip) => {\n              if (clip.soundData && clip.soundData.audioBlob) {\n                try {\n                  const newDuration = await getAudioDuration(clip.soundData.audioBlob, bpm, newSecondsPerBeat);\n                  return { ...clip, duration: newDuration };\n                } catch (error) {\n                  console.warn('クリップのduration再計算に失敗:', error);\n                  return clip;\n                }\n              }\n              return clip;\n            })\n          );\n          return { ...track, clips: updatedClips };\n        })\n      );\n      \n      setTracks(updatedTracks);\n    }\n  }, [isTimeMode, tracks, getAudioDuration, bpm]);\n\n  // スナップ処理（拍子モード vs 秒数モード）\n  const getSnapPosition = useCallback((position) => {\n    if (isTimeMode) {\n      // 秒数モード：1拍（秒数）単位でスナップ\n      const beatWidthInPixels = secondsPerBeat * PIXELS_PER_SECOND;\n      const subBeatWidth = beatWidthInPixels / 2; // 半拍でスナップ\n      return Math.round(position / subBeatWidth) * subBeatWidth;\n    } else {\n      // 拍子モード：8分音符単位でスナップ\n      return Math.round(position / SUB_BEAT_WIDTH) * SUB_BEAT_WIDTH;\n    }\n  }, [isTimeMode, secondsPerBeat]);\n\n  // プレイヘッドのアニメーション更新\n  const updatePlayhead = useCallback(() => {\n    const animate = () => {\n      if (isPlaying && startPlayTime) {\n        const elapsed = (Date.now() - startPlayTime) / 1000; // 経過時間（秒）\n        \n        let pixelsPerSecond;\n        if (isTimeMode) {\n          // 秒数モード：直接1秒 = PIXELS_PER_SECONDピクセル\n          pixelsPerSecond = PIXELS_PER_SECOND;\n        } else {\n          // 拍子モード：BPMに基づいたピクセル/秒\n          pixelsPerSecond = (bpm / 60) * 100;\n        }\n        \n        const newCurrentTime = elapsed * pixelsPerSecond;\n        \n        // 有効な数値かチェック\n        if (isFinite(newCurrentTime) && newCurrentTime >= 0) {\n          setCurrentTime(newCurrentTime);\n        } else {\n          console.warn('無効なcurrentTime:', newCurrentTime, 'elapsed:', elapsed, 'pixelsPerSecond:', pixelsPerSecond);\n        }\n        \n        // 次のフレームを要求\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    if (isPlaying && startPlayTime) {\n      animate();\n    }\n  }, [isPlaying, startPlayTime, bpm, isTimeMode]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (!startPlayTime) {\n        // 再生開始時にstartPlayTimeを設定\n        let pixelsPerSecond;\n        if (isTimeMode) {\n          pixelsPerSecond = PIXELS_PER_SECOND;\n        } else {\n          pixelsPerSecond = (bpm / 60) * 100;\n        }\n        \n        if (isFinite(pixelsPerSecond) && pixelsPerSecond > 0) {\n          const timeInSeconds = currentTime / pixelsPerSecond;\n          if (isFinite(timeInSeconds) && timeInSeconds >= 0) {\n            setStartPlayTime(Date.now() - (timeInSeconds * 1000));\n          } else {\n            setStartPlayTime(Date.now());\n          }\n        } else {\n          setStartPlayTime(Date.now());\n        }\n      }\n    } else {\n      // 再生停止時にアニメーションをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      setStartPlayTime(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying, bpm, currentTime, isTimeMode]);\n\n  // startPlayTimeが設定されたときにアニメーションを開始\n  useEffect(() => {\n    if (isPlaying && startPlayTime) {\n      updatePlayhead();\n    }\n  }, [isPlaying, startPlayTime, updatePlayhead]);\n\n  // BPM変更時のハンドラー\n  const handleBpmChange = useCallback(async (newBpm) => {\n    setBpm(newBpm);\n    \n    // 既存のクリップのdurationを新しいBPMで再計算\n    const updatedTracks = await Promise.all(\n      tracks.map(async (track) => {\n        const updatedClips = await Promise.all(\n          track.clips.map(async (clip) => {\n            if (clip.soundData && clip.soundData.audioBlob) {\n              try {\n                const newDuration = await getAudioDuration(clip.soundData.audioBlob, newBpm);\n                return { ...clip, duration: newDuration };\n              } catch (error) {\n                console.warn('クリップのduration更新に失敗:', error);\n                return clip;\n              }\n            }\n            return clip;\n          })\n        );\n        return { ...track, clips: updatedClips };\n      })\n    );\n    \n    setTracks(updatedTracks);\n  }, [tracks, getAudioDuration]);\n\n  // プロジェクト保存機能\n  const saveProject = () => {\n    try {\n      const projectData = {\n        version: '1.0',\n        bpm: bpm,\n        tracks: tracks,\n        sounds: sounds.map(sound => ({\n          ...sound,\n          audioBlob: null, // Blobは別途保存\n          audioData: sound.audioData // base64データを保持\n        })),\n        timestamp: Date.now(),\n        trackNameCounter: trackNameCounterRef.current,\n        trackIdCounter: trackIdCounterRef.current,\n        isTimeMode: isTimeMode,\n        secondsPerBeat: secondsPerBeat\n      };\n\n      const projectJson = JSON.stringify(projectData, null, 2);\n      const blob = new Blob([projectJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `music-project-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n    } catch (error) {\n      console.error('プロジェクト保存エラー:', error);\n      setError('プロジェクトの保存に失敗しました。');\n    }\n  };\n\n  // プロジェクト読み込み機能\n  const loadProject = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const projectData = JSON.parse(e.target.result);\n        \n        // バージョンチェック\n        if (!projectData.version) {\n          throw new Error('不正なプロジェクトファイルです');\n        }\n\n        // 音声データ復元用のヘルパー関数\n        const restoreAudioBlob = (soundData) => {\n          if (soundData && soundData.audioData) {\n            try {\n              const byteCharacters = atob(soundData.audioData.split(',')[1]);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              return { ...soundData, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', soundData.name || 'unknown', error);\n              return soundData;\n            }\n          }\n          return soundData;\n        };\n\n        // BPMを復元\n        setBpm(projectData.bpm || 120);\n        \n        // 時間モード設定を復元\n        setIsTimeMode(projectData.isTimeMode || false);\n        setSecondsPerBeat(projectData.secondsPerBeat || 0.5);\n        \n        // トラックを復元（クリップ内の音声データも復元）\n        if (projectData.tracks) {\n          const restoredTracks = projectData.tracks.map(track => ({\n            ...track,\n            clips: track.clips\n              .map(clip => ({\n                ...clip,\n                soundData: restoreAudioBlob(clip.soundData)\n              }))\n              .filter(clip => {\n                // 無効なクリップを除外\n                if (!clip.soundData || !clip.soundData.name) {\n                  console.warn('無効なクリップを除外:', clip);\n                  return false;\n                }\n                return true;\n              })\n          }));\n          setTracks(restoredTracks);\n        }\n        \n        // カウンターを復元\n        if (projectData.trackNameCounter) {\n          trackNameCounterRef.current = projectData.trackNameCounter;\n        }\n        if (projectData.trackIdCounter) {\n          trackIdCounterRef.current = projectData.trackIdCounter;\n        }\n        \n        // 音素材を復元（既存の音素材に追加）\n        if (projectData.sounds) {\n          const restoredSounds = projectData.sounds.map(sound => restoreAudioBlob(sound));\n          \n          // 既存の音素材と読み込んだ音素材を結合\n          setSounds(prevSounds => {\n            const maxId = prevSounds.length > 0 ? Math.max(...prevSounds.map(s => s.id)) : 0;\n            const existingNames = new Set(prevSounds.map(s => s.name));\n            \n            const newSounds = restoredSounds.map((sound, index) => {\n              let newName = sound.name;\n              let counter = 1;\n              \n              // 名前の重複をチェックして、重複する場合は番号を付ける\n              while (existingNames.has(newName)) {\n                newName = `${sound.name} (${counter})`;\n                counter++;\n              }\n              existingNames.add(newName);\n              \n              return {\n                ...sound,\n                id: maxId + index + 1, // 新しいIDを割り当て\n                name: newName // 重複しない名前を設定\n              };\n            });\n            \n            return [...prevSounds, ...newSounds];\n          });\n        }\n        \n        setError(null);\n        \n        // 読み込み後に自動保存データも更新\n        setTimeout(() => {\n          const autoSaveData = {\n            version: '1.0',\n            bpm: projectData.bpm || 120,\n            tracks: projectData.tracks || [],\n            timestamp: Date.now(),\n            trackNameCounter: projectData.trackNameCounter || 1,\n            trackIdCounter: projectData.trackIdCounter || 1\n          };\n          localStorage.setItem('dawProjectAutoSave', JSON.stringify(autoSaveData));\n        }, 100);\n      } catch (error) {\n        console.error('プロジェクト読み込みエラー:', error);\n        setError('プロジェクトファイルの読み込みに失敗しました。ファイルが正しいか確認してください。');\n      }\n    };\n    \n    reader.readAsText(file);\n    // ファイル選択をリセット\n    event.target.value = '';\n  };\n\n  // 音源出力機能\n  const exportAudio = async () => {\n    if (!audioContext) {\n      setError('AudioContextが初期化されていません。');\n      return;\n    }\n\n    setIsExporting(true);\n    try {\n      // 全トラックの全クリップの最大終了時間を計算\n      let maxDuration = 0;\n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          const pixelsPerSecond = (bpm / 60) * 100;\n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipDurationInSeconds = clip.duration / pixelsPerSecond;\n          const clipEndTime = clipStartTimeInSeconds + clipDurationInSeconds;\n          maxDuration = Math.max(maxDuration, clipEndTime);\n        });\n      });\n\n      if (maxDuration === 0) {\n        setError('出力する音声がありません。音素材を配置してください。');\n        setIsExporting(false);\n        return;\n      }\n\n      // 出力用AudioContextを作成（44.1kHz）\n      const exportContext = new AudioContext({ sampleRate: 44100 });\n      const bufferLength = Math.ceil(maxDuration * exportContext.sampleRate);\n      const outputBuffer = exportContext.createBuffer(2, bufferLength, exportContext.sampleRate);\n      \n      const leftChannel = outputBuffer.getChannelData(0);\n      const rightChannel = outputBuffer.getChannelData(1);\n\n      // 各トラックの各クリップを処理\n      for (const track of tracks) {\n        for (const clip of track.clips) {\n          if (clip.soundData && clip.soundData.audioBlob) {\n            try {\n              const arrayBuffer = await clip.soundData.audioBlob.arrayBuffer();\n              const audioBuffer = await exportContext.decodeAudioData(arrayBuffer);\n              \n              const pixelsPerSecond = (bpm / 60) * 100;\n              const startTimeInSamples = Math.floor((clip.startTime / pixelsPerSecond) * exportContext.sampleRate);\n              \n              // 音声をミックス\n              for (let channel = 0; channel < Math.min(audioBuffer.numberOfChannels, 2); channel++) {\n                const sourceData = audioBuffer.getChannelData(channel);\n                const targetData = channel === 0 ? leftChannel : rightChannel;\n                \n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < targetData.length; i++) {\n                  targetData[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n              \n              // モノラル音源の場合は両チャンネルにコピー\n              if (audioBuffer.numberOfChannels === 1) {\n                const sourceData = audioBuffer.getChannelData(0);\n                for (let i = 0; i < sourceData.length && (startTimeInSamples + i) < rightChannel.length; i++) {\n                  rightChannel[startTimeInSamples + i] += sourceData[i];\n                }\n              }\n            } catch (error) {\n              console.error('クリップの処理エラー:', error);\n            }\n          }\n        }\n      }\n\n      // WAVファイルとして出力\n      const wavBlob = audioBufferToWav(outputBuffer);\n      const url = URL.createObjectURL(wavBlob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `exported-music-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.wav`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      if (exportContext && exportContext.state !== 'closed') {\n        await exportContext.close().catch(error => {\n          console.warn('Export AudioContext のクローズに失敗:', error);\n        });\n      }\n    } catch (error) {\n      console.error('音源出力エラー:', error);\n      setError('音源の出力に失敗しました。');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  // AudioBufferをWAVファイルに変換\n  const audioBufferToWav = (buffer) => {\n    const length = buffer.length;\n    const numberOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bytesPerSample = 2;\n    const blockAlign = numberOfChannels * bytesPerSample;\n    const byteRate = sampleRate * blockAlign;\n    const dataSize = length * blockAlign;\n    const bufferSize = 44 + dataSize;\n    \n    const arrayBuffer = new ArrayBuffer(bufferSize);\n    const view = new DataView(arrayBuffer);\n    \n    // WAVファイルヘッダー\n    const writeString = (offset, string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, bufferSize - 8, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, byteRate, true);\n    view.setUint16(32, blockAlign, true);\n    view.setUint16(34, bytesPerSample * 8, true);\n    writeString(36, 'data');\n    view.setUint32(40, dataSize, true);\n    \n    // 音声データ\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        const intSample = Math.max(-1, Math.min(1, sample)) * 0x7FFF;\n        view.setInt16(offset, intSample, true);\n        offset += 2;\n      }\n    }\n    \n    return new Blob([arrayBuffer], { type: 'audio/wav' });\n  };\n\n  const addTrack = () => {\n    // より確実にユニークなIDを生成\n    trackIdCounterRef.current += 1;\n    const uniqueId = Date.now() + trackIdCounterRef.current;\n    \n    // トラック名の番号を増加（削除されても番号は戻らない）\n    trackNameCounterRef.current += 1;\n    const trackName = `トラック ${trackNameCounterRef.current}`;\n    \n    const newTrack = {\n      id: uniqueId,\n      name: trackName,\n      clips: []\n    };\n    setTracks(prevTracks => [...prevTracks, newTrack]);\n  };\n\n  const removeTrack = (trackId) => {\n    setTracks(prevTracks => {\n      if (prevTracks.length > 1) {\n        return prevTracks.filter(track => track.id !== trackId);\n      }\n      return prevTracks;\n    });\n  };\n\n  const handleDrop = async (e, trackId, timePosition) => {\n    e.preventDefault();\n    setDragPreview(null);\n    \n    \n    try {\n      \n      // 既存のクリップの移動かどうかチェック\n      if (draggedClip) {\n        // ドラッグオフセットを考慮した新しい開始位置を計算\n        const adjustedPosition = timePosition - dragOffset;\n        // 拍または秒に合わせて位置を調整\n        const snappedPosition = Math.max(0, getSnapPosition(adjustedPosition));\n        \n        \n        // 既存クリップの移動\n        const updatedClip = {\n          ...draggedClip,\n          startTime: snappedPosition,\n          trackId: trackId\n        };\n\n        setTracks(prevTracks => prevTracks.map(track => {\n          if (track.id === draggedClip.originalTrackId && track.id === trackId) {\n            // 同じトラック内での移動\n            return {\n              ...track,\n              clips: track.clips.map(clip => \n                clip.id === draggedClip.id ? updatedClip : clip\n              )\n            };\n          } else if (track.id === draggedClip.originalTrackId) {\n            // 元のトラックからクリップを削除\n            return {\n              ...track,\n              clips: track.clips.filter(clip => clip.id !== draggedClip.id)\n            };\n          } else if (track.id === trackId) {\n            // 新しいトラックにクリップを追加\n            return {\n              ...track,\n              clips: [...track.clips, updatedClip]\n            };\n          }\n          return track;\n        }));\n        setDraggedClip(null);\n        setDragOffset(0);\n        return;\n      }\n      \n      // 新しい音素材の配置\n      let soundData;\n      try {\n        // dataTransferからデータを取得\n        const jsonData = e.dataTransfer ? e.dataTransfer.getData('application/json') : '';\n        if (jsonData) {\n          soundData = JSON.parse(jsonData);\n        } else {\n          // モバイルの場合はグローバル変数から取得\n          soundData = window.currentDraggedSound;\n        }\n      } catch (error) {\n        console.error('ドラッグデータの取得に失敗:', error);\n        soundData = window.currentDraggedSound; // フォールバック\n      }\n      \n      if (!soundData) {\n        console.error('音素材データが見つかりません');\n        setError('音素材データが見つかりません。再度お試しください。');\n        return;\n      }\n\n      // soundDataの必要なプロパティをチェック\n      if (!soundData.name) {\n        console.error('音素材の名前が見つかりません:', soundData);\n        setError('音素材の名前が不正です。再度お試しください。');\n        return;\n      }\n      \n      // グローバル変数からaudioBlobを復元\n      if (window.currentDraggedSoundBlob) {\n        soundData.audioBlob = window.currentDraggedSoundBlob;\n        window.currentDraggedSoundBlob = null; // クリーンアップ\n      }\n      \n      // グローバル変数をクリア\n      window.currentDraggedSound = null;\n      \n      \n      // 音声の実際の継続時間を取得（現在のBPMに基づいて）\n      let duration = 400; // デフォルト値（1小節）\n      if (soundData.audioBlob) {\n        try {\n          duration = await getAudioDuration(soundData.audioBlob, bpm);\n        } catch (error) {\n          console.warn('音声継続時間の取得に失敗しました:', error);\n        }\n      }\n\n      // durationが有効な値かチェック\n      if (!isFinite(duration) || duration <= 0) {\n        console.warn('無効なduration:', duration, 'デフォルト値を使用');\n        duration = 400; // 1小節分\n      }\n\n      // 新しい音素材の場合は通常のスナップ処理\n      const snappedPosition = getSnapPosition(timePosition);\n\n      const newClip = {\n        id: Date.now() + Math.random(), // より確実にユニークなIDを生成\n        soundData: soundData,\n        startTime: snappedPosition,\n        duration: duration,\n        trackId: trackId\n      };\n\n\n      // 関数型更新を使用して最新の状態を確実に取得\n      setTracks(prevTracks => {\n        const updatedTracks = prevTracks.map(track => \n          track.id === trackId \n            ? { ...track, clips: [...track.clips, newClip] }\n            : track\n        );\n        return updatedTracks;\n      });\n    } catch (error) {\n      console.error('ドロップエラー:', error);\n      setError('音素材の配置に失敗しました。再度お試しください。');\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    \n    // ドラッグされているのが既存クリップか新しい音素材かで処理を分ける\n    if (draggedClip) {\n      e.dataTransfer.dropEffect = 'move';\n    } else {\n      e.dataTransfer.dropEffect = 'copy';\n    }\n    \n    // スロットリング - 16ms（60FPS）間隔で実行を制限\n    if (dragOverTimeoutRef.current) {\n      return;\n    }\n    \n    // 必要な情報を事前に抽出\n    const clientX = e.clientX;\n    const currentTarget = e.currentTarget;\n    \n    dragOverTimeoutRef.current = setTimeout(() => {\n      dragOverTimeoutRef.current = null;\n      updateDragPreview(clientX, currentTarget);\n    }, 16);\n  };\n  \n  const updateDragPreview = (clientX, trackElement) => {\n    // null チェックを追加\n    if (!trackElement || !timelineRef.current) {\n      return;\n    }\n\n    // 初回ドラッグプレビュー表示時に強制クリーンアップタイマーを設定\n    if (!window.dragCleanupTimer) {\n      window.dragCleanupTimer = setTimeout(() => {\n        cleanupDragState();\n      }, 10000); // 10秒後に強制クリーンアップ\n    }\n    \n    try {\n      // ドラッグプレビューの更新\n      const rect = trackElement.getBoundingClientRect();\n      const timePosition = clientX - rect.left;\n      \n      let snappedPosition;\n      \n      if (draggedClip) {\n        // 既存クリップの場合：ドラッグオフセットを考慮\n        const adjustedPosition = timePosition - dragOffset;\n        snappedPosition = Math.max(0, getSnapPosition(adjustedPosition));\n      } else {\n        // 新しい音素材の場合：通常の処理\n        snappedPosition = getSnapPosition(timePosition);\n      }\n      \n      const trackRect = trackElement.getBoundingClientRect();\n      const tracksAreaRect = timelineRef.current.getBoundingClientRect();\n      \n      if (tracksAreaRect && trackElement.dataset && trackElement.dataset.trackId) {\n        const relativeTop = trackRect.top - tracksAreaRect.top;\n        const trackId = parseInt(trackElement.dataset.trackId);\n        \n        // trackIdが有効な数値かチェック\n        if (isNaN(trackId)) {\n          return;\n        }\n        \n        // プレビュー幅を決定\n        let previewWidth = 400; // デフォルト値（1小節）\n        \n        if (draggedClip) {\n          // 既存クリップの場合\n          previewWidth = isFinite(draggedClip.duration) && draggedClip.duration > 0 \n            ? draggedClip.duration \n            : 400;\n        } else {\n          // 新しい音素材の場合、事前に計算された長さを使用\n          previewWidth = draggedSoundDuration;\n        }\n        \n        setDragPreview({\n          left: snappedPosition,\n          top: relativeTop + 10,\n          width: previewWidth,\n          trackId: trackId\n        });\n      }\n    } catch (error) {\n      console.warn('ドラッグプレビュー更新エラー:', error);\n      // エラーが発生した場合はプレビューをクリア\n      setDragPreview(null);\n    }\n  };\n\n  const removeClip = (trackId, clipId) => {\n    setTracks(prevTracks => prevTracks.map(track => \n      track.id === trackId \n        ? { ...track, clips: track.clips.filter(clip => clip.id !== clipId) }\n        : track\n    ));\n  };\n\n  // クリップのドラッグ開始\n  const handleClipDragStart = (clip, originalTrackId, mouseX, clipElement) => {\n    \n    // クリップ内でのマウス位置のオフセットを計算\n    const clipRect = clipElement.getBoundingClientRect();\n    const offsetInClip = mouseX - clipRect.left;\n    \n    \n    setDraggedClip({ ...clip, originalTrackId });\n    setDragOffset(offsetInClip);\n  };\n\n  // ドラッグ状態の完全なクリーンアップ\n  const cleanupDragState = useCallback(() => {\n    \n    // ドラッグオーバーのタイムアウトをクリア\n    if (dragOverTimeoutRef.current) {\n      clearTimeout(dragOverTimeoutRef.current);\n      dragOverTimeoutRef.current = null;\n    }\n    \n    // 強制クリーンアップタイマーをクリア\n    if (window.dragCleanupTimer) {\n      clearTimeout(window.dragCleanupTimer);\n      window.dragCleanupTimer = null;\n    }\n    \n    // すべてのドラッグ関連の状態をリセット\n    setDraggedClip(null);\n    setDragPreview(null);\n    setDraggedSoundDuration(400);\n    setDragOffset(0);\n    \n    // DOM要素のクリーンアップ\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // モバイル用のドラッグプレビューを削除\n    const mobileDragPreview = document.querySelector('.mobile-drag-preview');\n    if (mobileDragPreview) {\n      mobileDragPreview.remove();\n    }\n    \n    // グローバル変数のクリーンアップ\n    if (window.currentDraggedSoundBlob) {\n      window.currentDraggedSoundBlob = null;\n    }\n    if (window.currentDraggedSound) {\n      window.currentDraggedSound = null;\n    }\n    \n    // ボディクラスのクリーンアップ\n    document.body.classList.remove('dragging');\n  }, []);\n\n  // コンポーネントマウント時にグローバルコールバックを設定\n  useEffect(() => {\n    window.cleanupDragStateCallback = cleanupDragState;\n    \n    // グローバルなドラッグ終了イベントリスナーを追加\n    const handleGlobalDragEnd = () => {\n      cleanupDragState();\n    };\n\n    const handleGlobalDragLeave = (e) => {\n      // ドキュメント外にドラッグが出た場合\n      if (!e.relatedTarget || e.relatedTarget.nodeName === 'HTML') {\n        cleanupDragState();\n      }\n    };\n\n    // ドキュメントレベルでイベントリスナーを設定\n    document.addEventListener('dragend', handleGlobalDragEnd);\n    document.addEventListener('dragleave', handleGlobalDragLeave);\n    \n    // クリーンアップ関数\n    return () => {\n      if (window.cleanupDragStateCallback === cleanupDragState) {\n        window.cleanupDragStateCallback = null;\n      }\n      document.removeEventListener('dragend', handleGlobalDragEnd);\n      document.removeEventListener('dragleave', handleGlobalDragLeave);\n    };\n  }, [cleanupDragState]);\n\n  // ドラッグ終了時のクリーンアップ\n  const handleDragEnd = (e) => {\n    // ドロップが正常に処理されなかった場合、元の状態を保持\n    if (draggedClip && e && e.dataTransfer && e.dataTransfer.dropEffect === 'none') {\n    }\n    \n    // 完全なクリーンアップ\n    cleanupDragState();\n  };\n\n  const play = async () => {\n    try {\n      // AudioContextが中断されている場合は再開\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      setIsPlaying(true);\n      \n      // 現在の時間位置に基づいて、再生すべきクリップを見つける\n      let pixelsPerSecond;\n      if (isTimeMode) {\n        pixelsPerSecond = PIXELS_PER_SECOND;\n      } else {\n        pixelsPerSecond = (bpm / 60) * 100;\n      }\n      \n      const currentTimeInSeconds = currentTime / pixelsPerSecond;\n      \n      // 各トラックのクリップを再生\n      const newPlayingAudios = new Map();\n      \n      tracks.forEach(track => {\n        track.clips.forEach(clip => {\n          // clip.durationが有効な値かチェック\n          if (!isFinite(clip.duration) || clip.duration <= 0) {\n            console.warn('無効なclip.duration:', clip.duration, 'クリップをスキップします');\n            return;\n          }\n          \n          const clipStartTimeInSeconds = clip.startTime / pixelsPerSecond;\n          const clipEndTimeInSeconds = clipStartTimeInSeconds + (clip.duration / pixelsPerSecond);\n          \n          // 計算結果が有効かチェック\n          if (!isFinite(clipStartTimeInSeconds) || !isFinite(clipEndTimeInSeconds)) {\n            console.warn('無効な時間計算:', { clipStartTimeInSeconds, clipEndTimeInSeconds });\n            return;\n          }\n          \n          // 現在の時間位置がクリップの範囲内または今後再生される場合\n          if (clipEndTimeInSeconds > currentTimeInSeconds) {\n            const delay = Math.max(0, clipStartTimeInSeconds - currentTimeInSeconds);\n            if (isFinite(delay) && delay >= 0) {\n              scheduleClipPlayback(clip, delay * 1000, newPlayingAudios);\n            }\n          }\n        });\n      });\n      \n      setPlayingAudios(newPlayingAudios);\n    } catch (error) {\n      console.error('再生エラー:', error);\n      setError('音声の再生に失敗しました。ブラウザで音声が有効になっているか確認してください。');\n    }\n  };\n\n  const scheduleClipPlayback = (clip, delayMs, playingAudiosMap) => {\n    \n    if (clip.soundData && clip.soundData.audioBlob && clip.soundData.audioBlob instanceof Blob) {\n      try {\n        const audio = new Audio();\n        const audioUrl = URL.createObjectURL(clip.soundData.audioBlob);\n        audio.src = audioUrl;\n        \n        const timeoutId = setTimeout(() => {\n          audio.play().catch(error => {\n            console.error('音声再生エラー:', error);\n            URL.revokeObjectURL(audioUrl); // メモリリークを防ぐ\n          });\n        }, delayMs);\n        \n        // 音声終了時にURLを解放\n        audio.addEventListener('ended', () => {\n          URL.revokeObjectURL(audioUrl);\n        });\n        \n        playingAudiosMap.set(clip.id, { audio, timeoutId, audioUrl });\n      } catch (error) {\n        console.error('createObjectURL エラー:', error, 'audioBlob:', clip.soundData.audioBlob);\n      }\n    } else {\n      console.warn('audioBlobが無効です。クリップ情報:', {\n        clipId: clip.id,\n        soundDataName: clip.soundData?.name,\n        hasAudioData: !!clip.soundData?.audioData,\n        hasAudioBlob: !!clip.soundData?.audioBlob,\n        audioBlobType: typeof clip.soundData?.audioBlob,\n        isInstanceOfBlob: clip.soundData?.audioBlob instanceof Blob\n      });\n      \n      // AudioBlobが無効な場合、audioDataから復元を試行\n      if (clip.soundData && clip.soundData.audioData && !clip.soundData.audioBlob) {\n        try {\n          const byteCharacters = atob(clip.soundData.audioData.split(',')[1]);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], { type: 'audio/wav' });\n          \n          // クリップのsoundDataを更新\n          clip.soundData.audioBlob = blob;\n          \n          // 再帰的に再試行\n          scheduleClipPlayback(clip, delayMs, playingAudiosMap);\n          return;\n        } catch (restoreError) {\n          console.error('audioDataからのBlob復元に失敗:', restoreError);\n        }\n      }\n    }\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n    \n    // 再生中の音声を一時停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (!audio.paused) {\n        audio.pause();\n      }\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n  };\n\n  const stop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    \n    // 再生中の音声を停止\n    playingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      audio.pause();\n      audio.currentTime = 0;\n      // URLを解放\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    });\n    \n    setPlayingAudios(new Map());\n  };\n\n  // タイムラインデータの自動保存機能\n  useEffect(() => {\n    const autoSaveProject = () => {\n      try {\n        const projectData = {\n          version: '1.0',\n          bpm: bpm,\n          tracks: tracks,\n          timestamp: Date.now(),\n          trackNameCounter: trackNameCounterRef.current,\n          trackIdCounter: trackIdCounterRef.current,\n          isTimeMode: isTimeMode,\n          secondsPerBeat: secondsPerBeat\n        };\n\n        localStorage.setItem('dawProjectAutoSave', JSON.stringify(projectData));\n\n      } catch (error) {\n        console.error('プロジェクトの自動保存に失敗:', error);\n      }\n    };\n\n    // 初期化後の自動保存（tracksやbpmが変更された時）\n    if (tracks.length > 0) {\n      autoSaveProject();\n    }\n  }, [tracks, bpm, isTimeMode, secondsPerBeat]);\n\n  // 音素材の更新監視（他のページで音が追加された場合の対応）\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        // ページが表示されたときに音素材を再読み込み\n        const savedSounds = JSON.parse(localStorage.getItem('soundRecordings') || '[]');\n        \n        // 音声データ復元処理（既存のロジックを再利用）\n        const soundsWithBlob = savedSounds.map(sound => {\n          if (sound.audioData) {\n            try {\n              const base64Data = sound.audioData.split(',')[1];\n              if (!base64Data || base64Data.length === 0) {\n                return sound;\n              }\n              \n              const byteCharacters = atob(base64Data);\n              const byteNumbers = new Array(byteCharacters.length);\n              for (let i = 0; i < byteCharacters.length; i++) {\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\n              }\n              const byteArray = new Uint8Array(byteNumbers);\n              const blob = new Blob([byteArray], { type: 'audio/wav' });\n              \n              return { ...sound, audioBlob: blob };\n            } catch (error) {\n              console.error('音声データの復元に失敗:', sound.name, error);\n              return sound;\n            }\n          }\n          return sound;\n        });\n        \n        const validSounds = soundsWithBlob.filter(sound => \n          sound.audioBlob && sound.audioBlob instanceof Blob && sound.audioBlob.size > 0\n        );\n        \n        setSounds(validSounds);\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  // 自動保存データをクリアする機能\n  const clearAutoSave = () => {\n    try {\n      localStorage.removeItem('dawProjectAutoSave');\n      \n      // 初期状態にリセット\n      setTracks([{ \n        id: Date.now(), \n        name: 'トラック 1', \n        clips: [] \n      }]);\n      setBpm(120);\n      trackNameCounterRef.current = 1;\n      trackIdCounterRef.current = 1;\n      \n      setError(null);\n      alert('✅ プロジェクトをリセットしました');\n    } catch (error) {\n      console.error('自動保存データのクリアに失敗:', error);\n      setError('プロジェクトのリセットに失敗しました');\n    }\n  };\n\n  // 無効なクリップを除外する関数\n  const cleanupInvalidClips = () => {\n    setTracks(prevTracks => {\n      const cleanedTracks = prevTracks.map(track => ({\n        ...track,\n        clips: track.clips.filter(clip => {\n          if (!clip.soundData || !clip.soundData.name) {\n            console.warn('無効なクリップを除外:', clip);\n            return false;\n          }\n          return true;\n        })\n      }));\n      \n      const removedCount = prevTracks.reduce((total, track) => total + track.clips.length, 0) - \n                          cleanedTracks.reduce((total, track) => total + track.clips.length, 0);\n      \n      if (removedCount > 0) {\n      }\n      \n      return cleanedTracks;\n    });\n  };\n\n  // 初期化時に無効なクリップをクリーンアップ\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      cleanupInvalidClips();\n    }, 1000); // 1秒後に実行\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // コンポーネントアンマウント時の包括的クリーンアップ\n  useEffect(() => {\n    return () => {\n      // ドラッグ状態のクリーンアップ\n      cleanupDragState();\n      \n      // 再生中の音声をすべて停止\n      setPlayingAudios(currentPlayingAudios => {\n        currentPlayingAudios.forEach(({ audio, timeoutId, audioUrl }) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          if (audio) {\n            audio.pause();\n            audio.src = '';\n          }\n          if (audioUrl) {\n            URL.revokeObjectURL(audioUrl);\n          }\n        });\n        return new Map();\n      });\n      \n      // AudioContextをクリーンアップ\n      if (audioContext && audioContext.state !== 'closed') {\n        audioContext.close().catch(error => {\n          console.warn('AudioContext のクローズに失敗:', error);\n        });\n      }\n      \n      // アニメーションフレームをクリア\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      \n      // タイムアウトをクリア\n      if (dragOverTimeoutRef.current) {\n        clearTimeout(dragOverTimeoutRef.current);\n      }\n    };\n  }, [cleanupDragState, audioContext]);\n\n  return (\n    <div className=\"daw-page\">\n      <h2>🎹 音楽づくりページ</h2>\n      <p>音素材をドラッグ&ドロップして音楽を作りましょう！</p>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError(null)}>×</button>\n        </div>\n      )}\n\n      <div className=\"daw-controls card\">\n        {/* 上段：音素材表示切り替え、保存関連機能 */}\n        <div className=\"top-controls-row\">\n          <div className=\"left-controls\">\n            <button \n              className=\"button-secondary\" \n              onClick={() => setShowSoundPanel(!showSoundPanel)}\n            >\n              {showSoundPanel ? '🎵 音素材を隠す' : '🎵 音素材を表示'}\n            </button>\n          </div>\n\n          <div className=\"right-controls\">\n            <div className=\"project-controls\">\n              <button className=\"button-secondary\" onClick={saveProject}>\n                💾 プロジェクト保存\n              </button>\n              <label className=\"button-secondary file-input-label\">\n                📁 プロジェクト読み込み\n                <input\n                  type=\"file\"\n                  accept=\".json\"\n                  onChange={loadProject}\n                  style={{ display: 'none' }}\n                />\n              </label>\n            <button \n              className=\"button-warning\" \n              onClick={() => {\n                if (window.confirm('🗑️ プロジェクトをリセットしますか？\\n\\n現在の作業内容がすべて削除されます。')) {\n                  clearAutoSave();\n                }\n              }}\n              title=\"プロジェクトをリセット（自動保存データもクリア）\"\n            >\n              🗑️ リセット\n            </button>\n            <button \n              className=\"button-primary\" \n              onClick={exportAudio}\n              disabled={isExporting}\n            >\n              {isExporting ? '🔄 出力中...' : '🎧 音源出力'}\n            </button>\n            </div>\n          </div>\n        </div>\n\n        {/* 下段：再生コントロール、BPM、モード設定 */}\n        <div className=\"bottom-controls-row\">\n          <div className=\"transport-controls\">\n            <button \n              className={`transport-btn play-btn ${isPlaying ? 'playing' : ''}`}\n              onClick={isPlaying ? pause : play}\n            >\n              {isPlaying ? '⏸️' : '▶️'}\n            </button>\n            <button className=\"transport-btn stop-btn\" onClick={stop}>\n              ⏹️\n            </button>\n          </div>\n\n          <div className=\"timing-controls\">\n            {!isTimeMode && (\n              <div className=\"bpm-control\">\n                <label htmlFor=\"bpm\">🎵 BPM:</label>\n                <input\n                  id=\"bpm\"\n                  type=\"number\"\n                  value={bpm}\n                  onChange={(e) => handleBpmChange(parseInt(e.target.value))}\n                  min=\"60\"\n                  max=\"200\"\n                  className=\"bpm-input\"\n                />\n              </div>\n            )}\n\n            <div className=\"time-mode-control\">\n              <button \n                className={`time-mode-toggle ${isTimeMode ? 'active' : ''}`}\n                onClick={toggleTimeMode}\n                title={isTimeMode ? '拍子モードに切り替え' : '秒数モードに切り替え'}\n              >\n                ⏰ {isTimeMode ? '秒数モード' : '拍子モード'}\n              </button>\n              \n              {isTimeMode && (\n                <div className=\"seconds-per-beat-control\">\n                  <label htmlFor=\"secondsPerBeat\">1拍:</label>\n                  <input\n                    id=\"secondsPerBeat\"\n                    type=\"number\"\n                    value={secondsPerBeat}\n                    onChange={(e) => handleSecondsPerBeatChange(parseFloat(e.target.value))}\n                    min=\"0.1\"\n                    max=\"5.0\"\n                    step=\"0.1\"\n                    className=\"seconds-input\"\n                  />\n                  <span>秒</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"daw-main-area\">\n        <div className={`sound-panel ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"sound-panel-header\">\n            <h3>🎵 音素材</h3>\n            <button \n              className=\"sound-panel-close\"\n              onClick={() => setShowSoundPanel(false)}\n              title=\"音素材パネルを閉じる\"\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"sound-list\">\n            {sounds.length > 0 ? (\n              sounds.map(sound => (\n                <SoundItem \n                  key={sound.id} \n                  sound={sound} \n                  onDragStart={async (sound) => {\n                    // ドラッグ開始時に音声の長さを計算\n                    if (sound.audioBlob) {\n                      try {\n                        const duration = await getAudioDuration(sound.audioBlob, bpm, secondsPerBeat);\n                        setDraggedSoundDuration(duration);\n                      } catch (error) {\n                        console.warn('ドラッグ時の音声長さ計算に失敗:', error);\n                        setDraggedSoundDuration(400);\n                      }\n                    } else {\n                      setDraggedSoundDuration(400);\n                    }\n                  }}\n                />\n              ))\n            ) : (\n              <div className=\"no-sounds\">\n                <p>音素材がありません</p>\n                <p>「音あつめ」ページで音を録音してください</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={`daw-workspace ${!showSoundPanel ? 'panel-hidden' : ''}`}>\n          <div className=\"track-headers\">\n            <div className=\"timeline-header-spacer\">\n              タイムライン\n            </div>\n            {tracks.map((track, index) => (\n              <TrackHeader \n                key={track.id} \n                track={track} \n                trackIndex={index}\n                onRemove={removeTrack}\n                trackHeight={trackHeight}\n              />\n            ))}\n            <div className=\"track-add-button-container\" style={{ height: trackHeight }}>\n              <button className=\"button-primary track-add-btn\" onClick={addTrack}>\n                ➕ トラック追加\n              </button>\n            </div>\n          </div>\n\n          <div className=\"timeline-container\">\n            <Timeline bpm={bpm} isTimeMode={isTimeMode} secondsPerBeat={secondsPerBeat} />\n            <div \n              className=\"tracks-area\" \n              ref={timelineRef} \n              style={{ \n                minWidth: isTimeMode \n                  ? Math.ceil(TIME_MODE_TOTAL_SECONDS / secondsPerBeat) * (secondsPerBeat * PIXELS_PER_SECOND)\n                  : TOTAL_MEASURES * MEASURE_WIDTH \n              }}\n            >\n              <Playhead currentTime={currentTime} />\n              {dragPreview && (\n                <div \n                  className=\"drag-preview\"\n                  style={{\n                    left: dragPreview.left,\n                    top: dragPreview.top,\n                    width: dragPreview.width\n                  }}\n                />\n              )}\n              {tracks.map((track) => (\n                <Track\n                  key={track.id}\n                  track={track}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onRemoveClip={removeClip}\n                  onClipDragStart={handleClipDragStart}\n                  onDragEnd={handleDragEnd}\n                  trackHeight={trackHeight}\n                  updateDragPreview={updateDragPreview}\n                  isTimeMode={isTimeMode}\n                  secondsPerBeat={secondsPerBeat}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"instructions card\">\n        <h3>📖 使い方</h3>\n        <ul>\n          <li><strong>🖥️ PC:</strong> 左側の音素材パネルから音素材をトラックにドラッグ&ドロップして配置</li>\n          <li><strong>📱 スマホ/タブレット:</strong> 音素材を長押ししてからトラックまでドラッグして配置</li>\n          <li>配置済みの音素材もドラッグして別の場所に移動できます</li>\n          <li>ドラッグ中は配置予定位置に青い影が表示されます</li>\n          <li><strong>⏰ 時間モード切り替え:</strong> 「拍子モード」と「秒数モード」を切り替えできます</li>\n          <li><strong>拍子モード:</strong> 8分音符（裏拍含む）に合わせて音素材が自動配置され、BPMで速さを調整</li>\n          <li><strong>秒数モード:</strong> 小節や拍子の概念をなくし、「何秒で1拍」という単位で音素材を配置</li>\n          <li>音素材パネルの▶️ボタンで個別に音を確認できます</li>\n          <li>▶️ボタンで再生、⏸️ボタンで一時停止、⏹️ボタンで停止</li>\n          <li>トラックを追加して複数の音を重ねることができます</li>\n          <li><strong>💾 プロジェクト保存:</strong> 編集中のデータをJSONファイルとして保存</li>\n          <li><strong>📁 プロジェクト読み込み:</strong> 保存したプロジェクトファイルを読み込んで編集を再開</li>\n          <li><strong>🎧 音源出力:</strong> 完成した楽曲をWAVファイルとして出力</li>\n          <li><strong>🗑️ リセット:</strong> 現在のプロジェクトをリセットして新しく始める</li>\n        </ul>\n        <div className=\"auto-save-info\">\n          <h4>💾 自動保存機能</h4>\n          <ul>\n            <li><strong>自動保存:</strong> トラック、BPM、時間モード設定の変更は自動的に保存されます</li>\n            <li><strong>他ページとの連携:</strong> 「音あつめ」ページで録音した音は自動的に反映されます</li>\n            <li><strong>復元機能:</strong> ページをリロードしても作業内容が自動的に復元されます</li>\n            <li><strong>安心して移動:</strong> 他のページに移動しても作業内容は保持されます</li>\n          </ul>\n        </div>\n        <div className=\"mobile-tips\">\n          <h4>📱 スマートフォン利用のコツ</h4>\n          <ul>\n            <li>音素材を軽く長押しするとドラッグモードになります</li>\n            <li>ドラッグ中は画面がスクロールしないよう制御されます</li>\n            <li>青くハイライトされたトラックで指を離すと音素材が配置されます</li>\n            <li>横画面表示にするとより使いやすくなります</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SoundItem = ({ sound, onDragStart }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchMove, setTouchMove] = useState(null);\n\n  const handleDragStart = (e) => {\n    // audioBlob以外のデータをJSON文字列として設定\n    const soundDataForTransfer = {\n      ...sound,\n      audioBlob: null // Blobは直接シリアライズできないため一時的にnullに\n    };\n    \n    e.dataTransfer.setData('application/json', JSON.stringify(soundDataForTransfer));\n    e.dataTransfer.effectAllowed = 'copy';\n    \n    // 実際のaudioBlobは別途グローバル変数で保持\n    window.currentDraggedSoundBlob = sound.audioBlob;\n    \n    // 親コンポーネントのonDragStart関数を呼び出し（音声の長さを計算）\n    if (onDragStart) {\n      onDragStart(sound);\n    }\n  };\n\n  // タッチイベント対応\n  const handleTouchStart = (e) => {\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // 長押し判定用のタイマーは設定せず、移動検知でのみドラッグを開始\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（15px以上移動）- 閾値を上げてより意図的な移動のみドラッグ扱い\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 15 || deltaY > 15)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      \n      // 親コンポーネントのonDragStart関数を呼び出し\n      if (onDragStart) {\n        onDragStart(sound);\n      }\n      // グローバル変数に設定\n      window.currentDraggedSoundBlob = sound.audioBlob;\n      window.currentDraggedSound = sound;\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、代わりにtouchActionでスクロールを制御\n      \n      // ドラッグプレビューの位置を更新\n      const dragPreview = document.querySelector('.mobile-drag-preview');\n      if (dragPreview) {\n        dragPreview.style.left = `${currentPos.x - 50}px`;\n        dragPreview.style.top = `${currentPos.y - 20}px`;\n      }\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const trackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // ドロップイベントを発火\n        const dropEvent = new CustomEvent('mobileDrop', {\n          detail: {\n            trackId,\n            timePosition,\n            sound: sound\n          }\n        });\n        trackElement.dispatchEvent(dropEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    \n    // SoundItem 内での直接クリーンアップ\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // モバイル用のドラッグプレビューを削除\n    const mobileDragPreview = document.querySelector('.mobile-drag-preview');\n    if (mobileDragPreview) {\n      mobileDragPreview.remove();\n    }\n    \n    // グローバル変数をクリア\n    if (window.currentDraggedSoundBlob) {\n      window.currentDraggedSoundBlob = null;\n    }\n    if (window.currentDraggedSound) {\n      window.currentDraggedSound = null;\n    }\n  };\n\n  const playSound = () => {\n    if (sound.audioBlob && !isPlaying && !isDragging) {\n      // Blobの有効性をチェック\n      if (!(sound.audioBlob instanceof Blob) || sound.audioBlob.size === 0) {\n        console.error('無効なaudioBlob:', {\n          name: sound.name,\n          isBlob: sound.audioBlob instanceof Blob,\n          size: sound.audioBlob?.size\n        });\n        return;\n      }\n      \n      const audio = new Audio();\n      let audioUrl;\n      \n      try {\n        audioUrl = URL.createObjectURL(sound.audioBlob);\n        audio.src = audioUrl;\n        \n        audio.play()\n          .then(() => {\n            setIsPlaying(true);\n            \n            const handleEnded = () => {\n              setIsPlaying(false);\n              if (audioUrl) {\n                URL.revokeObjectURL(audioUrl); // URLをクリーンアップ\n              }\n              audio.removeEventListener('ended', handleEnded);\n            };\n            \n            audio.addEventListener('ended', handleEnded);\n            \n            // 音声の読み込みエラーもハンドリング\n            audio.addEventListener('error', (error) => {\n              console.error('音声読み込みエラー:', error);\n              setIsPlaying(false);\n              if (audioUrl) {\n                URL.revokeObjectURL(audioUrl);\n              }\n            });\n          })\n          .catch(error => {\n            console.error('音声再生エラー:', error);\n            if (audioUrl) {\n              URL.revokeObjectURL(audioUrl); // エラー時もクリーンアップ\n            }\n            setIsPlaying(false);\n          });\n      } catch (error) {\n        console.error('createObjectURLエラー:', error);\n        setIsPlaying(false);\n      }\n    } else {\n      console.error('再生条件不満足:', {\n        hasAudioBlob: !!sound.audioBlob,\n        isPlaying,\n        isDragging\n      });\n    }\n  };\n\n  // ドラッグプレビューを作成\n  const createDragPreview = useCallback(() => {\n    if (isDragging && touchMove) {\n      let dragPreview = document.querySelector('.mobile-drag-preview');\n      if (!dragPreview) {\n        dragPreview = document.createElement('div');\n        dragPreview.className = 'mobile-drag-preview';\n        dragPreview.textContent = sound.name;\n        dragPreview.style.cssText = `\n          position: fixed;\n          background: rgba(0, 123, 255, 0.8);\n          color: white;\n          padding: 5px 10px;\n          border-radius: 4px;\n          font-size: 12px;\n          pointer-events: none;\n          z-index: 1000;\n          left: ${touchMove.x - 50}px;\n          top: ${touchMove.y - 20}px;\n        `;\n        document.body.appendChild(dragPreview);\n      }\n    }\n  }, [isDragging, touchMove, sound.name]);\n\n  // ドラッグプレビューの更新\n  React.useEffect(() => {\n    if (isDragging) {\n      createDragPreview();\n    }\n  }, [isDragging, touchMove, createDragPreview]);\n\n  return (\n    <div\n      className={`sound-item ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <div className=\"sound-info\">\n        <h4>{sound.name}</h4>\n        <div className=\"sound-tags\">\n          {sound.tags.map((tag, index) => (\n            <span key={index} className=\"sound-tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"sound-actions\">\n        <button \n          className=\"play-sound-btn\"\n          onClick={playSound}\n          disabled={isPlaying}\n        >\n          {isPlaying ? '⏸️' : '▶️'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst TrackHeader = ({ track, onRemove, trackHeight, trackIndex }) => {\n  // トラック名を表示番号と元の名前で構成\n  const displayName = `トラック ${trackIndex + 1}`;\n  \n  return (\n    <div className=\"track-header\" style={{ height: trackHeight }}>\n      <div className=\"track-info\">\n        <h4>{displayName}</h4>\n        <div className=\"track-actions\">\n          <button \n            className=\"remove-track-btn\"\n            onClick={() => onRemove(track.id)}\n            title={`${displayName}を削除`}\n            aria-label={`${displayName}を削除`}\n          >\n            🗑️\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Timeline = ({ bpm, isTimeMode, secondsPerBeat }) => {\n  if (isTimeMode) {\n    // 秒数モード: 1拍の秒数に基づいて表示\n    const totalBeats = Math.ceil(TIME_MODE_TOTAL_SECONDS / secondsPerBeat);\n    const beatWidthInPixels = secondsPerBeat * PIXELS_PER_SECOND;\n    \n    return (\n      <div className=\"timeline\" style={{ minWidth: totalBeats * beatWidthInPixels }}>\n        {Array.from({ length: Math.ceil(totalBeats / 4) }, (_, intervalIndex) => (\n          <div key={intervalIndex} className=\"time-interval\">\n            <div className=\"time-number\">{(intervalIndex * 4 * secondsPerBeat).toFixed(1)}秒</div>\n            <div className=\"time-marks\">\n              {Array.from({ length: Math.min(4, totalBeats - intervalIndex * 4) }, (_, beatIndex) => (\n                <div \n                  key={beatIndex} \n                  className=\"time-mark\"\n                  style={{ width: beatWidthInPixels }}\n                >\n                  <div className=\"time-main\">\n                    {((intervalIndex * 4 + beatIndex + 1) * secondsPerBeat).toFixed(1)}s\n                  </div>\n                  <div className=\"time-sub\">\n                    <div className=\"sub-time-marker\">・</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    // 拍子モード: 従来の小節・拍表示\n    const measures = TOTAL_MEASURES; // 16小節表示\n    const beatsPerMeasure = BEATS_PER_MEASURE; // 4/4拍子\n\n    return (\n      <div className=\"timeline\" style={{ minWidth: TOTAL_MEASURES * MEASURE_WIDTH }}>\n        {Array.from({ length: measures }, (_, measureIndex) => (\n          <div key={measureIndex} className=\"measure\">\n            <div className=\"measure-number\">{measureIndex + 1}</div>\n            <div className=\"beats\">\n              {Array.from({ length: beatsPerMeasure }, (_, beatIndex) => (\n                <div \n                  key={beatIndex} \n                  className=\"beat\"\n                  style={{ width: BEAT_WIDTH }}\n                >\n                  <div className=\"beat-main\">\n                    {beatIndex + 1}\n                  </div>\n                  <div className=\"beat-sub\">\n                    <div className=\"sub-beat-marker\">・</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n};\n\nconst Track = ({ track, onDrop, onDragOver, onRemoveClip, onClipDragStart, onDragEnd, trackHeight, updateDragPreview, isTimeMode, secondsPerBeat }) => {\n  const handleDrop = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const timePosition = e.clientX - rect.left;\n    onDrop(e, track.id, timePosition);\n  };\n\n  // モバイルドロップイベントの処理\n  const handleMobileDrop = useCallback((e) => {\n    const { trackId, timePosition, sound } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'application/json') {\n            return JSON.stringify(sound);\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, trackId, timePosition);\n  }, [onDrop]);\n\n  // モバイルクリップ移動イベントの処理\n  const handleMobileClipMove = useCallback((e) => {\n    const { clip, newTrackId, timePosition } = e.detail;\n    \n    // 模擬的なドロップイベントを作成\n    const mockDropEvent = {\n      preventDefault: () => {},\n      dataTransfer: {\n        getData: (type) => {\n          if (type === 'text/plain') {\n            return `existing-clip-${clip.id}`;\n          }\n          return '';\n        }\n      }\n    };\n    \n    onDrop(mockDropEvent, newTrackId, timePosition);\n  }, [onDrop]);\n\n  const handleUpdateDragPreview = useCallback((e) => {\n    const { clientX, trackElement } = e.detail;\n    // 親コンポーネントのupdateDragPreview関数を呼び出し\n    if (typeof updateDragPreview === 'function') {\n      updateDragPreview(clientX, trackElement);\n    }\n  }, [updateDragPreview]);\n\n  React.useEffect(() => {\n    const trackElement = document.querySelector(`[data-track-id=\"${track.id}\"]`);\n    if (trackElement) {\n      trackElement.addEventListener('mobileDrop', handleMobileDrop);\n      trackElement.addEventListener('mobileClipMove', handleMobileClipMove);\n      trackElement.addEventListener('updateDragPreview', handleUpdateDragPreview);\n      return () => {\n        trackElement.removeEventListener('mobileDrop', handleMobileDrop);\n        trackElement.removeEventListener('mobileClipMove', handleMobileClipMove);\n        trackElement.removeEventListener('updateDragPreview', handleUpdateDragPreview);\n      };\n    }\n  }, [track.id, handleMobileDrop, handleMobileClipMove, handleUpdateDragPreview]);\n\n  return (\n    <div \n      className=\"track\"\n      style={{ height: trackHeight }}\n      data-track-id={track.id}\n      onDrop={handleDrop}\n      onDragOver={onDragOver}\n    >\n      <div className=\"track-grid\">\n        {isTimeMode ? (\n          // 秒数モード: 秒単位でグリッド線を表示\n          <>\n            {/* 1秒ごとの主要な境界線 */}\n            {Array.from({ length: TIME_MODE_TOTAL_SECONDS }, (_, index) => (\n              <div \n                key={`time-main-${index}`} \n                className={`beat-line beat-line-main ${index === 0 ? 'first-beat' : ''} ${index % 5 === 0 ? 'measure-start' : ''}`} \n                style={{ left: index * PIXELS_PER_SECOND }} \n              />\n            ))}\n            {/* 0.5秒ごとの副次的な境界線 */}\n            {Array.from({ length: TIME_MODE_TOTAL_SECONDS * 2 }, (_, index) => {\n              if (index % 2 === 1) { // 奇数のインデックス（0.5秒、1.5秒など）\n                return (\n                  <div \n                    key={`time-sub-${index}`} \n                    className=\"beat-line beat-line-sub\" \n                    style={{ left: (index * PIXELS_PER_SECOND) / 2 }} \n                  />\n                );\n              }\n              return null;\n            })}\n          </>\n        ) : (\n          // 拍子モード: 従来の拍・小節グリッド\n          <>\n            {/* 表拍（主要な拍）の境界線を表示 */}\n            {Array.from({ length: TOTAL_BEATS }, (_, index) => {\n              const isFirstBeat = index === 0;\n              const isMeasureStart = index % BEATS_PER_MEASURE === 0;\n              const className = `beat-line beat-line-main ${isFirstBeat ? 'first-beat' : ''} ${isMeasureStart ? 'measure-start' : ''}`;\n              return (\n                <div key={`main-${index}`} className={className} style={{ left: index * BEAT_WIDTH }} />\n              );\n            })}\n            {/* 裏拍（8分音符）の境界線を表示 */}\n            {Array.from({ length: TOTAL_BEATS }, (_, index) => (\n              <div key={`sub-${index}`} className=\"beat-line beat-line-sub\" style={{ left: index * BEAT_WIDTH + SUB_BEAT_WIDTH }} />\n            ))}\n          </>\n        )}\n      </div>\n      \n      {track.clips.map(clip => (\n        <AudioClip\n          key={clip.id}\n          clip={clip}\n          trackId={track.id}\n          onRemove={() => onRemoveClip(track.id, clip.id)}\n          onDragStart={onClipDragStart}\n          onDragEnd={onDragEnd}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AudioClip = ({ clip, trackId, onRemove, onDragStart, onDragEnd }) => {\n  const [waveformData, setWaveformData] = React.useState([]);\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [touchStart, setTouchStart] = React.useState(null);\n  const [touchMove, setTouchMove] = React.useState(null);\n\n  React.useEffect(() => {\n    // clip.soundData が存在する場合のみ波形データを生成\n    if (clip && clip.soundData) {\n      // 簡単な波形データ生成（実際の実装では音声解析が必要）\n      const generateWaveform = () => {\n        const points = 20; // 波形のポイント数\n        const data = [];\n        for (let i = 0; i < points; i++) {\n          data.push(Math.random() * 0.8 + 0.2); // 0.2-1.0の間のランダム値\n        }\n        setWaveformData(data);\n      };\n\n      generateWaveform();\n    }\n  }, [clip, clip?.soundData]);\n\n  // clip.soundData の安全性をチェック（Hooksの後で）\n  if (!clip || !clip.soundData) {\n    console.warn('無効なクリップデータ:', clip);\n    return null; // 無効なクリップは表示しない\n  }\n\n  const handleDragStart = (e) => {\n    e.stopPropagation(); // イベントバブリングを防ぐ\n    \n    // ドラッグデータに既存クリップの情報を設定\n    e.dataTransfer.setData('text/plain', `existing-clip-${clip.id}`);\n    e.dataTransfer.effectAllowed = 'move';\n    \n    // onDragStartコールバックを呼び出し（マウス位置とクリップ要素を渡す）\n    onDragStart(clip, trackId, e.clientX, e.currentTarget);\n  };\n\n  const handleDragEnd = (e) => {\n    // ドラッグ終了時にクリーンアップを呼び出し\n    if (onDragEnd) {\n      onDragEnd(e);\n    }\n  };\n\n  // タッチイベント対応（クリップの移動）\n  const handleTouchStart = (e) => {\n    e.stopPropagation();\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n    setIsDragging(false);\n    \n    // ドラッグモードは移動が確定してから有効化\n  };\n\n  const handleTouchMove = (e) => {\n    if (!touchStart) return;\n    \n    const touch = e.touches[0];\n    const currentPos = { x: touch.clientX, y: touch.clientY };\n    setTouchMove(currentPos);\n    \n    // ドラッグ開始の判定（10px以上移動）\n    const deltaX = Math.abs(currentPos.x - touchStart.x);\n    const deltaY = Math.abs(currentPos.y - touchStart.y);\n    \n    if (!isDragging && (deltaX > 10 || deltaY > 10)) {\n      setIsDragging(true);\n      // スクロールを一時的に無効化（移動が確定してから）\n      document.body.classList.add('dragging');\n      onDragStart(clip, trackId, touchStart.x, e.currentTarget);\n    }\n    \n    if (isDragging) {\n      // passiveイベントではpreventDefaultが使えないので、touchActionで制御\n      \n      // ドロップターゲットのハイライト\n      const elementBelow = document.elementFromPoint(currentPos.x, currentPos.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      // 既存のハイライトを削除\n      document.querySelectorAll('.track').forEach(track => {\n        track.classList.remove('drag-over');\n      });\n      \n      // 新しいハイライトを追加（自分のトラック以外も含む）\n      if (trackElement) {\n        trackElement.classList.add('drag-over');\n        \n        // ドラッグプレビューも更新（onDragStart時と同様のロジック）\n        if (onDragStart) {\n          // 親コンポーネントのupdateDragPreview関数を呼び出すためのカスタムイベント\n          const dragPreviewEvent = new CustomEvent('updateDragPreview', {\n            detail: {\n              clientX: currentPos.x,\n              trackElement: trackElement\n            }\n          });\n          trackElement.dispatchEvent(dragPreviewEvent);\n        }\n      }\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    if (isDragging && touchMove) {\n      // ドロップ処理\n      const elementBelow = document.elementFromPoint(touchMove.x, touchMove.y);\n      const trackElement = elementBelow?.closest('.track');\n      \n      if (trackElement) {\n        const newTrackId = parseInt(trackElement.dataset.trackId);\n        const rect = trackElement.getBoundingClientRect();\n        const timePosition = touchMove.x - rect.left;\n        \n        // 既存クリップの移動イベントを発火\n        const moveEvent = new CustomEvent('mobileClipMove', {\n          detail: {\n            clip,\n            originalTrackId: trackId,\n            newTrackId,\n            timePosition\n          }\n        });\n        trackElement.dispatchEvent(moveEvent);\n      }\n    }\n    \n    // クリーンアップ\n    setTouchStart(null);\n    setTouchMove(null);\n    setIsDragging(false);\n    document.body.classList.remove('dragging');\n    \n    // ハイライトを削除\n    document.querySelectorAll('.track').forEach(track => {\n      track.classList.remove('drag-over');\n    });\n    \n    // ドラッグプレビューをクリア（親コンポーネントの状態もリセット）\n    if (onDragEnd) {\n      onDragEnd(null); // nullを渡してガード条件を満たす\n    }\n  };\n\n  return (\n    <div \n      className={`audio-clip ${isDragging ? 'dragging' : ''}`}\n      draggable=\"true\"\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n      style={{\n        left: clip.startTime,\n        width: isFinite(clip.duration) && clip.duration > 0 ? clip.duration : 400 // デフォルト1小節\n      }}\n    >\n      <div className=\"clip-header\">\n        <span className=\"clip-name\">{clip.soundData?.name || '不明な音素材'}</span>\n        <button \n          className=\"remove-clip-btn\"\n          onClick={onRemove}\n          title=\"クリップを削除\"\n        >\n          ×\n        </button>\n      </div>\n      <div className=\"clip-waveform\">\n        {waveformData.length > 0 ? (\n          <svg className=\"waveform-svg\" width=\"100%\" height=\"30\">\n            {waveformData.map((height, index) => (\n              <rect\n                key={index}\n                x={`${(index / waveformData.length) * 100}%`}\n                y={`${(1 - height) * 15}`}\n                width={`${80 / waveformData.length}%`}\n                height={`${height * 30}`}\n                fill=\"rgba(255, 255, 255, 0.8)\"\n              />\n            ))}\n          </svg>\n        ) : (\n          <div className=\"waveform-placeholder\">🔊</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Playhead = ({ currentTime }) => {\n  // currentTimeが有効な数値かチェック\n  const safeCurrentTime = isFinite(currentTime) && currentTime >= 0 ? currentTime : 0;\n  \n  return (\n    <div \n      className=\"playhead\"\n      style={{ left: safeCurrentTime }}\n    />\n  );\n};\n\nexport default DAWPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}